/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetProductResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProductResponseAllOf{}

// GetProductResponseAllOf struct for GetProductResponseAllOf
type GetProductResponseAllOf struct {
	Data []Product `json:"data,omitempty"`
}

// NewGetProductResponseAllOf instantiates a new GetProductResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProductResponseAllOf() *GetProductResponseAllOf {
	this := GetProductResponseAllOf{}
	return &this
}

// NewGetProductResponseAllOfWithDefaults instantiates a new GetProductResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProductResponseAllOfWithDefaults() *GetProductResponseAllOf {
	this := GetProductResponseAllOf{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetProductResponseAllOf) GetData() []Product {
	if o == nil || IsNil(o.Data) {
		var ret []Product
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductResponseAllOf) GetDataOk() ([]Product, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetProductResponseAllOf) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Product and assigns it to the Data field.
func (o *GetProductResponseAllOf) SetData(v []Product) {
	o.Data = v
}

func (o GetProductResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProductResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGetProductResponseAllOf struct {
	value *GetProductResponseAllOf
	isSet bool
}

func (v NullableGetProductResponseAllOf) Get() *GetProductResponseAllOf {
	return v.value
}

func (v *NullableGetProductResponseAllOf) Set(val *GetProductResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProductResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProductResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProductResponseAllOf(val *GetProductResponseAllOf) *NullableGetProductResponseAllOf {
	return &NullableGetProductResponseAllOf{value: val, isSet: true}
}

func (v NullableGetProductResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProductResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


