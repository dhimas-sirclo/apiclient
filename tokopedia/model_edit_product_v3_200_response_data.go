/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the EditProductV3200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditProductV3200ResponseData{}

// EditProductV3200ResponseData struct for EditProductV3200ResponseData
type EditProductV3200ResponseData struct {
	TotalData *int64 `json:"total_data,omitempty"`
	SuccessData *int64 `json:"success_data,omitempty"`
	FailData *int64 `json:"fail_data,omitempty"`
	SuccessRowsData []EditProductV3200ResponseDataSuccessRowsDataInner `json:"success_rows_data,omitempty"`
}

// NewEditProductV3200ResponseData instantiates a new EditProductV3200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditProductV3200ResponseData() *EditProductV3200ResponseData {
	this := EditProductV3200ResponseData{}
	return &this
}

// NewEditProductV3200ResponseDataWithDefaults instantiates a new EditProductV3200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditProductV3200ResponseDataWithDefaults() *EditProductV3200ResponseData {
	this := EditProductV3200ResponseData{}
	return &this
}

// GetTotalData returns the TotalData field value if set, zero value otherwise.
func (o *EditProductV3200ResponseData) GetTotalData() int64 {
	if o == nil || IsNil(o.TotalData) {
		var ret int64
		return ret
	}
	return *o.TotalData
}

// GetTotalDataOk returns a tuple with the TotalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3200ResponseData) GetTotalDataOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalData) {
		return nil, false
	}
	return o.TotalData, true
}

// HasTotalData returns a boolean if a field has been set.
func (o *EditProductV3200ResponseData) HasTotalData() bool {
	if o != nil && !IsNil(o.TotalData) {
		return true
	}

	return false
}

// SetTotalData gets a reference to the given int64 and assigns it to the TotalData field.
func (o *EditProductV3200ResponseData) SetTotalData(v int64) {
	o.TotalData = &v
}

// GetSuccessData returns the SuccessData field value if set, zero value otherwise.
func (o *EditProductV3200ResponseData) GetSuccessData() int64 {
	if o == nil || IsNil(o.SuccessData) {
		var ret int64
		return ret
	}
	return *o.SuccessData
}

// GetSuccessDataOk returns a tuple with the SuccessData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3200ResponseData) GetSuccessDataOk() (*int64, bool) {
	if o == nil || IsNil(o.SuccessData) {
		return nil, false
	}
	return o.SuccessData, true
}

// HasSuccessData returns a boolean if a field has been set.
func (o *EditProductV3200ResponseData) HasSuccessData() bool {
	if o != nil && !IsNil(o.SuccessData) {
		return true
	}

	return false
}

// SetSuccessData gets a reference to the given int64 and assigns it to the SuccessData field.
func (o *EditProductV3200ResponseData) SetSuccessData(v int64) {
	o.SuccessData = &v
}

// GetFailData returns the FailData field value if set, zero value otherwise.
func (o *EditProductV3200ResponseData) GetFailData() int64 {
	if o == nil || IsNil(o.FailData) {
		var ret int64
		return ret
	}
	return *o.FailData
}

// GetFailDataOk returns a tuple with the FailData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3200ResponseData) GetFailDataOk() (*int64, bool) {
	if o == nil || IsNil(o.FailData) {
		return nil, false
	}
	return o.FailData, true
}

// HasFailData returns a boolean if a field has been set.
func (o *EditProductV3200ResponseData) HasFailData() bool {
	if o != nil && !IsNil(o.FailData) {
		return true
	}

	return false
}

// SetFailData gets a reference to the given int64 and assigns it to the FailData field.
func (o *EditProductV3200ResponseData) SetFailData(v int64) {
	o.FailData = &v
}

// GetSuccessRowsData returns the SuccessRowsData field value if set, zero value otherwise.
func (o *EditProductV3200ResponseData) GetSuccessRowsData() []EditProductV3200ResponseDataSuccessRowsDataInner {
	if o == nil || IsNil(o.SuccessRowsData) {
		var ret []EditProductV3200ResponseDataSuccessRowsDataInner
		return ret
	}
	return o.SuccessRowsData
}

// GetSuccessRowsDataOk returns a tuple with the SuccessRowsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3200ResponseData) GetSuccessRowsDataOk() ([]EditProductV3200ResponseDataSuccessRowsDataInner, bool) {
	if o == nil || IsNil(o.SuccessRowsData) {
		return nil, false
	}
	return o.SuccessRowsData, true
}

// HasSuccessRowsData returns a boolean if a field has been set.
func (o *EditProductV3200ResponseData) HasSuccessRowsData() bool {
	if o != nil && !IsNil(o.SuccessRowsData) {
		return true
	}

	return false
}

// SetSuccessRowsData gets a reference to the given []EditProductV3200ResponseDataSuccessRowsDataInner and assigns it to the SuccessRowsData field.
func (o *EditProductV3200ResponseData) SetSuccessRowsData(v []EditProductV3200ResponseDataSuccessRowsDataInner) {
	o.SuccessRowsData = v
}

func (o EditProductV3200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditProductV3200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalData) {
		toSerialize["total_data"] = o.TotalData
	}
	if !IsNil(o.SuccessData) {
		toSerialize["success_data"] = o.SuccessData
	}
	if !IsNil(o.FailData) {
		toSerialize["fail_data"] = o.FailData
	}
	if !IsNil(o.SuccessRowsData) {
		toSerialize["success_rows_data"] = o.SuccessRowsData
	}
	return toSerialize, nil
}

type NullableEditProductV3200ResponseData struct {
	value *EditProductV3200ResponseData
	isSet bool
}

func (v NullableEditProductV3200ResponseData) Get() *EditProductV3200ResponseData {
	return v.value
}

func (v *NullableEditProductV3200ResponseData) Set(val *EditProductV3200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableEditProductV3200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableEditProductV3200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditProductV3200ResponseData(val *EditProductV3200ResponseData) *NullableEditProductV3200ResponseData {
	return &NullableEditProductV3200ResponseData{value: val, isSet: true}
}

func (v NullableEditProductV3200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditProductV3200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


