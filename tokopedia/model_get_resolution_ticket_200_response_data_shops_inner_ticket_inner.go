/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetResolutionTicket200ResponseDataShopsInnerTicketInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetResolutionTicket200ResponseDataShopsInnerTicketInner{}

// GetResolutionTicket200ResponseDataShopsInnerTicketInner struct for GetResolutionTicket200ResponseDataShopsInnerTicketInner
type GetResolutionTicket200ResponseDataShopsInnerTicketInner struct {
	Id *int64 `json:"id,omitempty"`
	ProblemType *string `json:"problem_type,omitempty"`
	Status *string `json:"status,omitempty"`
	// format: YYYY-MM-DD 
	OpenDate *string `json:"open_date,omitempty"`
	// format: YYYY-MM-DD 
	SlaDate *string `json:"sla_date,omitempty"`
	// format: YYYY-MM-DD 
	CloseDate *string `json:"close_date,omitempty"`
	InvoiceNumber *string `json:"invoice_number,omitempty"`
	Solution *string `json:"solution,omitempty"`
	ComplaintProduct []GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner `json:"complaint_product,omitempty"`
	Fault *string `json:"fault,omitempty"`
	ShippingAmt *float64 `json:"shipping_amt,omitempty"`
	TotalIssuedFunds *float64 `json:"total_issued_funds,omitempty"`
}

// NewGetResolutionTicket200ResponseDataShopsInnerTicketInner instantiates a new GetResolutionTicket200ResponseDataShopsInnerTicketInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResolutionTicket200ResponseDataShopsInnerTicketInner() *GetResolutionTicket200ResponseDataShopsInnerTicketInner {
	this := GetResolutionTicket200ResponseDataShopsInnerTicketInner{}
	return &this
}

// NewGetResolutionTicket200ResponseDataShopsInnerTicketInnerWithDefaults instantiates a new GetResolutionTicket200ResponseDataShopsInnerTicketInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResolutionTicket200ResponseDataShopsInnerTicketInnerWithDefaults() *GetResolutionTicket200ResponseDataShopsInnerTicketInner {
	this := GetResolutionTicket200ResponseDataShopsInnerTicketInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetId(v int64) {
	o.Id = &v
}

// GetProblemType returns the ProblemType field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetProblemType() string {
	if o == nil || IsNil(o.ProblemType) {
		var ret string
		return ret
	}
	return *o.ProblemType
}

// GetProblemTypeOk returns a tuple with the ProblemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetProblemTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProblemType) {
		return nil, false
	}
	return o.ProblemType, true
}

// HasProblemType returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasProblemType() bool {
	if o != nil && !IsNil(o.ProblemType) {
		return true
	}

	return false
}

// SetProblemType gets a reference to the given string and assigns it to the ProblemType field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetProblemType(v string) {
	o.ProblemType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetStatus(v string) {
	o.Status = &v
}

// GetOpenDate returns the OpenDate field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetOpenDate() string {
	if o == nil || IsNil(o.OpenDate) {
		var ret string
		return ret
	}
	return *o.OpenDate
}

// GetOpenDateOk returns a tuple with the OpenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetOpenDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpenDate) {
		return nil, false
	}
	return o.OpenDate, true
}

// HasOpenDate returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasOpenDate() bool {
	if o != nil && !IsNil(o.OpenDate) {
		return true
	}

	return false
}

// SetOpenDate gets a reference to the given string and assigns it to the OpenDate field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetOpenDate(v string) {
	o.OpenDate = &v
}

// GetSlaDate returns the SlaDate field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetSlaDate() string {
	if o == nil || IsNil(o.SlaDate) {
		var ret string
		return ret
	}
	return *o.SlaDate
}

// GetSlaDateOk returns a tuple with the SlaDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetSlaDateOk() (*string, bool) {
	if o == nil || IsNil(o.SlaDate) {
		return nil, false
	}
	return o.SlaDate, true
}

// HasSlaDate returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasSlaDate() bool {
	if o != nil && !IsNil(o.SlaDate) {
		return true
	}

	return false
}

// SetSlaDate gets a reference to the given string and assigns it to the SlaDate field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetSlaDate(v string) {
	o.SlaDate = &v
}

// GetCloseDate returns the CloseDate field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetCloseDate() string {
	if o == nil || IsNil(o.CloseDate) {
		var ret string
		return ret
	}
	return *o.CloseDate
}

// GetCloseDateOk returns a tuple with the CloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.CloseDate) {
		return nil, false
	}
	return o.CloseDate, true
}

// HasCloseDate returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasCloseDate() bool {
	if o != nil && !IsNil(o.CloseDate) {
		return true
	}

	return false
}

// SetCloseDate gets a reference to the given string and assigns it to the CloseDate field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetCloseDate(v string) {
	o.CloseDate = &v
}

// GetInvoiceNumber returns the InvoiceNumber field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetInvoiceNumber() string {
	if o == nil || IsNil(o.InvoiceNumber) {
		var ret string
		return ret
	}
	return *o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceNumber) {
		return nil, false
	}
	return o.InvoiceNumber, true
}

// HasInvoiceNumber returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasInvoiceNumber() bool {
	if o != nil && !IsNil(o.InvoiceNumber) {
		return true
	}

	return false
}

// SetInvoiceNumber gets a reference to the given string and assigns it to the InvoiceNumber field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetInvoiceNumber(v string) {
	o.InvoiceNumber = &v
}

// GetSolution returns the Solution field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetSolution() string {
	if o == nil || IsNil(o.Solution) {
		var ret string
		return ret
	}
	return *o.Solution
}

// GetSolutionOk returns a tuple with the Solution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetSolutionOk() (*string, bool) {
	if o == nil || IsNil(o.Solution) {
		return nil, false
	}
	return o.Solution, true
}

// HasSolution returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasSolution() bool {
	if o != nil && !IsNil(o.Solution) {
		return true
	}

	return false
}

// SetSolution gets a reference to the given string and assigns it to the Solution field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetSolution(v string) {
	o.Solution = &v
}

// GetComplaintProduct returns the ComplaintProduct field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetComplaintProduct() []GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner {
	if o == nil || IsNil(o.ComplaintProduct) {
		var ret []GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner
		return ret
	}
	return o.ComplaintProduct
}

// GetComplaintProductOk returns a tuple with the ComplaintProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetComplaintProductOk() ([]GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner, bool) {
	if o == nil || IsNil(o.ComplaintProduct) {
		return nil, false
	}
	return o.ComplaintProduct, true
}

// HasComplaintProduct returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasComplaintProduct() bool {
	if o != nil && !IsNil(o.ComplaintProduct) {
		return true
	}

	return false
}

// SetComplaintProduct gets a reference to the given []GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner and assigns it to the ComplaintProduct field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetComplaintProduct(v []GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) {
	o.ComplaintProduct = v
}

// GetFault returns the Fault field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetFault() string {
	if o == nil || IsNil(o.Fault) {
		var ret string
		return ret
	}
	return *o.Fault
}

// GetFaultOk returns a tuple with the Fault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetFaultOk() (*string, bool) {
	if o == nil || IsNil(o.Fault) {
		return nil, false
	}
	return o.Fault, true
}

// HasFault returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasFault() bool {
	if o != nil && !IsNil(o.Fault) {
		return true
	}

	return false
}

// SetFault gets a reference to the given string and assigns it to the Fault field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetFault(v string) {
	o.Fault = &v
}

// GetShippingAmt returns the ShippingAmt field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetShippingAmt() float64 {
	if o == nil || IsNil(o.ShippingAmt) {
		var ret float64
		return ret
	}
	return *o.ShippingAmt
}

// GetShippingAmtOk returns a tuple with the ShippingAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetShippingAmtOk() (*float64, bool) {
	if o == nil || IsNil(o.ShippingAmt) {
		return nil, false
	}
	return o.ShippingAmt, true
}

// HasShippingAmt returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasShippingAmt() bool {
	if o != nil && !IsNil(o.ShippingAmt) {
		return true
	}

	return false
}

// SetShippingAmt gets a reference to the given float64 and assigns it to the ShippingAmt field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetShippingAmt(v float64) {
	o.ShippingAmt = &v
}

// GetTotalIssuedFunds returns the TotalIssuedFunds field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetTotalIssuedFunds() float64 {
	if o == nil || IsNil(o.TotalIssuedFunds) {
		var ret float64
		return ret
	}
	return *o.TotalIssuedFunds
}

// GetTotalIssuedFundsOk returns a tuple with the TotalIssuedFunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) GetTotalIssuedFundsOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalIssuedFunds) {
		return nil, false
	}
	return o.TotalIssuedFunds, true
}

// HasTotalIssuedFunds returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) HasTotalIssuedFunds() bool {
	if o != nil && !IsNil(o.TotalIssuedFunds) {
		return true
	}

	return false
}

// SetTotalIssuedFunds gets a reference to the given float64 and assigns it to the TotalIssuedFunds field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInner) SetTotalIssuedFunds(v float64) {
	o.TotalIssuedFunds = &v
}

func (o GetResolutionTicket200ResponseDataShopsInnerTicketInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetResolutionTicket200ResponseDataShopsInnerTicketInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProblemType) {
		toSerialize["problem_type"] = o.ProblemType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.OpenDate) {
		toSerialize["open_date"] = o.OpenDate
	}
	if !IsNil(o.SlaDate) {
		toSerialize["sla_date"] = o.SlaDate
	}
	if !IsNil(o.CloseDate) {
		toSerialize["close_date"] = o.CloseDate
	}
	if !IsNil(o.InvoiceNumber) {
		toSerialize["invoice_number"] = o.InvoiceNumber
	}
	if !IsNil(o.Solution) {
		toSerialize["solution"] = o.Solution
	}
	if !IsNil(o.ComplaintProduct) {
		toSerialize["complaint_product"] = o.ComplaintProduct
	}
	if !IsNil(o.Fault) {
		toSerialize["fault"] = o.Fault
	}
	if !IsNil(o.ShippingAmt) {
		toSerialize["shipping_amt"] = o.ShippingAmt
	}
	if !IsNil(o.TotalIssuedFunds) {
		toSerialize["total_issued_funds"] = o.TotalIssuedFunds
	}
	return toSerialize, nil
}

type NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner struct {
	value *GetResolutionTicket200ResponseDataShopsInnerTicketInner
	isSet bool
}

func (v NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner) Get() *GetResolutionTicket200ResponseDataShopsInnerTicketInner {
	return v.value
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner) Set(val *GetResolutionTicket200ResponseDataShopsInnerTicketInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResolutionTicket200ResponseDataShopsInnerTicketInner(val *GetResolutionTicket200ResponseDataShopsInnerTicketInner) *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner {
	return &NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner{value: val, isSet: true}
}

func (v NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


