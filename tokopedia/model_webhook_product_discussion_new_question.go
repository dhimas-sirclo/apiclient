/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the WebhookProductDiscussionNewQuestion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookProductDiscussionNewQuestion{}

// WebhookProductDiscussionNewQuestion struct for WebhookProductDiscussionNewQuestion
type WebhookProductDiscussionNewQuestion struct {
	FsId *int64 `json:"fs_id,omitempty"`
	DiscussionType *string `json:"discussion_type,omitempty"`
	DiscussionData *WebhookProductDiscussionNewQuestionDiscussionData `json:"discussion_data,omitempty"`
}

// NewWebhookProductDiscussionNewQuestion instantiates a new WebhookProductDiscussionNewQuestion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookProductDiscussionNewQuestion() *WebhookProductDiscussionNewQuestion {
	this := WebhookProductDiscussionNewQuestion{}
	var discussionType string = "NewQuestion"
	this.DiscussionType = &discussionType
	return &this
}

// NewWebhookProductDiscussionNewQuestionWithDefaults instantiates a new WebhookProductDiscussionNewQuestion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookProductDiscussionNewQuestionWithDefaults() *WebhookProductDiscussionNewQuestion {
	this := WebhookProductDiscussionNewQuestion{}
	var discussionType string = "NewQuestion"
	this.DiscussionType = &discussionType
	return &this
}

// GetFsId returns the FsId field value if set, zero value otherwise.
func (o *WebhookProductDiscussionNewQuestion) GetFsId() int64 {
	if o == nil || IsNil(o.FsId) {
		var ret int64
		return ret
	}
	return *o.FsId
}

// GetFsIdOk returns a tuple with the FsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductDiscussionNewQuestion) GetFsIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FsId) {
		return nil, false
	}
	return o.FsId, true
}

// HasFsId returns a boolean if a field has been set.
func (o *WebhookProductDiscussionNewQuestion) HasFsId() bool {
	if o != nil && !IsNil(o.FsId) {
		return true
	}

	return false
}

// SetFsId gets a reference to the given int64 and assigns it to the FsId field.
func (o *WebhookProductDiscussionNewQuestion) SetFsId(v int64) {
	o.FsId = &v
}

// GetDiscussionType returns the DiscussionType field value if set, zero value otherwise.
func (o *WebhookProductDiscussionNewQuestion) GetDiscussionType() string {
	if o == nil || IsNil(o.DiscussionType) {
		var ret string
		return ret
	}
	return *o.DiscussionType
}

// GetDiscussionTypeOk returns a tuple with the DiscussionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductDiscussionNewQuestion) GetDiscussionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscussionType) {
		return nil, false
	}
	return o.DiscussionType, true
}

// HasDiscussionType returns a boolean if a field has been set.
func (o *WebhookProductDiscussionNewQuestion) HasDiscussionType() bool {
	if o != nil && !IsNil(o.DiscussionType) {
		return true
	}

	return false
}

// SetDiscussionType gets a reference to the given string and assigns it to the DiscussionType field.
func (o *WebhookProductDiscussionNewQuestion) SetDiscussionType(v string) {
	o.DiscussionType = &v
}

// GetDiscussionData returns the DiscussionData field value if set, zero value otherwise.
func (o *WebhookProductDiscussionNewQuestion) GetDiscussionData() WebhookProductDiscussionNewQuestionDiscussionData {
	if o == nil || IsNil(o.DiscussionData) {
		var ret WebhookProductDiscussionNewQuestionDiscussionData
		return ret
	}
	return *o.DiscussionData
}

// GetDiscussionDataOk returns a tuple with the DiscussionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductDiscussionNewQuestion) GetDiscussionDataOk() (*WebhookProductDiscussionNewQuestionDiscussionData, bool) {
	if o == nil || IsNil(o.DiscussionData) {
		return nil, false
	}
	return o.DiscussionData, true
}

// HasDiscussionData returns a boolean if a field has been set.
func (o *WebhookProductDiscussionNewQuestion) HasDiscussionData() bool {
	if o != nil && !IsNil(o.DiscussionData) {
		return true
	}

	return false
}

// SetDiscussionData gets a reference to the given WebhookProductDiscussionNewQuestionDiscussionData and assigns it to the DiscussionData field.
func (o *WebhookProductDiscussionNewQuestion) SetDiscussionData(v WebhookProductDiscussionNewQuestionDiscussionData) {
	o.DiscussionData = &v
}

func (o WebhookProductDiscussionNewQuestion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookProductDiscussionNewQuestion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FsId) {
		toSerialize["fs_id"] = o.FsId
	}
	if !IsNil(o.DiscussionType) {
		toSerialize["discussion_type"] = o.DiscussionType
	}
	if !IsNil(o.DiscussionData) {
		toSerialize["discussion_data"] = o.DiscussionData
	}
	return toSerialize, nil
}

type NullableWebhookProductDiscussionNewQuestion struct {
	value *WebhookProductDiscussionNewQuestion
	isSet bool
}

func (v NullableWebhookProductDiscussionNewQuestion) Get() *WebhookProductDiscussionNewQuestion {
	return v.value
}

func (v *NullableWebhookProductDiscussionNewQuestion) Set(val *WebhookProductDiscussionNewQuestion) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookProductDiscussionNewQuestion) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookProductDiscussionNewQuestion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookProductDiscussionNewQuestion(val *WebhookProductDiscussionNewQuestion) *NullableWebhookProductDiscussionNewQuestion {
	return &NullableWebhookProductDiscussionNewQuestion{value: val, isSet: true}
}

func (v NullableWebhookProductDiscussionNewQuestion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookProductDiscussionNewQuestion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


