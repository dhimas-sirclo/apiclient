/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the RequestPickup200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestPickup200ResponseData{}

// RequestPickup200ResponseData struct for RequestPickup200ResponseData
type RequestPickup200ResponseData struct {
	// Order Unique Identifier
	OrderId *int64 `json:"order_id,omitempty"`
	// Shop Unique Identifier
	ShopId *int64 `json:"shop_id,omitempty"`
	// Request Timestamp (format: 2018-06-12 10:24:00) 
	RequestTime *string `json:"request_time,omitempty"`
	// Result Message
	Result *string `json:"result,omitempty"`
}

// NewRequestPickup200ResponseData instantiates a new RequestPickup200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestPickup200ResponseData() *RequestPickup200ResponseData {
	this := RequestPickup200ResponseData{}
	return &this
}

// NewRequestPickup200ResponseDataWithDefaults instantiates a new RequestPickup200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestPickup200ResponseDataWithDefaults() *RequestPickup200ResponseData {
	this := RequestPickup200ResponseData{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *RequestPickup200ResponseData) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPickup200ResponseData) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *RequestPickup200ResponseData) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *RequestPickup200ResponseData) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *RequestPickup200ResponseData) GetShopId() int64 {
	if o == nil || IsNil(o.ShopId) {
		var ret int64
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPickup200ResponseData) GetShopIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *RequestPickup200ResponseData) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int64 and assigns it to the ShopId field.
func (o *RequestPickup200ResponseData) SetShopId(v int64) {
	o.ShopId = &v
}

// GetRequestTime returns the RequestTime field value if set, zero value otherwise.
func (o *RequestPickup200ResponseData) GetRequestTime() string {
	if o == nil || IsNil(o.RequestTime) {
		var ret string
		return ret
	}
	return *o.RequestTime
}

// GetRequestTimeOk returns a tuple with the RequestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPickup200ResponseData) GetRequestTimeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestTime) {
		return nil, false
	}
	return o.RequestTime, true
}

// HasRequestTime returns a boolean if a field has been set.
func (o *RequestPickup200ResponseData) HasRequestTime() bool {
	if o != nil && !IsNil(o.RequestTime) {
		return true
	}

	return false
}

// SetRequestTime gets a reference to the given string and assigns it to the RequestTime field.
func (o *RequestPickup200ResponseData) SetRequestTime(v string) {
	o.RequestTime = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *RequestPickup200ResponseData) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPickup200ResponseData) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *RequestPickup200ResponseData) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *RequestPickup200ResponseData) SetResult(v string) {
	o.Result = &v
}

func (o RequestPickup200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestPickup200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.RequestTime) {
		toSerialize["request_time"] = o.RequestTime
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableRequestPickup200ResponseData struct {
	value *RequestPickup200ResponseData
	isSet bool
}

func (v NullableRequestPickup200ResponseData) Get() *RequestPickup200ResponseData {
	return v.value
}

func (v *NullableRequestPickup200ResponseData) Set(val *RequestPickup200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestPickup200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestPickup200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestPickup200ResponseData(val *RequestPickup200ResponseData) *NullableRequestPickup200ResponseData {
	return &NullableRequestPickup200ResponseData{value: val, isSet: true}
}

func (v NullableRequestPickup200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestPickup200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


