/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetShopInfoDefaultResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetShopInfoDefaultResponse{}

// GetShopInfoDefaultResponse struct for GetShopInfoDefaultResponse
type GetShopInfoDefaultResponse struct {
	Data map[string]interface{} `json:"data,omitempty"`
	Status *string `json:"status,omitempty"`
	ErrorMessage []string `json:"error_message,omitempty"`
}

// NewGetShopInfoDefaultResponse instantiates a new GetShopInfoDefaultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetShopInfoDefaultResponse() *GetShopInfoDefaultResponse {
	this := GetShopInfoDefaultResponse{}
	return &this
}

// NewGetShopInfoDefaultResponseWithDefaults instantiates a new GetShopInfoDefaultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetShopInfoDefaultResponseWithDefaults() *GetShopInfoDefaultResponse {
	this := GetShopInfoDefaultResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetShopInfoDefaultResponse) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShopInfoDefaultResponse) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetShopInfoDefaultResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *GetShopInfoDefaultResponse) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetShopInfoDefaultResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShopInfoDefaultResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetShopInfoDefaultResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetShopInfoDefaultResponse) SetStatus(v string) {
	o.Status = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *GetShopInfoDefaultResponse) GetErrorMessage() []string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret []string
		return ret
	}
	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShopInfoDefaultResponse) GetErrorMessageOk() ([]string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *GetShopInfoDefaultResponse) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given []string and assigns it to the ErrorMessage field.
func (o *GetShopInfoDefaultResponse) SetErrorMessage(v []string) {
	o.ErrorMessage = v
}

func (o GetShopInfoDefaultResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetShopInfoDefaultResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["error_message"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableGetShopInfoDefaultResponse struct {
	value *GetShopInfoDefaultResponse
	isSet bool
}

func (v NullableGetShopInfoDefaultResponse) Get() *GetShopInfoDefaultResponse {
	return v.value
}

func (v *NullableGetShopInfoDefaultResponse) Set(val *GetShopInfoDefaultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetShopInfoDefaultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetShopInfoDefaultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetShopInfoDefaultResponse(val *GetShopInfoDefaultResponse) *NullableGetShopInfoDefaultResponse {
	return &NullableGetShopInfoDefaultResponse{value: val, isSet: true}
}

func (v NullableGetShopInfoDefaultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetShopInfoDefaultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


