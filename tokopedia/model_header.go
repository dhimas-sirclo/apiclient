/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the Header type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Header{}

// Header struct for Header
type Header struct {
	ProcessTime *float32 `json:"process_time,omitempty"`
	Messages *string `json:"messages,omitempty"`
}

// NewHeader instantiates a new Header object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeader() *Header {
	this := Header{}
	return &this
}

// NewHeaderWithDefaults instantiates a new Header object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeaderWithDefaults() *Header {
	this := Header{}
	return &this
}

// GetProcessTime returns the ProcessTime field value if set, zero value otherwise.
func (o *Header) GetProcessTime() float32 {
	if o == nil || IsNil(o.ProcessTime) {
		var ret float32
		return ret
	}
	return *o.ProcessTime
}

// GetProcessTimeOk returns a tuple with the ProcessTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Header) GetProcessTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.ProcessTime) {
		return nil, false
	}
	return o.ProcessTime, true
}

// HasProcessTime returns a boolean if a field has been set.
func (o *Header) HasProcessTime() bool {
	if o != nil && !IsNil(o.ProcessTime) {
		return true
	}

	return false
}

// SetProcessTime gets a reference to the given float32 and assigns it to the ProcessTime field.
func (o *Header) SetProcessTime(v float32) {
	o.ProcessTime = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *Header) GetMessages() string {
	if o == nil || IsNil(o.Messages) {
		var ret string
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Header) GetMessagesOk() (*string, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *Header) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given string and assigns it to the Messages field.
func (o *Header) SetMessages(v string) {
	o.Messages = &v
}

func (o Header) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Header) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProcessTime) {
		toSerialize["process_time"] = o.ProcessTime
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	return toSerialize, nil
}

type NullableHeader struct {
	value *Header
	isSet bool
}

func (v NullableHeader) Get() *Header {
	return v.value
}

func (v *NullableHeader) Set(val *Header) {
	v.value = val
	v.isSet = true
}

func (v NullableHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeader(val *Header) *NullableHeader {
	return &NullableHeader{value: val, isSet: true}
}

func (v NullableHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


