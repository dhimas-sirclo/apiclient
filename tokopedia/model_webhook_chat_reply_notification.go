/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the WebhookChatReplyNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookChatReplyNotification{}

// WebhookChatReplyNotification struct for WebhookChatReplyNotification
type WebhookChatReplyNotification struct {
	// Message unique identifier
	MsgId *int64 `json:"msg_id,omitempty"`
	// Buyer unique identifier
	BuyerId *int64 `json:"buyer_id,omitempty"`
	// Message content
	Message *string `json:"message,omitempty"`
	// Chat's Thumbnail
	Thumbnail *string `json:"thumbnail,omitempty"`
	// Opposite chat user's first name
	FullName *string `json:"full_name,omitempty"`
	// Shop unique identifier
	ShopId *int64 `json:"shop_id,omitempty"`
}

// NewWebhookChatReplyNotification instantiates a new WebhookChatReplyNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookChatReplyNotification() *WebhookChatReplyNotification {
	this := WebhookChatReplyNotification{}
	return &this
}

// NewWebhookChatReplyNotificationWithDefaults instantiates a new WebhookChatReplyNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookChatReplyNotificationWithDefaults() *WebhookChatReplyNotification {
	this := WebhookChatReplyNotification{}
	return &this
}

// GetMsgId returns the MsgId field value if set, zero value otherwise.
func (o *WebhookChatReplyNotification) GetMsgId() int64 {
	if o == nil || IsNil(o.MsgId) {
		var ret int64
		return ret
	}
	return *o.MsgId
}

// GetMsgIdOk returns a tuple with the MsgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookChatReplyNotification) GetMsgIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MsgId) {
		return nil, false
	}
	return o.MsgId, true
}

// HasMsgId returns a boolean if a field has been set.
func (o *WebhookChatReplyNotification) HasMsgId() bool {
	if o != nil && !IsNil(o.MsgId) {
		return true
	}

	return false
}

// SetMsgId gets a reference to the given int64 and assigns it to the MsgId field.
func (o *WebhookChatReplyNotification) SetMsgId(v int64) {
	o.MsgId = &v
}

// GetBuyerId returns the BuyerId field value if set, zero value otherwise.
func (o *WebhookChatReplyNotification) GetBuyerId() int64 {
	if o == nil || IsNil(o.BuyerId) {
		var ret int64
		return ret
	}
	return *o.BuyerId
}

// GetBuyerIdOk returns a tuple with the BuyerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookChatReplyNotification) GetBuyerIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BuyerId) {
		return nil, false
	}
	return o.BuyerId, true
}

// HasBuyerId returns a boolean if a field has been set.
func (o *WebhookChatReplyNotification) HasBuyerId() bool {
	if o != nil && !IsNil(o.BuyerId) {
		return true
	}

	return false
}

// SetBuyerId gets a reference to the given int64 and assigns it to the BuyerId field.
func (o *WebhookChatReplyNotification) SetBuyerId(v int64) {
	o.BuyerId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *WebhookChatReplyNotification) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookChatReplyNotification) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *WebhookChatReplyNotification) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *WebhookChatReplyNotification) SetMessage(v string) {
	o.Message = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *WebhookChatReplyNotification) GetThumbnail() string {
	if o == nil || IsNil(o.Thumbnail) {
		var ret string
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookChatReplyNotification) GetThumbnailOk() (*string, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *WebhookChatReplyNotification) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given string and assigns it to the Thumbnail field.
func (o *WebhookChatReplyNotification) SetThumbnail(v string) {
	o.Thumbnail = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *WebhookChatReplyNotification) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookChatReplyNotification) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *WebhookChatReplyNotification) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *WebhookChatReplyNotification) SetFullName(v string) {
	o.FullName = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *WebhookChatReplyNotification) GetShopId() int64 {
	if o == nil || IsNil(o.ShopId) {
		var ret int64
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookChatReplyNotification) GetShopIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *WebhookChatReplyNotification) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int64 and assigns it to the ShopId field.
func (o *WebhookChatReplyNotification) SetShopId(v int64) {
	o.ShopId = &v
}

func (o WebhookChatReplyNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookChatReplyNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MsgId) {
		toSerialize["msg_id"] = o.MsgId
	}
	if !IsNil(o.BuyerId) {
		toSerialize["buyer_id"] = o.BuyerId
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if !IsNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	return toSerialize, nil
}

type NullableWebhookChatReplyNotification struct {
	value *WebhookChatReplyNotification
	isSet bool
}

func (v NullableWebhookChatReplyNotification) Get() *WebhookChatReplyNotification {
	return v.value
}

func (v *NullableWebhookChatReplyNotification) Set(val *WebhookChatReplyNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookChatReplyNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookChatReplyNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookChatReplyNotification(val *WebhookChatReplyNotification) *NullableWebhookChatReplyNotification {
	return &NullableWebhookChatReplyNotification{value: val, isSet: true}
}

func (v NullableWebhookChatReplyNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookChatReplyNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


