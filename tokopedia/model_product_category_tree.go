/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the ProductCategoryTree type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductCategoryTree{}

// ProductCategoryTree struct for ProductCategoryTree
type ProductCategoryTree struct {
	// Category Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// Category Name
	Name *string `json:"Name,omitempty"`
	// Category Title
	Title *string `json:"title,omitempty"`
	// Category URL
	BreadcrumbURL *string `json:"breadcrumbURL,omitempty"`
}

// NewProductCategoryTree instantiates a new ProductCategoryTree object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCategoryTree() *ProductCategoryTree {
	this := ProductCategoryTree{}
	return &this
}

// NewProductCategoryTreeWithDefaults instantiates a new ProductCategoryTree object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCategoryTreeWithDefaults() *ProductCategoryTree {
	this := ProductCategoryTree{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductCategoryTree) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategoryTree) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductCategoryTree) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ProductCategoryTree) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductCategoryTree) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategoryTree) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductCategoryTree) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductCategoryTree) SetName(v string) {
	o.Name = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ProductCategoryTree) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategoryTree) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ProductCategoryTree) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ProductCategoryTree) SetTitle(v string) {
	o.Title = &v
}

// GetBreadcrumbURL returns the BreadcrumbURL field value if set, zero value otherwise.
func (o *ProductCategoryTree) GetBreadcrumbURL() string {
	if o == nil || IsNil(o.BreadcrumbURL) {
		var ret string
		return ret
	}
	return *o.BreadcrumbURL
}

// GetBreadcrumbURLOk returns a tuple with the BreadcrumbURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategoryTree) GetBreadcrumbURLOk() (*string, bool) {
	if o == nil || IsNil(o.BreadcrumbURL) {
		return nil, false
	}
	return o.BreadcrumbURL, true
}

// HasBreadcrumbURL returns a boolean if a field has been set.
func (o *ProductCategoryTree) HasBreadcrumbURL() bool {
	if o != nil && !IsNil(o.BreadcrumbURL) {
		return true
	}

	return false
}

// SetBreadcrumbURL gets a reference to the given string and assigns it to the BreadcrumbURL field.
func (o *ProductCategoryTree) SetBreadcrumbURL(v string) {
	o.BreadcrumbURL = &v
}

func (o ProductCategoryTree) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductCategoryTree) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.BreadcrumbURL) {
		toSerialize["breadcrumbURL"] = o.BreadcrumbURL
	}
	return toSerialize, nil
}

type NullableProductCategoryTree struct {
	value *ProductCategoryTree
	isSet bool
}

func (v NullableProductCategoryTree) Get() *ProductCategoryTree {
	return v.value
}

func (v *NullableProductCategoryTree) Set(val *ProductCategoryTree) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCategoryTree) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCategoryTree) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCategoryTree(val *ProductCategoryTree) *NullableProductCategoryTree {
	return &NullableProductCategoryTree{value: val, isSet: true}
}

func (v NullableProductCategoryTree) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCategoryTree) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


