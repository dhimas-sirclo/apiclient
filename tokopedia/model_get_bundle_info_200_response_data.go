/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetBundleInfo200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBundleInfo200ResponseData{}

// GetBundleInfo200ResponseData struct for GetBundleInfo200ResponseData
type GetBundleInfo200ResponseData struct {
	BundleInfo []GetBundleInfo200ResponseDataBundleInfoInner `json:"bundle_info,omitempty"`
	Error map[string]interface{} `json:"error,omitempty"`
}

// NewGetBundleInfo200ResponseData instantiates a new GetBundleInfo200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBundleInfo200ResponseData() *GetBundleInfo200ResponseData {
	this := GetBundleInfo200ResponseData{}
	return &this
}

// NewGetBundleInfo200ResponseDataWithDefaults instantiates a new GetBundleInfo200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBundleInfo200ResponseDataWithDefaults() *GetBundleInfo200ResponseData {
	this := GetBundleInfo200ResponseData{}
	return &this
}

// GetBundleInfo returns the BundleInfo field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseData) GetBundleInfo() []GetBundleInfo200ResponseDataBundleInfoInner {
	if o == nil || IsNil(o.BundleInfo) {
		var ret []GetBundleInfo200ResponseDataBundleInfoInner
		return ret
	}
	return o.BundleInfo
}

// GetBundleInfoOk returns a tuple with the BundleInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseData) GetBundleInfoOk() ([]GetBundleInfo200ResponseDataBundleInfoInner, bool) {
	if o == nil || IsNil(o.BundleInfo) {
		return nil, false
	}
	return o.BundleInfo, true
}

// HasBundleInfo returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseData) HasBundleInfo() bool {
	if o != nil && !IsNil(o.BundleInfo) {
		return true
	}

	return false
}

// SetBundleInfo gets a reference to the given []GetBundleInfo200ResponseDataBundleInfoInner and assigns it to the BundleInfo field.
func (o *GetBundleInfo200ResponseData) SetBundleInfo(v []GetBundleInfo200ResponseDataBundleInfoInner) {
	o.BundleInfo = v
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetBundleInfo200ResponseData) GetError() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBundleInfo200ResponseData) GetErrorOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Error) {
		return map[string]interface{}{}, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseData) HasError() bool {
	if o != nil && IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given map[string]interface{} and assigns it to the Error field.
func (o *GetBundleInfo200ResponseData) SetError(v map[string]interface{}) {
	o.Error = v
}

func (o GetBundleInfo200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBundleInfo200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BundleInfo) {
		toSerialize["bundle_info"] = o.BundleInfo
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableGetBundleInfo200ResponseData struct {
	value *GetBundleInfo200ResponseData
	isSet bool
}

func (v NullableGetBundleInfo200ResponseData) Get() *GetBundleInfo200ResponseData {
	return v.value
}

func (v *NullableGetBundleInfo200ResponseData) Set(val *GetBundleInfo200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBundleInfo200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBundleInfo200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBundleInfo200ResponseData(val *GetBundleInfo200ResponseData) *NullableGetBundleInfo200ResponseData {
	return &NullableGetBundleInfo200ResponseData{value: val, isSet: true}
}

func (v NullableGetBundleInfo200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBundleInfo200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


