/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetResolutionTicket200ResponseDataShopsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetResolutionTicket200ResponseDataShopsInner{}

// GetResolutionTicket200ResponseDataShopsInner struct for GetResolutionTicket200ResponseDataShopsInner
type GetResolutionTicket200ResponseDataShopsInner struct {
	ShopId *int64 `json:"shop_id,omitempty"`
	ShopName *string `json:"shop_name,omitempty"`
	Ticket []GetResolutionTicket200ResponseDataShopsInnerTicketInner `json:"ticket,omitempty"`
}

// NewGetResolutionTicket200ResponseDataShopsInner instantiates a new GetResolutionTicket200ResponseDataShopsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResolutionTicket200ResponseDataShopsInner() *GetResolutionTicket200ResponseDataShopsInner {
	this := GetResolutionTicket200ResponseDataShopsInner{}
	return &this
}

// NewGetResolutionTicket200ResponseDataShopsInnerWithDefaults instantiates a new GetResolutionTicket200ResponseDataShopsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResolutionTicket200ResponseDataShopsInnerWithDefaults() *GetResolutionTicket200ResponseDataShopsInner {
	this := GetResolutionTicket200ResponseDataShopsInner{}
	return &this
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInner) GetShopId() int64 {
	if o == nil || IsNil(o.ShopId) {
		var ret int64
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInner) GetShopIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInner) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int64 and assigns it to the ShopId field.
func (o *GetResolutionTicket200ResponseDataShopsInner) SetShopId(v int64) {
	o.ShopId = &v
}

// GetShopName returns the ShopName field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInner) GetShopName() string {
	if o == nil || IsNil(o.ShopName) {
		var ret string
		return ret
	}
	return *o.ShopName
}

// GetShopNameOk returns a tuple with the ShopName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInner) GetShopNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShopName) {
		return nil, false
	}
	return o.ShopName, true
}

// HasShopName returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInner) HasShopName() bool {
	if o != nil && !IsNil(o.ShopName) {
		return true
	}

	return false
}

// SetShopName gets a reference to the given string and assigns it to the ShopName field.
func (o *GetResolutionTicket200ResponseDataShopsInner) SetShopName(v string) {
	o.ShopName = &v
}

// GetTicket returns the Ticket field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInner) GetTicket() []GetResolutionTicket200ResponseDataShopsInnerTicketInner {
	if o == nil || IsNil(o.Ticket) {
		var ret []GetResolutionTicket200ResponseDataShopsInnerTicketInner
		return ret
	}
	return o.Ticket
}

// GetTicketOk returns a tuple with the Ticket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInner) GetTicketOk() ([]GetResolutionTicket200ResponseDataShopsInnerTicketInner, bool) {
	if o == nil || IsNil(o.Ticket) {
		return nil, false
	}
	return o.Ticket, true
}

// HasTicket returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInner) HasTicket() bool {
	if o != nil && !IsNil(o.Ticket) {
		return true
	}

	return false
}

// SetTicket gets a reference to the given []GetResolutionTicket200ResponseDataShopsInnerTicketInner and assigns it to the Ticket field.
func (o *GetResolutionTicket200ResponseDataShopsInner) SetTicket(v []GetResolutionTicket200ResponseDataShopsInnerTicketInner) {
	o.Ticket = v
}

func (o GetResolutionTicket200ResponseDataShopsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetResolutionTicket200ResponseDataShopsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.ShopName) {
		toSerialize["shop_name"] = o.ShopName
	}
	if !IsNil(o.Ticket) {
		toSerialize["ticket"] = o.Ticket
	}
	return toSerialize, nil
}

type NullableGetResolutionTicket200ResponseDataShopsInner struct {
	value *GetResolutionTicket200ResponseDataShopsInner
	isSet bool
}

func (v NullableGetResolutionTicket200ResponseDataShopsInner) Get() *GetResolutionTicket200ResponseDataShopsInner {
	return v.value
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInner) Set(val *GetResolutionTicket200ResponseDataShopsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResolutionTicket200ResponseDataShopsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResolutionTicket200ResponseDataShopsInner(val *GetResolutionTicket200ResponseDataShopsInner) *NullableGetResolutionTicket200ResponseDataShopsInner {
	return &NullableGetResolutionTicket200ResponseDataShopsInner{value: val, isSet: true}
}

func (v NullableGetResolutionTicket200ResponseDataShopsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


