/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the CreateBundleRequestBundle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBundleRequestBundle{}

// CreateBundleRequestBundle Bundle object to create
type CreateBundleRequestBundle struct {
	// Name of the bundle with length less than or equals 15 characters and greater than or equals 3 characters
	BundleName string `json:"bundle_name"`
	// Type of the bundle where 1 is PAKET DISKON and 2 is BUNDLING , refers to Seller Education
	BundleType int64 `json:"bundle_type"`
	// Status of the bundle where `1 is ACTIVE
	BundleStatus int64 `json:"bundle_status"`
	// Start time of bundle in UNIX format must be greater than the current time
	StartTimeUnix int64 `json:"start_time_unix"`
	// Warehouse unique identifier
	WarehouseId []int64 `json:"warehouse_id"`
	// Maximum bundle package in one order
	MaxOrder *int64 `json:"max_order,omitempty"`
	// Stop time of bundle in UNIX format must be greater than start time. Set to 0 for making a bundle with no time limit / until product stock is 0
	StopTimeUnix *int64 `json:"stop_time_unix,omitempty"`
	// Original quota for bundle
	OriginalQuota *int64 `json:"original_quota,omitempty"`
	// List of products in this bundle
	BundleItems []CreateBundleRequestBundleBundleItemsInner `json:"bundle_items"`
}

// NewCreateBundleRequestBundle instantiates a new CreateBundleRequestBundle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBundleRequestBundle(bundleName string, bundleType int64, bundleStatus int64, startTimeUnix int64, warehouseId []int64, bundleItems []CreateBundleRequestBundleBundleItemsInner) *CreateBundleRequestBundle {
	this := CreateBundleRequestBundle{}
	this.BundleName = bundleName
	this.BundleType = bundleType
	this.BundleStatus = bundleStatus
	this.StartTimeUnix = startTimeUnix
	this.WarehouseId = warehouseId
	this.BundleItems = bundleItems
	return &this
}

// NewCreateBundleRequestBundleWithDefaults instantiates a new CreateBundleRequestBundle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBundleRequestBundleWithDefaults() *CreateBundleRequestBundle {
	this := CreateBundleRequestBundle{}
	return &this
}

// GetBundleName returns the BundleName field value
func (o *CreateBundleRequestBundle) GetBundleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BundleName
}

// GetBundleNameOk returns a tuple with the BundleName field value
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetBundleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleName, true
}

// SetBundleName sets field value
func (o *CreateBundleRequestBundle) SetBundleName(v string) {
	o.BundleName = v
}

// GetBundleType returns the BundleType field value
func (o *CreateBundleRequestBundle) GetBundleType() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BundleType
}

// GetBundleTypeOk returns a tuple with the BundleType field value
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetBundleTypeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleType, true
}

// SetBundleType sets field value
func (o *CreateBundleRequestBundle) SetBundleType(v int64) {
	o.BundleType = v
}

// GetBundleStatus returns the BundleStatus field value
func (o *CreateBundleRequestBundle) GetBundleStatus() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BundleStatus
}

// GetBundleStatusOk returns a tuple with the BundleStatus field value
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetBundleStatusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleStatus, true
}

// SetBundleStatus sets field value
func (o *CreateBundleRequestBundle) SetBundleStatus(v int64) {
	o.BundleStatus = v
}

// GetStartTimeUnix returns the StartTimeUnix field value
func (o *CreateBundleRequestBundle) GetStartTimeUnix() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartTimeUnix
}

// GetStartTimeUnixOk returns a tuple with the StartTimeUnix field value
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetStartTimeUnixOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTimeUnix, true
}

// SetStartTimeUnix sets field value
func (o *CreateBundleRequestBundle) SetStartTimeUnix(v int64) {
	o.StartTimeUnix = v
}

// GetWarehouseId returns the WarehouseId field value
func (o *CreateBundleRequestBundle) GetWarehouseId() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.WarehouseId
}

// GetWarehouseIdOk returns a tuple with the WarehouseId field value
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetWarehouseIdOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarehouseId, true
}

// SetWarehouseId sets field value
func (o *CreateBundleRequestBundle) SetWarehouseId(v []int64) {
	o.WarehouseId = v
}

// GetMaxOrder returns the MaxOrder field value if set, zero value otherwise.
func (o *CreateBundleRequestBundle) GetMaxOrder() int64 {
	if o == nil || IsNil(o.MaxOrder) {
		var ret int64
		return ret
	}
	return *o.MaxOrder
}

// GetMaxOrderOk returns a tuple with the MaxOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetMaxOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxOrder) {
		return nil, false
	}
	return o.MaxOrder, true
}

// HasMaxOrder returns a boolean if a field has been set.
func (o *CreateBundleRequestBundle) HasMaxOrder() bool {
	if o != nil && !IsNil(o.MaxOrder) {
		return true
	}

	return false
}

// SetMaxOrder gets a reference to the given int64 and assigns it to the MaxOrder field.
func (o *CreateBundleRequestBundle) SetMaxOrder(v int64) {
	o.MaxOrder = &v
}

// GetStopTimeUnix returns the StopTimeUnix field value if set, zero value otherwise.
func (o *CreateBundleRequestBundle) GetStopTimeUnix() int64 {
	if o == nil || IsNil(o.StopTimeUnix) {
		var ret int64
		return ret
	}
	return *o.StopTimeUnix
}

// GetStopTimeUnixOk returns a tuple with the StopTimeUnix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetStopTimeUnixOk() (*int64, bool) {
	if o == nil || IsNil(o.StopTimeUnix) {
		return nil, false
	}
	return o.StopTimeUnix, true
}

// HasStopTimeUnix returns a boolean if a field has been set.
func (o *CreateBundleRequestBundle) HasStopTimeUnix() bool {
	if o != nil && !IsNil(o.StopTimeUnix) {
		return true
	}

	return false
}

// SetStopTimeUnix gets a reference to the given int64 and assigns it to the StopTimeUnix field.
func (o *CreateBundleRequestBundle) SetStopTimeUnix(v int64) {
	o.StopTimeUnix = &v
}

// GetOriginalQuota returns the OriginalQuota field value if set, zero value otherwise.
func (o *CreateBundleRequestBundle) GetOriginalQuota() int64 {
	if o == nil || IsNil(o.OriginalQuota) {
		var ret int64
		return ret
	}
	return *o.OriginalQuota
}

// GetOriginalQuotaOk returns a tuple with the OriginalQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetOriginalQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.OriginalQuota) {
		return nil, false
	}
	return o.OriginalQuota, true
}

// HasOriginalQuota returns a boolean if a field has been set.
func (o *CreateBundleRequestBundle) HasOriginalQuota() bool {
	if o != nil && !IsNil(o.OriginalQuota) {
		return true
	}

	return false
}

// SetOriginalQuota gets a reference to the given int64 and assigns it to the OriginalQuota field.
func (o *CreateBundleRequestBundle) SetOriginalQuota(v int64) {
	o.OriginalQuota = &v
}

// GetBundleItems returns the BundleItems field value
func (o *CreateBundleRequestBundle) GetBundleItems() []CreateBundleRequestBundleBundleItemsInner {
	if o == nil {
		var ret []CreateBundleRequestBundleBundleItemsInner
		return ret
	}

	return o.BundleItems
}

// GetBundleItemsOk returns a tuple with the BundleItems field value
// and a boolean to check if the value has been set.
func (o *CreateBundleRequestBundle) GetBundleItemsOk() ([]CreateBundleRequestBundleBundleItemsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleItems, true
}

// SetBundleItems sets field value
func (o *CreateBundleRequestBundle) SetBundleItems(v []CreateBundleRequestBundleBundleItemsInner) {
	o.BundleItems = v
}

func (o CreateBundleRequestBundle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBundleRequestBundle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bundle_name"] = o.BundleName
	toSerialize["bundle_type"] = o.BundleType
	toSerialize["bundle_status"] = o.BundleStatus
	toSerialize["start_time_unix"] = o.StartTimeUnix
	toSerialize["warehouse_id"] = o.WarehouseId
	if !IsNil(o.MaxOrder) {
		toSerialize["max_order"] = o.MaxOrder
	}
	if !IsNil(o.StopTimeUnix) {
		toSerialize["stop_time_unix"] = o.StopTimeUnix
	}
	if !IsNil(o.OriginalQuota) {
		toSerialize["original_quota"] = o.OriginalQuota
	}
	toSerialize["bundle_items"] = o.BundleItems
	return toSerialize, nil
}

type NullableCreateBundleRequestBundle struct {
	value *CreateBundleRequestBundle
	isSet bool
}

func (v NullableCreateBundleRequestBundle) Get() *CreateBundleRequestBundle {
	return v.value
}

func (v *NullableCreateBundleRequestBundle) Set(val *CreateBundleRequestBundle) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBundleRequestBundle) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBundleRequestBundle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBundleRequestBundle(val *CreateBundleRequestBundle) *NullableCreateBundleRequestBundle {
	return &NullableCreateBundleRequestBundle{value: val, isSet: true}
}

func (v NullableCreateBundleRequestBundle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBundleRequestBundle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


