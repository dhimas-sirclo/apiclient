/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the CreateBundle200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBundle200ResponseData{}

// CreateBundle200ResponseData struct for CreateBundle200ResponseData
type CreateBundle200ResponseData struct {
	BundleIds []int64 `json:"bundle_ids,omitempty"`
}

// NewCreateBundle200ResponseData instantiates a new CreateBundle200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBundle200ResponseData() *CreateBundle200ResponseData {
	this := CreateBundle200ResponseData{}
	return &this
}

// NewCreateBundle200ResponseDataWithDefaults instantiates a new CreateBundle200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBundle200ResponseDataWithDefaults() *CreateBundle200ResponseData {
	this := CreateBundle200ResponseData{}
	return &this
}

// GetBundleIds returns the BundleIds field value if set, zero value otherwise.
func (o *CreateBundle200ResponseData) GetBundleIds() []int64 {
	if o == nil || IsNil(o.BundleIds) {
		var ret []int64
		return ret
	}
	return o.BundleIds
}

// GetBundleIdsOk returns a tuple with the BundleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBundle200ResponseData) GetBundleIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.BundleIds) {
		return nil, false
	}
	return o.BundleIds, true
}

// HasBundleIds returns a boolean if a field has been set.
func (o *CreateBundle200ResponseData) HasBundleIds() bool {
	if o != nil && !IsNil(o.BundleIds) {
		return true
	}

	return false
}

// SetBundleIds gets a reference to the given []int64 and assigns it to the BundleIds field.
func (o *CreateBundle200ResponseData) SetBundleIds(v []int64) {
	o.BundleIds = v
}

func (o CreateBundle200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBundle200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BundleIds) {
		toSerialize["bundle_ids"] = o.BundleIds
	}
	return toSerialize, nil
}

type NullableCreateBundle200ResponseData struct {
	value *CreateBundle200ResponseData
	isSet bool
}

func (v NullableCreateBundle200ResponseData) Get() *CreateBundle200ResponseData {
	return v.value
}

func (v *NullableCreateBundle200ResponseData) Set(val *CreateBundle200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBundle200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBundle200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBundle200ResponseData(val *CreateBundle200ResponseData) *NullableCreateBundle200ResponseData {
	return &NullableCreateBundle200ResponseData{value: val, isSet: true}
}

func (v NullableCreateBundle200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBundle200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


