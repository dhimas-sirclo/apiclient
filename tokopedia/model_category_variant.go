/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the CategoryVariant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryVariant{}

// CategoryVariant struct for CategoryVariant
type CategoryVariant struct {
	CategoryId *int64 `json:"category_id,omitempty"`
	VariantIdCombinations [][]int64 `json:"variant_id_combinations,omitempty"`
	VariantDetails []CategoryVariantDetail `json:"variant_details,omitempty"`
}

// NewCategoryVariant instantiates a new CategoryVariant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryVariant() *CategoryVariant {
	this := CategoryVariant{}
	return &this
}

// NewCategoryVariantWithDefaults instantiates a new CategoryVariant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryVariantWithDefaults() *CategoryVariant {
	this := CategoryVariant{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *CategoryVariant) GetCategoryId() int64 {
	if o == nil || IsNil(o.CategoryId) {
		var ret int64
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryVariant) GetCategoryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *CategoryVariant) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int64 and assigns it to the CategoryId field.
func (o *CategoryVariant) SetCategoryId(v int64) {
	o.CategoryId = &v
}

// GetVariantIdCombinations returns the VariantIdCombinations field value if set, zero value otherwise.
func (o *CategoryVariant) GetVariantIdCombinations() [][]int64 {
	if o == nil || IsNil(o.VariantIdCombinations) {
		var ret [][]int64
		return ret
	}
	return o.VariantIdCombinations
}

// GetVariantIdCombinationsOk returns a tuple with the VariantIdCombinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryVariant) GetVariantIdCombinationsOk() ([][]int64, bool) {
	if o == nil || IsNil(o.VariantIdCombinations) {
		return nil, false
	}
	return o.VariantIdCombinations, true
}

// HasVariantIdCombinations returns a boolean if a field has been set.
func (o *CategoryVariant) HasVariantIdCombinations() bool {
	if o != nil && !IsNil(o.VariantIdCombinations) {
		return true
	}

	return false
}

// SetVariantIdCombinations gets a reference to the given [][]int64 and assigns it to the VariantIdCombinations field.
func (o *CategoryVariant) SetVariantIdCombinations(v [][]int64) {
	o.VariantIdCombinations = v
}

// GetVariantDetails returns the VariantDetails field value if set, zero value otherwise.
func (o *CategoryVariant) GetVariantDetails() []CategoryVariantDetail {
	if o == nil || IsNil(o.VariantDetails) {
		var ret []CategoryVariantDetail
		return ret
	}
	return o.VariantDetails
}

// GetVariantDetailsOk returns a tuple with the VariantDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryVariant) GetVariantDetailsOk() ([]CategoryVariantDetail, bool) {
	if o == nil || IsNil(o.VariantDetails) {
		return nil, false
	}
	return o.VariantDetails, true
}

// HasVariantDetails returns a boolean if a field has been set.
func (o *CategoryVariant) HasVariantDetails() bool {
	if o != nil && !IsNil(o.VariantDetails) {
		return true
	}

	return false
}

// SetVariantDetails gets a reference to the given []CategoryVariantDetail and assigns it to the VariantDetails field.
func (o *CategoryVariant) SetVariantDetails(v []CategoryVariantDetail) {
	o.VariantDetails = v
}

func (o CategoryVariant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryVariant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.VariantIdCombinations) {
		toSerialize["variant_id_combinations"] = o.VariantIdCombinations
	}
	if !IsNil(o.VariantDetails) {
		toSerialize["variant_details"] = o.VariantDetails
	}
	return toSerialize, nil
}

type NullableCategoryVariant struct {
	value *CategoryVariant
	isSet bool
}

func (v NullableCategoryVariant) Get() *CategoryVariant {
	return v.value
}

func (v *NullableCategoryVariant) Set(val *CategoryVariant) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryVariant) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryVariant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryVariant(val *CategoryVariant) *NullableCategoryVariant {
	return &NullableCategoryVariant{value: val, isSet: true}
}

func (v NullableCategoryVariant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryVariant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


