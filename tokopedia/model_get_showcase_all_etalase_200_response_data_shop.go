/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetShowcaseAllEtalase200ResponseDataShop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetShowcaseAllEtalase200ResponseDataShop{}

// GetShowcaseAllEtalase200ResponseDataShop struct for GetShowcaseAllEtalase200ResponseDataShop
type GetShowcaseAllEtalase200ResponseDataShop struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"Name,omitempty"`
	Uri *string `json:"uri,omitempty"`
	Location *string `json:"location,omitempty"`
}

// NewGetShowcaseAllEtalase200ResponseDataShop instantiates a new GetShowcaseAllEtalase200ResponseDataShop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetShowcaseAllEtalase200ResponseDataShop() *GetShowcaseAllEtalase200ResponseDataShop {
	this := GetShowcaseAllEtalase200ResponseDataShop{}
	return &this
}

// NewGetShowcaseAllEtalase200ResponseDataShopWithDefaults instantiates a new GetShowcaseAllEtalase200ResponseDataShop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetShowcaseAllEtalase200ResponseDataShopWithDefaults() *GetShowcaseAllEtalase200ResponseDataShop {
	this := GetShowcaseAllEtalase200ResponseDataShop{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetShowcaseAllEtalase200ResponseDataShop) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetShowcaseAllEtalase200ResponseDataShop) SetName(v string) {
	o.Name = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *GetShowcaseAllEtalase200ResponseDataShop) SetUri(v string) {
	o.Uri = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *GetShowcaseAllEtalase200ResponseDataShop) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *GetShowcaseAllEtalase200ResponseDataShop) SetLocation(v string) {
	o.Location = &v
}

func (o GetShowcaseAllEtalase200ResponseDataShop) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetShowcaseAllEtalase200ResponseDataShop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	return toSerialize, nil
}

type NullableGetShowcaseAllEtalase200ResponseDataShop struct {
	value *GetShowcaseAllEtalase200ResponseDataShop
	isSet bool
}

func (v NullableGetShowcaseAllEtalase200ResponseDataShop) Get() *GetShowcaseAllEtalase200ResponseDataShop {
	return v.value
}

func (v *NullableGetShowcaseAllEtalase200ResponseDataShop) Set(val *GetShowcaseAllEtalase200ResponseDataShop) {
	v.value = val
	v.isSet = true
}

func (v NullableGetShowcaseAllEtalase200ResponseDataShop) IsSet() bool {
	return v.isSet
}

func (v *NullableGetShowcaseAllEtalase200ResponseDataShop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetShowcaseAllEtalase200ResponseDataShop(val *GetShowcaseAllEtalase200ResponseDataShop) *NullableGetShowcaseAllEtalase200ResponseDataShop {
	return &NullableGetShowcaseAllEtalase200ResponseDataShop{value: val, isSet: true}
}

func (v NullableGetShowcaseAllEtalase200ResponseDataShop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetShowcaseAllEtalase200ResponseDataShop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


