/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the ProductStockWordingAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductStockWordingAllOf{}

// ProductStockWordingAllOf struct for ProductStockWordingAllOf
type ProductStockWordingAllOf struct {
	// Product Stock Wording (Description)
	StockWording *string `json:"stockWording,omitempty"`
}

// NewProductStockWordingAllOf instantiates a new ProductStockWordingAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductStockWordingAllOf() *ProductStockWordingAllOf {
	this := ProductStockWordingAllOf{}
	return &this
}

// NewProductStockWordingAllOfWithDefaults instantiates a new ProductStockWordingAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductStockWordingAllOfWithDefaults() *ProductStockWordingAllOf {
	this := ProductStockWordingAllOf{}
	return &this
}

// GetStockWording returns the StockWording field value if set, zero value otherwise.
func (o *ProductStockWordingAllOf) GetStockWording() string {
	if o == nil || IsNil(o.StockWording) {
		var ret string
		return ret
	}
	return *o.StockWording
}

// GetStockWordingOk returns a tuple with the StockWording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductStockWordingAllOf) GetStockWordingOk() (*string, bool) {
	if o == nil || IsNil(o.StockWording) {
		return nil, false
	}
	return o.StockWording, true
}

// HasStockWording returns a boolean if a field has been set.
func (o *ProductStockWordingAllOf) HasStockWording() bool {
	if o != nil && !IsNil(o.StockWording) {
		return true
	}

	return false
}

// SetStockWording gets a reference to the given string and assigns it to the StockWording field.
func (o *ProductStockWordingAllOf) SetStockWording(v string) {
	o.StockWording = &v
}

func (o ProductStockWordingAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductStockWordingAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StockWording) {
		toSerialize["stockWording"] = o.StockWording
	}
	return toSerialize, nil
}

type NullableProductStockWordingAllOf struct {
	value *ProductStockWordingAllOf
	isSet bool
}

func (v NullableProductStockWordingAllOf) Get() *ProductStockWordingAllOf {
	return v.value
}

func (v *NullableProductStockWordingAllOf) Set(val *ProductStockWordingAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProductStockWordingAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProductStockWordingAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductStockWordingAllOf(val *ProductStockWordingAllOf) *NullableProductStockWordingAllOf {
	return &NullableProductStockWordingAllOf{value: val, isSet: true}
}

func (v NullableProductStockWordingAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductStockWordingAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


