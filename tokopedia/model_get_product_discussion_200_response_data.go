/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetProductDiscussion200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProductDiscussion200ResponseData{}

// GetProductDiscussion200ResponseData struct for GetProductDiscussion200ResponseData
type GetProductDiscussion200ResponseData struct {
	HasNext *bool `json:"HasNext,omitempty"`
	// Total Question Count
	TotalQuestion *int64 `json:"TotalQuestion,omitempty"`
	Question []GetProductDiscussion200ResponseDataQuestionInner `json:"Question,omitempty"`
	// Product Unique Identifier
	ProductID *int64 `json:"ProductID,omitempty"`
	// Shop Unique Identifier
	ShopID *int64 `json:"ShopID,omitempty"`
	// Shop URL
	ShopURL *string `json:"ShopURL,omitempty"`
}

// NewGetProductDiscussion200ResponseData instantiates a new GetProductDiscussion200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProductDiscussion200ResponseData() *GetProductDiscussion200ResponseData {
	this := GetProductDiscussion200ResponseData{}
	return &this
}

// NewGetProductDiscussion200ResponseDataWithDefaults instantiates a new GetProductDiscussion200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProductDiscussion200ResponseDataWithDefaults() *GetProductDiscussion200ResponseData {
	this := GetProductDiscussion200ResponseData{}
	return &this
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseData) GetHasNext() bool {
	if o == nil || IsNil(o.HasNext) {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseData) GetHasNextOk() (*bool, bool) {
	if o == nil || IsNil(o.HasNext) {
		return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseData) HasHasNext() bool {
	if o != nil && !IsNil(o.HasNext) {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *GetProductDiscussion200ResponseData) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetTotalQuestion returns the TotalQuestion field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseData) GetTotalQuestion() int64 {
	if o == nil || IsNil(o.TotalQuestion) {
		var ret int64
		return ret
	}
	return *o.TotalQuestion
}

// GetTotalQuestionOk returns a tuple with the TotalQuestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseData) GetTotalQuestionOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalQuestion) {
		return nil, false
	}
	return o.TotalQuestion, true
}

// HasTotalQuestion returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseData) HasTotalQuestion() bool {
	if o != nil && !IsNil(o.TotalQuestion) {
		return true
	}

	return false
}

// SetTotalQuestion gets a reference to the given int64 and assigns it to the TotalQuestion field.
func (o *GetProductDiscussion200ResponseData) SetTotalQuestion(v int64) {
	o.TotalQuestion = &v
}

// GetQuestion returns the Question field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseData) GetQuestion() []GetProductDiscussion200ResponseDataQuestionInner {
	if o == nil || IsNil(o.Question) {
		var ret []GetProductDiscussion200ResponseDataQuestionInner
		return ret
	}
	return o.Question
}

// GetQuestionOk returns a tuple with the Question field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseData) GetQuestionOk() ([]GetProductDiscussion200ResponseDataQuestionInner, bool) {
	if o == nil || IsNil(o.Question) {
		return nil, false
	}
	return o.Question, true
}

// HasQuestion returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseData) HasQuestion() bool {
	if o != nil && !IsNil(o.Question) {
		return true
	}

	return false
}

// SetQuestion gets a reference to the given []GetProductDiscussion200ResponseDataQuestionInner and assigns it to the Question field.
func (o *GetProductDiscussion200ResponseData) SetQuestion(v []GetProductDiscussion200ResponseDataQuestionInner) {
	o.Question = v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseData) GetProductID() int64 {
	if o == nil || IsNil(o.ProductID) {
		var ret int64
		return ret
	}
	return *o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseData) GetProductIDOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseData) HasProductID() bool {
	if o != nil && !IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given int64 and assigns it to the ProductID field.
func (o *GetProductDiscussion200ResponseData) SetProductID(v int64) {
	o.ProductID = &v
}

// GetShopID returns the ShopID field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseData) GetShopID() int64 {
	if o == nil || IsNil(o.ShopID) {
		var ret int64
		return ret
	}
	return *o.ShopID
}

// GetShopIDOk returns a tuple with the ShopID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseData) GetShopIDOk() (*int64, bool) {
	if o == nil || IsNil(o.ShopID) {
		return nil, false
	}
	return o.ShopID, true
}

// HasShopID returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseData) HasShopID() bool {
	if o != nil && !IsNil(o.ShopID) {
		return true
	}

	return false
}

// SetShopID gets a reference to the given int64 and assigns it to the ShopID field.
func (o *GetProductDiscussion200ResponseData) SetShopID(v int64) {
	o.ShopID = &v
}

// GetShopURL returns the ShopURL field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseData) GetShopURL() string {
	if o == nil || IsNil(o.ShopURL) {
		var ret string
		return ret
	}
	return *o.ShopURL
}

// GetShopURLOk returns a tuple with the ShopURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseData) GetShopURLOk() (*string, bool) {
	if o == nil || IsNil(o.ShopURL) {
		return nil, false
	}
	return o.ShopURL, true
}

// HasShopURL returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseData) HasShopURL() bool {
	if o != nil && !IsNil(o.ShopURL) {
		return true
	}

	return false
}

// SetShopURL gets a reference to the given string and assigns it to the ShopURL field.
func (o *GetProductDiscussion200ResponseData) SetShopURL(v string) {
	o.ShopURL = &v
}

func (o GetProductDiscussion200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProductDiscussion200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasNext) {
		toSerialize["HasNext"] = o.HasNext
	}
	if !IsNil(o.TotalQuestion) {
		toSerialize["TotalQuestion"] = o.TotalQuestion
	}
	if !IsNil(o.Question) {
		toSerialize["Question"] = o.Question
	}
	if !IsNil(o.ProductID) {
		toSerialize["ProductID"] = o.ProductID
	}
	if !IsNil(o.ShopID) {
		toSerialize["ShopID"] = o.ShopID
	}
	if !IsNil(o.ShopURL) {
		toSerialize["ShopURL"] = o.ShopURL
	}
	return toSerialize, nil
}

type NullableGetProductDiscussion200ResponseData struct {
	value *GetProductDiscussion200ResponseData
	isSet bool
}

func (v NullableGetProductDiscussion200ResponseData) Get() *GetProductDiscussion200ResponseData {
	return v.value
}

func (v *NullableGetProductDiscussion200ResponseData) Set(val *GetProductDiscussion200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProductDiscussion200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProductDiscussion200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProductDiscussion200ResponseData(val *GetProductDiscussion200ResponseData) *NullableGetProductDiscussion200ResponseData {
	return &NullableGetProductDiscussion200ResponseData{value: val, isSet: true}
}

func (v NullableGetProductDiscussion200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProductDiscussion200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


