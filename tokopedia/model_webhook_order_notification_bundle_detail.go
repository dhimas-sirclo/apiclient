/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the WebhookOrderNotificationBundleDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookOrderNotificationBundleDetail{}

// WebhookOrderNotificationBundleDetail Contains bundle information
type WebhookOrderNotificationBundleDetail struct {
	TotalProduct *int64 `json:"total_product,omitempty"`
	ProductBundlingIcon *string `json:"product_bundling_icon,omitempty"`
	// Contains information about bundle items in the order
	Bundle []WebhookOrderNotificationBundleDetailBundleInner `json:"bundle,omitempty"`
	// Contains information about non-bundle items in bundled item
	NonBundle []WebhookOrderNotificationBundleDetailNonBundleInner `json:"non_bundle,omitempty"`
}

// NewWebhookOrderNotificationBundleDetail instantiates a new WebhookOrderNotificationBundleDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookOrderNotificationBundleDetail() *WebhookOrderNotificationBundleDetail {
	this := WebhookOrderNotificationBundleDetail{}
	return &this
}

// NewWebhookOrderNotificationBundleDetailWithDefaults instantiates a new WebhookOrderNotificationBundleDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookOrderNotificationBundleDetailWithDefaults() *WebhookOrderNotificationBundleDetail {
	this := WebhookOrderNotificationBundleDetail{}
	return &this
}

// GetTotalProduct returns the TotalProduct field value if set, zero value otherwise.
func (o *WebhookOrderNotificationBundleDetail) GetTotalProduct() int64 {
	if o == nil || IsNil(o.TotalProduct) {
		var ret int64
		return ret
	}
	return *o.TotalProduct
}

// GetTotalProductOk returns a tuple with the TotalProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookOrderNotificationBundleDetail) GetTotalProductOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalProduct) {
		return nil, false
	}
	return o.TotalProduct, true
}

// HasTotalProduct returns a boolean if a field has been set.
func (o *WebhookOrderNotificationBundleDetail) HasTotalProduct() bool {
	if o != nil && !IsNil(o.TotalProduct) {
		return true
	}

	return false
}

// SetTotalProduct gets a reference to the given int64 and assigns it to the TotalProduct field.
func (o *WebhookOrderNotificationBundleDetail) SetTotalProduct(v int64) {
	o.TotalProduct = &v
}

// GetProductBundlingIcon returns the ProductBundlingIcon field value if set, zero value otherwise.
func (o *WebhookOrderNotificationBundleDetail) GetProductBundlingIcon() string {
	if o == nil || IsNil(o.ProductBundlingIcon) {
		var ret string
		return ret
	}
	return *o.ProductBundlingIcon
}

// GetProductBundlingIconOk returns a tuple with the ProductBundlingIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookOrderNotificationBundleDetail) GetProductBundlingIconOk() (*string, bool) {
	if o == nil || IsNil(o.ProductBundlingIcon) {
		return nil, false
	}
	return o.ProductBundlingIcon, true
}

// HasProductBundlingIcon returns a boolean if a field has been set.
func (o *WebhookOrderNotificationBundleDetail) HasProductBundlingIcon() bool {
	if o != nil && !IsNil(o.ProductBundlingIcon) {
		return true
	}

	return false
}

// SetProductBundlingIcon gets a reference to the given string and assigns it to the ProductBundlingIcon field.
func (o *WebhookOrderNotificationBundleDetail) SetProductBundlingIcon(v string) {
	o.ProductBundlingIcon = &v
}

// GetBundle returns the Bundle field value if set, zero value otherwise.
func (o *WebhookOrderNotificationBundleDetail) GetBundle() []WebhookOrderNotificationBundleDetailBundleInner {
	if o == nil || IsNil(o.Bundle) {
		var ret []WebhookOrderNotificationBundleDetailBundleInner
		return ret
	}
	return o.Bundle
}

// GetBundleOk returns a tuple with the Bundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookOrderNotificationBundleDetail) GetBundleOk() ([]WebhookOrderNotificationBundleDetailBundleInner, bool) {
	if o == nil || IsNil(o.Bundle) {
		return nil, false
	}
	return o.Bundle, true
}

// HasBundle returns a boolean if a field has been set.
func (o *WebhookOrderNotificationBundleDetail) HasBundle() bool {
	if o != nil && !IsNil(o.Bundle) {
		return true
	}

	return false
}

// SetBundle gets a reference to the given []WebhookOrderNotificationBundleDetailBundleInner and assigns it to the Bundle field.
func (o *WebhookOrderNotificationBundleDetail) SetBundle(v []WebhookOrderNotificationBundleDetailBundleInner) {
	o.Bundle = v
}

// GetNonBundle returns the NonBundle field value if set, zero value otherwise.
func (o *WebhookOrderNotificationBundleDetail) GetNonBundle() []WebhookOrderNotificationBundleDetailNonBundleInner {
	if o == nil || IsNil(o.NonBundle) {
		var ret []WebhookOrderNotificationBundleDetailNonBundleInner
		return ret
	}
	return o.NonBundle
}

// GetNonBundleOk returns a tuple with the NonBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookOrderNotificationBundleDetail) GetNonBundleOk() ([]WebhookOrderNotificationBundleDetailNonBundleInner, bool) {
	if o == nil || IsNil(o.NonBundle) {
		return nil, false
	}
	return o.NonBundle, true
}

// HasNonBundle returns a boolean if a field has been set.
func (o *WebhookOrderNotificationBundleDetail) HasNonBundle() bool {
	if o != nil && !IsNil(o.NonBundle) {
		return true
	}

	return false
}

// SetNonBundle gets a reference to the given []WebhookOrderNotificationBundleDetailNonBundleInner and assigns it to the NonBundle field.
func (o *WebhookOrderNotificationBundleDetail) SetNonBundle(v []WebhookOrderNotificationBundleDetailNonBundleInner) {
	o.NonBundle = v
}

func (o WebhookOrderNotificationBundleDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookOrderNotificationBundleDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalProduct) {
		toSerialize["total_product"] = o.TotalProduct
	}
	if !IsNil(o.ProductBundlingIcon) {
		toSerialize["product_bundling_icon"] = o.ProductBundlingIcon
	}
	if !IsNil(o.Bundle) {
		toSerialize["bundle"] = o.Bundle
	}
	if !IsNil(o.NonBundle) {
		toSerialize["non_bundle"] = o.NonBundle
	}
	return toSerialize, nil
}

type NullableWebhookOrderNotificationBundleDetail struct {
	value *WebhookOrderNotificationBundleDetail
	isSet bool
}

func (v NullableWebhookOrderNotificationBundleDetail) Get() *WebhookOrderNotificationBundleDetail {
	return v.value
}

func (v *NullableWebhookOrderNotificationBundleDetail) Set(val *WebhookOrderNotificationBundleDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookOrderNotificationBundleDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookOrderNotificationBundleDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookOrderNotificationBundleDetail(val *WebhookOrderNotificationBundleDetail) *NullableWebhookOrderNotificationBundleDetail {
	return &NullableWebhookOrderNotificationBundleDetail{value: val, isSet: true}
}

func (v NullableWebhookOrderNotificationBundleDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookOrderNotificationBundleDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


