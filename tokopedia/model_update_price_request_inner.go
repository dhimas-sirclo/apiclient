/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the UpdatePriceRequestInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePriceRequestInner{}

// UpdatePriceRequestInner struct for UpdatePriceRequestInner
type UpdatePriceRequestInner struct {
	// SKU of products that will be updated. Maximum characters allowed is 50
	Sku *string `json:"sku,omitempty"`
	// Product ID to update
	ProductId *int64 `json:"product_id,omitempty"`
	// New price to be set
	NewPrice *int64 `json:"new_price,omitempty"`
}

// NewUpdatePriceRequestInner instantiates a new UpdatePriceRequestInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePriceRequestInner() *UpdatePriceRequestInner {
	this := UpdatePriceRequestInner{}
	return &this
}

// NewUpdatePriceRequestInnerWithDefaults instantiates a new UpdatePriceRequestInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePriceRequestInnerWithDefaults() *UpdatePriceRequestInner {
	this := UpdatePriceRequestInner{}
	return &this
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *UpdatePriceRequestInner) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePriceRequestInner) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *UpdatePriceRequestInner) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *UpdatePriceRequestInner) SetSku(v string) {
	o.Sku = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *UpdatePriceRequestInner) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId) {
		var ret int64
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePriceRequestInner) GetProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *UpdatePriceRequestInner) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int64 and assigns it to the ProductId field.
func (o *UpdatePriceRequestInner) SetProductId(v int64) {
	o.ProductId = &v
}

// GetNewPrice returns the NewPrice field value if set, zero value otherwise.
func (o *UpdatePriceRequestInner) GetNewPrice() int64 {
	if o == nil || IsNil(o.NewPrice) {
		var ret int64
		return ret
	}
	return *o.NewPrice
}

// GetNewPriceOk returns a tuple with the NewPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePriceRequestInner) GetNewPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.NewPrice) {
		return nil, false
	}
	return o.NewPrice, true
}

// HasNewPrice returns a boolean if a field has been set.
func (o *UpdatePriceRequestInner) HasNewPrice() bool {
	if o != nil && !IsNil(o.NewPrice) {
		return true
	}

	return false
}

// SetNewPrice gets a reference to the given int64 and assigns it to the NewPrice field.
func (o *UpdatePriceRequestInner) SetNewPrice(v int64) {
	o.NewPrice = &v
}

func (o UpdatePriceRequestInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePriceRequestInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.NewPrice) {
		toSerialize["new_price"] = o.NewPrice
	}
	return toSerialize, nil
}

type NullableUpdatePriceRequestInner struct {
	value *UpdatePriceRequestInner
	isSet bool
}

func (v NullableUpdatePriceRequestInner) Get() *UpdatePriceRequestInner {
	return v.value
}

func (v *NullableUpdatePriceRequestInner) Set(val *UpdatePriceRequestInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePriceRequestInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePriceRequestInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePriceRequestInner(val *UpdatePriceRequestInner) *NullableUpdatePriceRequestInner {
	return &NullableUpdatePriceRequestInner{value: val, isSet: true}
}

func (v NullableUpdatePriceRequestInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePriceRequestInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


