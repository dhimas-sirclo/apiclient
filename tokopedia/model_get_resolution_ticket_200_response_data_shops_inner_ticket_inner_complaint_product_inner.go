/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner{}

// GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner struct for GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner
type GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"Name,omitempty"`
	Qty *int64 `json:"qty,omitempty"`
	Price *float64 `json:"price,omitempty"`
	FinalPrice *float64 `json:"final_price,omitempty"`
	Image *string `json:"image,omitempty"`
}

// NewGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner instantiates a new GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner() *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner {
	this := GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner{}
	return &this
}

// NewGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInnerWithDefaults instantiates a new GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInnerWithDefaults() *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner {
	this := GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) SetName(v string) {
	o.Name = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetQty() int64 {
	if o == nil || IsNil(o.Qty) {
		var ret int64
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetQtyOk() (*int64, bool) {
	if o == nil || IsNil(o.Qty) {
		return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) HasQty() bool {
	if o != nil && !IsNil(o.Qty) {
		return true
	}

	return false
}

// SetQty gets a reference to the given int64 and assigns it to the Qty field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) SetQty(v int64) {
	o.Qty = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) SetPrice(v float64) {
	o.Price = &v
}

// GetFinalPrice returns the FinalPrice field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetFinalPrice() float64 {
	if o == nil || IsNil(o.FinalPrice) {
		var ret float64
		return ret
	}
	return *o.FinalPrice
}

// GetFinalPriceOk returns a tuple with the FinalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetFinalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.FinalPrice) {
		return nil, false
	}
	return o.FinalPrice, true
}

// HasFinalPrice returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) HasFinalPrice() bool {
	if o != nil && !IsNil(o.FinalPrice) {
		return true
	}

	return false
}

// SetFinalPrice gets a reference to the given float64 and assigns it to the FinalPrice field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) SetFinalPrice(v float64) {
	o.FinalPrice = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) SetImage(v string) {
	o.Image = &v
}

func (o GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Qty) {
		toSerialize["qty"] = o.Qty
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.FinalPrice) {
		toSerialize["final_price"] = o.FinalPrice
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	return toSerialize, nil
}

type NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner struct {
	value *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner
	isSet bool
}

func (v NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) Get() *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner {
	return v.value
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) Set(val *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner(val *GetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner {
	return &NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner{value: val, isSet: true}
}

func (v NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResolutionTicket200ResponseDataShopsInnerTicketInnerComplaintProductInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


