/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the EditProductV3Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditProductV3Request{}

// EditProductV3Request struct for EditProductV3Request
type EditProductV3Request struct {
	Products []EditProductV3RequestProductsInner `json:"products"`
}

// NewEditProductV3Request instantiates a new EditProductV3Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditProductV3Request(products []EditProductV3RequestProductsInner) *EditProductV3Request {
	this := EditProductV3Request{}
	this.Products = products
	return &this
}

// NewEditProductV3RequestWithDefaults instantiates a new EditProductV3Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditProductV3RequestWithDefaults() *EditProductV3Request {
	this := EditProductV3Request{}
	return &this
}

// GetProducts returns the Products field value
func (o *EditProductV3Request) GetProducts() []EditProductV3RequestProductsInner {
	if o == nil {
		var ret []EditProductV3RequestProductsInner
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *EditProductV3Request) GetProductsOk() ([]EditProductV3RequestProductsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Products, true
}

// SetProducts sets field value
func (o *EditProductV3Request) SetProducts(v []EditProductV3RequestProductsInner) {
	o.Products = v
}

func (o EditProductV3Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditProductV3Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["products"] = o.Products
	return toSerialize, nil
}

type NullableEditProductV3Request struct {
	value *EditProductV3Request
	isSet bool
}

func (v NullableEditProductV3Request) Get() *EditProductV3Request {
	return v.value
}

func (v *NullableEditProductV3Request) Set(val *EditProductV3Request) {
	v.value = val
	v.isSet = true
}

func (v NullableEditProductV3Request) IsSet() bool {
	return v.isSet
}

func (v *NullableEditProductV3Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditProductV3Request(val *EditProductV3Request) *NullableEditProductV3Request {
	return &NullableEditProductV3Request{value: val, isSet: true}
}

func (v NullableEditProductV3Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditProductV3Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


