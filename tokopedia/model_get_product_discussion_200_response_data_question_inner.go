/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetProductDiscussion200ResponseDataQuestionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProductDiscussion200ResponseDataQuestionInner{}

// GetProductDiscussion200ResponseDataQuestionInner struct for GetProductDiscussion200ResponseDataQuestionInner
type GetProductDiscussion200ResponseDataQuestionInner struct {
	// Discussion Content
	Content *string `json:"Content,omitempty"`
	// Discussion Masked Content
	MaskedContent *string `json:"MaskedContent,omitempty"`
	// User username
	UserName *string `json:"UserName,omitempty"`
	// User userID
	UserID *int64 `json:"UserID,omitempty"`
	// Discussion Timestamp (format: 2020-12-04T13:40:19Z)
	CreateTime *string `json:"CreateTime,omitempty"`
	// Discussion Timestamp Formatted
	CreateTimeFormatted *string `json:"CreateTimeFormatted,omitempty"`
	// Total Answer Count
	TotalAnswer *int64 `json:"TotalAnswer,omitempty"`
	Answer []GetProductDiscussion200ResponseDataQuestionInnerAnswerInner `json:"Answer,omitempty"`
	// Question Unique Identifier
	QuestionID *int64 `json:"QuestionID,omitempty"`
	// Answerer Thumbnail URL
	AnswererThumbnail *string `json:"AnswererThumbnail,omitempty"`
	// User Thumbnail URL
	UserThumbnail *string `json:"UserThumbnail,omitempty"`
}

// NewGetProductDiscussion200ResponseDataQuestionInner instantiates a new GetProductDiscussion200ResponseDataQuestionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProductDiscussion200ResponseDataQuestionInner() *GetProductDiscussion200ResponseDataQuestionInner {
	this := GetProductDiscussion200ResponseDataQuestionInner{}
	return &this
}

// NewGetProductDiscussion200ResponseDataQuestionInnerWithDefaults instantiates a new GetProductDiscussion200ResponseDataQuestionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProductDiscussion200ResponseDataQuestionInnerWithDefaults() *GetProductDiscussion200ResponseDataQuestionInner {
	this := GetProductDiscussion200ResponseDataQuestionInner{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetContent(v string) {
	o.Content = &v
}

// GetMaskedContent returns the MaskedContent field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetMaskedContent() string {
	if o == nil || IsNil(o.MaskedContent) {
		var ret string
		return ret
	}
	return *o.MaskedContent
}

// GetMaskedContentOk returns a tuple with the MaskedContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetMaskedContentOk() (*string, bool) {
	if o == nil || IsNil(o.MaskedContent) {
		return nil, false
	}
	return o.MaskedContent, true
}

// HasMaskedContent returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasMaskedContent() bool {
	if o != nil && !IsNil(o.MaskedContent) {
		return true
	}

	return false
}

// SetMaskedContent gets a reference to the given string and assigns it to the MaskedContent field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetMaskedContent(v string) {
	o.MaskedContent = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetUserName(v string) {
	o.UserName = &v
}

// GetUserID returns the UserID field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetUserID() int64 {
	if o == nil || IsNil(o.UserID) {
		var ret int64
		return ret
	}
	return *o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetUserIDOk() (*int64, bool) {
	if o == nil || IsNil(o.UserID) {
		return nil, false
	}
	return o.UserID, true
}

// HasUserID returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasUserID() bool {
	if o != nil && !IsNil(o.UserID) {
		return true
	}

	return false
}

// SetUserID gets a reference to the given int64 and assigns it to the UserID field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetUserID(v int64) {
	o.UserID = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetCreateTimeFormatted returns the CreateTimeFormatted field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetCreateTimeFormatted() string {
	if o == nil || IsNil(o.CreateTimeFormatted) {
		var ret string
		return ret
	}
	return *o.CreateTimeFormatted
}

// GetCreateTimeFormattedOk returns a tuple with the CreateTimeFormatted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetCreateTimeFormattedOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTimeFormatted) {
		return nil, false
	}
	return o.CreateTimeFormatted, true
}

// HasCreateTimeFormatted returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasCreateTimeFormatted() bool {
	if o != nil && !IsNil(o.CreateTimeFormatted) {
		return true
	}

	return false
}

// SetCreateTimeFormatted gets a reference to the given string and assigns it to the CreateTimeFormatted field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetCreateTimeFormatted(v string) {
	o.CreateTimeFormatted = &v
}

// GetTotalAnswer returns the TotalAnswer field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetTotalAnswer() int64 {
	if o == nil || IsNil(o.TotalAnswer) {
		var ret int64
		return ret
	}
	return *o.TotalAnswer
}

// GetTotalAnswerOk returns a tuple with the TotalAnswer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetTotalAnswerOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalAnswer) {
		return nil, false
	}
	return o.TotalAnswer, true
}

// HasTotalAnswer returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasTotalAnswer() bool {
	if o != nil && !IsNil(o.TotalAnswer) {
		return true
	}

	return false
}

// SetTotalAnswer gets a reference to the given int64 and assigns it to the TotalAnswer field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetTotalAnswer(v int64) {
	o.TotalAnswer = &v
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetAnswer() []GetProductDiscussion200ResponseDataQuestionInnerAnswerInner {
	if o == nil || IsNil(o.Answer) {
		var ret []GetProductDiscussion200ResponseDataQuestionInnerAnswerInner
		return ret
	}
	return o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetAnswerOk() ([]GetProductDiscussion200ResponseDataQuestionInnerAnswerInner, bool) {
	if o == nil || IsNil(o.Answer) {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given []GetProductDiscussion200ResponseDataQuestionInnerAnswerInner and assigns it to the Answer field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetAnswer(v []GetProductDiscussion200ResponseDataQuestionInnerAnswerInner) {
	o.Answer = v
}

// GetQuestionID returns the QuestionID field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetQuestionID() int64 {
	if o == nil || IsNil(o.QuestionID) {
		var ret int64
		return ret
	}
	return *o.QuestionID
}

// GetQuestionIDOk returns a tuple with the QuestionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetQuestionIDOk() (*int64, bool) {
	if o == nil || IsNil(o.QuestionID) {
		return nil, false
	}
	return o.QuestionID, true
}

// HasQuestionID returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasQuestionID() bool {
	if o != nil && !IsNil(o.QuestionID) {
		return true
	}

	return false
}

// SetQuestionID gets a reference to the given int64 and assigns it to the QuestionID field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetQuestionID(v int64) {
	o.QuestionID = &v
}

// GetAnswererThumbnail returns the AnswererThumbnail field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetAnswererThumbnail() string {
	if o == nil || IsNil(o.AnswererThumbnail) {
		var ret string
		return ret
	}
	return *o.AnswererThumbnail
}

// GetAnswererThumbnailOk returns a tuple with the AnswererThumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetAnswererThumbnailOk() (*string, bool) {
	if o == nil || IsNil(o.AnswererThumbnail) {
		return nil, false
	}
	return o.AnswererThumbnail, true
}

// HasAnswererThumbnail returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasAnswererThumbnail() bool {
	if o != nil && !IsNil(o.AnswererThumbnail) {
		return true
	}

	return false
}

// SetAnswererThumbnail gets a reference to the given string and assigns it to the AnswererThumbnail field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetAnswererThumbnail(v string) {
	o.AnswererThumbnail = &v
}

// GetUserThumbnail returns the UserThumbnail field value if set, zero value otherwise.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetUserThumbnail() string {
	if o == nil || IsNil(o.UserThumbnail) {
		var ret string
		return ret
	}
	return *o.UserThumbnail
}

// GetUserThumbnailOk returns a tuple with the UserThumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) GetUserThumbnailOk() (*string, bool) {
	if o == nil || IsNil(o.UserThumbnail) {
		return nil, false
	}
	return o.UserThumbnail, true
}

// HasUserThumbnail returns a boolean if a field has been set.
func (o *GetProductDiscussion200ResponseDataQuestionInner) HasUserThumbnail() bool {
	if o != nil && !IsNil(o.UserThumbnail) {
		return true
	}

	return false
}

// SetUserThumbnail gets a reference to the given string and assigns it to the UserThumbnail field.
func (o *GetProductDiscussion200ResponseDataQuestionInner) SetUserThumbnail(v string) {
	o.UserThumbnail = &v
}

func (o GetProductDiscussion200ResponseDataQuestionInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProductDiscussion200ResponseDataQuestionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["Content"] = o.Content
	}
	if !IsNil(o.MaskedContent) {
		toSerialize["MaskedContent"] = o.MaskedContent
	}
	if !IsNil(o.UserName) {
		toSerialize["UserName"] = o.UserName
	}
	if !IsNil(o.UserID) {
		toSerialize["UserID"] = o.UserID
	}
	if !IsNil(o.CreateTime) {
		toSerialize["CreateTime"] = o.CreateTime
	}
	if !IsNil(o.CreateTimeFormatted) {
		toSerialize["CreateTimeFormatted"] = o.CreateTimeFormatted
	}
	if !IsNil(o.TotalAnswer) {
		toSerialize["TotalAnswer"] = o.TotalAnswer
	}
	if !IsNil(o.Answer) {
		toSerialize["Answer"] = o.Answer
	}
	if !IsNil(o.QuestionID) {
		toSerialize["QuestionID"] = o.QuestionID
	}
	if !IsNil(o.AnswererThumbnail) {
		toSerialize["AnswererThumbnail"] = o.AnswererThumbnail
	}
	if !IsNil(o.UserThumbnail) {
		toSerialize["UserThumbnail"] = o.UserThumbnail
	}
	return toSerialize, nil
}

type NullableGetProductDiscussion200ResponseDataQuestionInner struct {
	value *GetProductDiscussion200ResponseDataQuestionInner
	isSet bool
}

func (v NullableGetProductDiscussion200ResponseDataQuestionInner) Get() *GetProductDiscussion200ResponseDataQuestionInner {
	return v.value
}

func (v *NullableGetProductDiscussion200ResponseDataQuestionInner) Set(val *GetProductDiscussion200ResponseDataQuestionInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProductDiscussion200ResponseDataQuestionInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProductDiscussion200ResponseDataQuestionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProductDiscussion200ResponseDataQuestionInner(val *GetProductDiscussion200ResponseDataQuestionInner) *NullableGetProductDiscussion200ResponseDataQuestionInner {
	return &NullableGetProductDiscussion200ResponseDataQuestionInner{value: val, isSet: true}
}

func (v NullableGetProductDiscussion200ResponseDataQuestionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProductDiscussion200ResponseDataQuestionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


