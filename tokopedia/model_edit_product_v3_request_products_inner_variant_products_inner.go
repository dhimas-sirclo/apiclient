/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the EditProductV3RequestProductsInnerVariantProductsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditProductV3RequestProductsInnerVariantProductsInner{}

// EditProductV3RequestProductsInnerVariantProductsInner struct for EditProductV3RequestProductsInnerVariantProductsInner
type EditProductV3RequestProductsInnerVariantProductsInner struct {
	IsPrimary *bool `json:"is_primary,omitempty"`
	Status *string `json:"status,omitempty"`
	Price *int64 `json:"price,omitempty"`
	Stock *int64 `json:"stock,omitempty"`
	Sku *string `json:"sku,omitempty"`
	Combination []int64 `json:"combination,omitempty"`
	Pictures []EditProductV3RequestProductsInnerPicturesInner `json:"pictures,omitempty"`
}

// NewEditProductV3RequestProductsInnerVariantProductsInner instantiates a new EditProductV3RequestProductsInnerVariantProductsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditProductV3RequestProductsInnerVariantProductsInner() *EditProductV3RequestProductsInnerVariantProductsInner {
	this := EditProductV3RequestProductsInnerVariantProductsInner{}
	return &this
}

// NewEditProductV3RequestProductsInnerVariantProductsInnerWithDefaults instantiates a new EditProductV3RequestProductsInnerVariantProductsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditProductV3RequestProductsInnerVariantProductsInnerWithDefaults() *EditProductV3RequestProductsInnerVariantProductsInner {
	this := EditProductV3RequestProductsInnerVariantProductsInner{}
	return &this
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetIsPrimary() bool {
	if o == nil || IsNil(o.IsPrimary) {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrimary) {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) HasIsPrimary() bool {
	if o != nil && !IsNil(o.IsPrimary) {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) SetStatus(v string) {
	o.Status = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetPrice() int64 {
	if o == nil || IsNil(o.Price) {
		var ret int64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int64 and assigns it to the Price field.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) SetPrice(v int64) {
	o.Price = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetStock() int64 {
	if o == nil || IsNil(o.Stock) {
		var ret int64
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetStockOk() (*int64, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int64 and assigns it to the Stock field.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) SetStock(v int64) {
	o.Stock = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) SetSku(v string) {
	o.Sku = &v
}

// GetCombination returns the Combination field value if set, zero value otherwise.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetCombination() []int64 {
	if o == nil || IsNil(o.Combination) {
		var ret []int64
		return ret
	}
	return o.Combination
}

// GetCombinationOk returns a tuple with the Combination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetCombinationOk() ([]int64, bool) {
	if o == nil || IsNil(o.Combination) {
		return nil, false
	}
	return o.Combination, true
}

// HasCombination returns a boolean if a field has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) HasCombination() bool {
	if o != nil && !IsNil(o.Combination) {
		return true
	}

	return false
}

// SetCombination gets a reference to the given []int64 and assigns it to the Combination field.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) SetCombination(v []int64) {
	o.Combination = v
}

// GetPictures returns the Pictures field value if set, zero value otherwise.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetPictures() []EditProductV3RequestProductsInnerPicturesInner {
	if o == nil || IsNil(o.Pictures) {
		var ret []EditProductV3RequestProductsInnerPicturesInner
		return ret
	}
	return o.Pictures
}

// GetPicturesOk returns a tuple with the Pictures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) GetPicturesOk() ([]EditProductV3RequestProductsInnerPicturesInner, bool) {
	if o == nil || IsNil(o.Pictures) {
		return nil, false
	}
	return o.Pictures, true
}

// HasPictures returns a boolean if a field has been set.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) HasPictures() bool {
	if o != nil && !IsNil(o.Pictures) {
		return true
	}

	return false
}

// SetPictures gets a reference to the given []EditProductV3RequestProductsInnerPicturesInner and assigns it to the Pictures field.
func (o *EditProductV3RequestProductsInnerVariantProductsInner) SetPictures(v []EditProductV3RequestProductsInnerPicturesInner) {
	o.Pictures = v
}

func (o EditProductV3RequestProductsInnerVariantProductsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditProductV3RequestProductsInnerVariantProductsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsPrimary) {
		toSerialize["is_primary"] = o.IsPrimary
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Combination) {
		toSerialize["combination"] = o.Combination
	}
	if !IsNil(o.Pictures) {
		toSerialize["pictures"] = o.Pictures
	}
	return toSerialize, nil
}

type NullableEditProductV3RequestProductsInnerVariantProductsInner struct {
	value *EditProductV3RequestProductsInnerVariantProductsInner
	isSet bool
}

func (v NullableEditProductV3RequestProductsInnerVariantProductsInner) Get() *EditProductV3RequestProductsInnerVariantProductsInner {
	return v.value
}

func (v *NullableEditProductV3RequestProductsInnerVariantProductsInner) Set(val *EditProductV3RequestProductsInnerVariantProductsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEditProductV3RequestProductsInnerVariantProductsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEditProductV3RequestProductsInnerVariantProductsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditProductV3RequestProductsInnerVariantProductsInner(val *EditProductV3RequestProductsInnerVariantProductsInner) *NullableEditProductV3RequestProductsInnerVariantProductsInner {
	return &NullableEditProductV3RequestProductsInnerVariantProductsInner{value: val, isSet: true}
}

func (v NullableEditProductV3RequestProductsInnerVariantProductsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditProductV3RequestProductsInnerVariantProductsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


