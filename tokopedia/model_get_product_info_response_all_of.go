/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetProductInfoResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetProductInfoResponseAllOf{}

// GetProductInfoResponseAllOf struct for GetProductInfoResponseAllOf
type GetProductInfoResponseAllOf struct {
	Data []Product `json:"data,omitempty"`
}

// NewGetProductInfoResponseAllOf instantiates a new GetProductInfoResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProductInfoResponseAllOf() *GetProductInfoResponseAllOf {
	this := GetProductInfoResponseAllOf{}
	return &this
}

// NewGetProductInfoResponseAllOfWithDefaults instantiates a new GetProductInfoResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProductInfoResponseAllOfWithDefaults() *GetProductInfoResponseAllOf {
	this := GetProductInfoResponseAllOf{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetProductInfoResponseAllOf) GetData() []Product {
	if o == nil || IsNil(o.Data) {
		var ret []Product
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductInfoResponseAllOf) GetDataOk() ([]Product, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetProductInfoResponseAllOf) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Product and assigns it to the Data field.
func (o *GetProductInfoResponseAllOf) SetData(v []Product) {
	o.Data = v
}

func (o GetProductInfoResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetProductInfoResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGetProductInfoResponseAllOf struct {
	value *GetProductInfoResponseAllOf
	isSet bool
}

func (v NullableGetProductInfoResponseAllOf) Get() *GetProductInfoResponseAllOf {
	return v.value
}

func (v *NullableGetProductInfoResponseAllOf) Set(val *GetProductInfoResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProductInfoResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProductInfoResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProductInfoResponseAllOf(val *GetProductInfoResponseAllOf) *NullableGetProductInfoResponseAllOf {
	return &NullableGetProductInfoResponseAllOf{value: val, isSet: true}
}

func (v NullableGetProductInfoResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProductInfoResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


