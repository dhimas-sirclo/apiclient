/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the WebhookProductEdit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookProductEdit{}

// WebhookProductEdit This notification will be trigger when using Edit Product V2.0.[https://developer.tokopedia.com/openapi/guide/api-reference/tokopedia/product-api/edit-product]
type WebhookProductEdit struct {
	// Upload id of the product to check Notification
	UploadId *int64 `json:"upload_id,omitempty"`
	// Shop unique identifier
	ShopId *int64 `json:"shop_id,omitempty"`
	// User unique identifier
	UserId *int64 `json:"user_id,omitempty"`
	// Fulfillment service unique identifier
	FsId *int64 `json:"fs_id,omitempty"`
	Status *string `json:"status,omitempty"`
	TotalData *int64 `json:"total_data,omitempty"`
	SuccessRowsData []WebhookProductCreationSuccessRowDataInner `json:"success_rows_data,omitempty"`
}

// NewWebhookProductEdit instantiates a new WebhookProductEdit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookProductEdit() *WebhookProductEdit {
	this := WebhookProductEdit{}
	return &this
}

// NewWebhookProductEditWithDefaults instantiates a new WebhookProductEdit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookProductEditWithDefaults() *WebhookProductEdit {
	this := WebhookProductEdit{}
	return &this
}

// GetUploadId returns the UploadId field value if set, zero value otherwise.
func (o *WebhookProductEdit) GetUploadId() int64 {
	if o == nil || IsNil(o.UploadId) {
		var ret int64
		return ret
	}
	return *o.UploadId
}

// GetUploadIdOk returns a tuple with the UploadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductEdit) GetUploadIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UploadId) {
		return nil, false
	}
	return o.UploadId, true
}

// HasUploadId returns a boolean if a field has been set.
func (o *WebhookProductEdit) HasUploadId() bool {
	if o != nil && !IsNil(o.UploadId) {
		return true
	}

	return false
}

// SetUploadId gets a reference to the given int64 and assigns it to the UploadId field.
func (o *WebhookProductEdit) SetUploadId(v int64) {
	o.UploadId = &v
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *WebhookProductEdit) GetShopId() int64 {
	if o == nil || IsNil(o.ShopId) {
		var ret int64
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductEdit) GetShopIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ShopId) {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *WebhookProductEdit) HasShopId() bool {
	if o != nil && !IsNil(o.ShopId) {
		return true
	}

	return false
}

// SetShopId gets a reference to the given int64 and assigns it to the ShopId field.
func (o *WebhookProductEdit) SetShopId(v int64) {
	o.ShopId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *WebhookProductEdit) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductEdit) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *WebhookProductEdit) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *WebhookProductEdit) SetUserId(v int64) {
	o.UserId = &v
}

// GetFsId returns the FsId field value if set, zero value otherwise.
func (o *WebhookProductEdit) GetFsId() int64 {
	if o == nil || IsNil(o.FsId) {
		var ret int64
		return ret
	}
	return *o.FsId
}

// GetFsIdOk returns a tuple with the FsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductEdit) GetFsIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FsId) {
		return nil, false
	}
	return o.FsId, true
}

// HasFsId returns a boolean if a field has been set.
func (o *WebhookProductEdit) HasFsId() bool {
	if o != nil && !IsNil(o.FsId) {
		return true
	}

	return false
}

// SetFsId gets a reference to the given int64 and assigns it to the FsId field.
func (o *WebhookProductEdit) SetFsId(v int64) {
	o.FsId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WebhookProductEdit) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductEdit) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WebhookProductEdit) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WebhookProductEdit) SetStatus(v string) {
	o.Status = &v
}

// GetTotalData returns the TotalData field value if set, zero value otherwise.
func (o *WebhookProductEdit) GetTotalData() int64 {
	if o == nil || IsNil(o.TotalData) {
		var ret int64
		return ret
	}
	return *o.TotalData
}

// GetTotalDataOk returns a tuple with the TotalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductEdit) GetTotalDataOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalData) {
		return nil, false
	}
	return o.TotalData, true
}

// HasTotalData returns a boolean if a field has been set.
func (o *WebhookProductEdit) HasTotalData() bool {
	if o != nil && !IsNil(o.TotalData) {
		return true
	}

	return false
}

// SetTotalData gets a reference to the given int64 and assigns it to the TotalData field.
func (o *WebhookProductEdit) SetTotalData(v int64) {
	o.TotalData = &v
}

// GetSuccessRowsData returns the SuccessRowsData field value if set, zero value otherwise.
func (o *WebhookProductEdit) GetSuccessRowsData() []WebhookProductCreationSuccessRowDataInner {
	if o == nil || IsNil(o.SuccessRowsData) {
		var ret []WebhookProductCreationSuccessRowDataInner
		return ret
	}
	return o.SuccessRowsData
}

// GetSuccessRowsDataOk returns a tuple with the SuccessRowsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookProductEdit) GetSuccessRowsDataOk() ([]WebhookProductCreationSuccessRowDataInner, bool) {
	if o == nil || IsNil(o.SuccessRowsData) {
		return nil, false
	}
	return o.SuccessRowsData, true
}

// HasSuccessRowsData returns a boolean if a field has been set.
func (o *WebhookProductEdit) HasSuccessRowsData() bool {
	if o != nil && !IsNil(o.SuccessRowsData) {
		return true
	}

	return false
}

// SetSuccessRowsData gets a reference to the given []WebhookProductCreationSuccessRowDataInner and assigns it to the SuccessRowsData field.
func (o *WebhookProductEdit) SetSuccessRowsData(v []WebhookProductCreationSuccessRowDataInner) {
	o.SuccessRowsData = v
}

func (o WebhookProductEdit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookProductEdit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UploadId) {
		toSerialize["upload_id"] = o.UploadId
	}
	if !IsNil(o.ShopId) {
		toSerialize["shop_id"] = o.ShopId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.FsId) {
		toSerialize["fs_id"] = o.FsId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TotalData) {
		toSerialize["total_data"] = o.TotalData
	}
	if !IsNil(o.SuccessRowsData) {
		toSerialize["success_rows_data"] = o.SuccessRowsData
	}
	return toSerialize, nil
}

type NullableWebhookProductEdit struct {
	value *WebhookProductEdit
	isSet bool
}

func (v NullableWebhookProductEdit) Get() *WebhookProductEdit {
	return v.value
}

func (v *NullableWebhookProductEdit) Set(val *WebhookProductEdit) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookProductEdit) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookProductEdit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookProductEdit(val *WebhookProductEdit) *NullableWebhookProductEdit {
	return &NullableWebhookProductEdit{value: val, isSet: true}
}

func (v NullableWebhookProductEdit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookProductEdit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


