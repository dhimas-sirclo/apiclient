/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetShowcaseAllEtalase200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetShowcaseAllEtalase200ResponseData{}

// GetShowcaseAllEtalase200ResponseData struct for GetShowcaseAllEtalase200ResponseData
type GetShowcaseAllEtalase200ResponseData struct {
	Shop *GetShowcaseAllEtalase200ResponseDataShop `json:"shop,omitempty"`
	Etalase []GetShowcaseAllEtalase200ResponseDataEtalaseInner `json:"etalase,omitempty"`
}

// NewGetShowcaseAllEtalase200ResponseData instantiates a new GetShowcaseAllEtalase200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetShowcaseAllEtalase200ResponseData() *GetShowcaseAllEtalase200ResponseData {
	this := GetShowcaseAllEtalase200ResponseData{}
	return &this
}

// NewGetShowcaseAllEtalase200ResponseDataWithDefaults instantiates a new GetShowcaseAllEtalase200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetShowcaseAllEtalase200ResponseDataWithDefaults() *GetShowcaseAllEtalase200ResponseData {
	this := GetShowcaseAllEtalase200ResponseData{}
	return &this
}

// GetShop returns the Shop field value if set, zero value otherwise.
func (o *GetShowcaseAllEtalase200ResponseData) GetShop() GetShowcaseAllEtalase200ResponseDataShop {
	if o == nil || IsNil(o.Shop) {
		var ret GetShowcaseAllEtalase200ResponseDataShop
		return ret
	}
	return *o.Shop
}

// GetShopOk returns a tuple with the Shop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShowcaseAllEtalase200ResponseData) GetShopOk() (*GetShowcaseAllEtalase200ResponseDataShop, bool) {
	if o == nil || IsNil(o.Shop) {
		return nil, false
	}
	return o.Shop, true
}

// HasShop returns a boolean if a field has been set.
func (o *GetShowcaseAllEtalase200ResponseData) HasShop() bool {
	if o != nil && !IsNil(o.Shop) {
		return true
	}

	return false
}

// SetShop gets a reference to the given GetShowcaseAllEtalase200ResponseDataShop and assigns it to the Shop field.
func (o *GetShowcaseAllEtalase200ResponseData) SetShop(v GetShowcaseAllEtalase200ResponseDataShop) {
	o.Shop = &v
}

// GetEtalase returns the Etalase field value if set, zero value otherwise.
func (o *GetShowcaseAllEtalase200ResponseData) GetEtalase() []GetShowcaseAllEtalase200ResponseDataEtalaseInner {
	if o == nil || IsNil(o.Etalase) {
		var ret []GetShowcaseAllEtalase200ResponseDataEtalaseInner
		return ret
	}
	return o.Etalase
}

// GetEtalaseOk returns a tuple with the Etalase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShowcaseAllEtalase200ResponseData) GetEtalaseOk() ([]GetShowcaseAllEtalase200ResponseDataEtalaseInner, bool) {
	if o == nil || IsNil(o.Etalase) {
		return nil, false
	}
	return o.Etalase, true
}

// HasEtalase returns a boolean if a field has been set.
func (o *GetShowcaseAllEtalase200ResponseData) HasEtalase() bool {
	if o != nil && !IsNil(o.Etalase) {
		return true
	}

	return false
}

// SetEtalase gets a reference to the given []GetShowcaseAllEtalase200ResponseDataEtalaseInner and assigns it to the Etalase field.
func (o *GetShowcaseAllEtalase200ResponseData) SetEtalase(v []GetShowcaseAllEtalase200ResponseDataEtalaseInner) {
	o.Etalase = v
}

func (o GetShowcaseAllEtalase200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetShowcaseAllEtalase200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Shop) {
		toSerialize["shop"] = o.Shop
	}
	if !IsNil(o.Etalase) {
		toSerialize["etalase"] = o.Etalase
	}
	return toSerialize, nil
}

type NullableGetShowcaseAllEtalase200ResponseData struct {
	value *GetShowcaseAllEtalase200ResponseData
	isSet bool
}

func (v NullableGetShowcaseAllEtalase200ResponseData) Get() *GetShowcaseAllEtalase200ResponseData {
	return v.value
}

func (v *NullableGetShowcaseAllEtalase200ResponseData) Set(val *GetShowcaseAllEtalase200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetShowcaseAllEtalase200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetShowcaseAllEtalase200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetShowcaseAllEtalase200ResponseData(val *GetShowcaseAllEtalase200ResponseData) *NullableGetShowcaseAllEtalase200ResponseData {
	return &NullableGetShowcaseAllEtalase200ResponseData{value: val, isSet: true}
}

func (v NullableGetShowcaseAllEtalase200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetShowcaseAllEtalase200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


