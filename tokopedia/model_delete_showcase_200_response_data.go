/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the DeleteShowcase200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteShowcase200ResponseData{}

// DeleteShowcase200ResponseData struct for DeleteShowcase200ResponseData
type DeleteShowcase200ResponseData struct {
	Message *string `json:"message,omitempty"`
}

// NewDeleteShowcase200ResponseData instantiates a new DeleteShowcase200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteShowcase200ResponseData() *DeleteShowcase200ResponseData {
	this := DeleteShowcase200ResponseData{}
	return &this
}

// NewDeleteShowcase200ResponseDataWithDefaults instantiates a new DeleteShowcase200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteShowcase200ResponseDataWithDefaults() *DeleteShowcase200ResponseData {
	this := DeleteShowcase200ResponseData{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DeleteShowcase200ResponseData) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteShowcase200ResponseData) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DeleteShowcase200ResponseData) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DeleteShowcase200ResponseData) SetMessage(v string) {
	o.Message = &v
}

func (o DeleteShowcase200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteShowcase200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableDeleteShowcase200ResponseData struct {
	value *DeleteShowcase200ResponseData
	isSet bool
}

func (v NullableDeleteShowcase200ResponseData) Get() *DeleteShowcase200ResponseData {
	return v.value
}

func (v *NullableDeleteShowcase200ResponseData) Set(val *DeleteShowcase200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteShowcase200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteShowcase200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteShowcase200ResponseData(val *DeleteShowcase200ResponseData) *NullableDeleteShowcase200ResponseData {
	return &NullableDeleteShowcase200ResponseData{value: val, isSet: true}
}

func (v NullableDeleteShowcase200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteShowcase200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


