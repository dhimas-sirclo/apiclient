/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the UpdateShopStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateShopStatusRequest{}

// UpdateShopStatusRequest struct for UpdateShopStatusRequest
type UpdateShopStatusRequest struct {
	// Shop unique identifier
	ShopId int64 `json:"shop_id"`
	// Update the shop status. Value between open or close
	Action string `json:"action"`
	// Required for action : close. UNIX timestamp of date (hour, min, sec) from which the resolution ticket are 
	StartDate *string `json:"start_date,omitempty"`
	// Required for action : close. UNIX timestamp of date (hour, min, sec) to which the resolution ticket are 
	EndDate *string `json:"end_date,omitempty"`
	// Close shop description
	CloseWARN *string `json:"close_WARN,omitempty"`
	// Required for action : close. Value between true or false. If true, then immediately close shop & ignore start_date’s date. If false it will follows start_date’s schedule to close 
	CloseNow *bool `json:"close_now,omitempty"`
}

// NewUpdateShopStatusRequest instantiates a new UpdateShopStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateShopStatusRequest(shopId int64, action string) *UpdateShopStatusRequest {
	this := UpdateShopStatusRequest{}
	this.ShopId = shopId
	this.Action = action
	return &this
}

// NewUpdateShopStatusRequestWithDefaults instantiates a new UpdateShopStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateShopStatusRequestWithDefaults() *UpdateShopStatusRequest {
	this := UpdateShopStatusRequest{}
	return &this
}

// GetShopId returns the ShopId field value
func (o *UpdateShopStatusRequest) GetShopId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value
// and a boolean to check if the value has been set.
func (o *UpdateShopStatusRequest) GetShopIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShopId, true
}

// SetShopId sets field value
func (o *UpdateShopStatusRequest) SetShopId(v int64) {
	o.ShopId = v
}

// GetAction returns the Action field value
func (o *UpdateShopStatusRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *UpdateShopStatusRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *UpdateShopStatusRequest) SetAction(v string) {
	o.Action = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *UpdateShopStatusRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateShopStatusRequest) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *UpdateShopStatusRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *UpdateShopStatusRequest) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *UpdateShopStatusRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateShopStatusRequest) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *UpdateShopStatusRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *UpdateShopStatusRequest) SetEndDate(v string) {
	o.EndDate = &v
}

// GetCloseWARN returns the CloseWARN field value if set, zero value otherwise.
func (o *UpdateShopStatusRequest) GetCloseWARN() string {
	if o == nil || IsNil(o.CloseWARN) {
		var ret string
		return ret
	}
	return *o.CloseWARN
}

// GetCloseWARNOk returns a tuple with the CloseWARN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateShopStatusRequest) GetCloseWARNOk() (*string, bool) {
	if o == nil || IsNil(o.CloseWARN) {
		return nil, false
	}
	return o.CloseWARN, true
}

// HasCloseWARN returns a boolean if a field has been set.
func (o *UpdateShopStatusRequest) HasCloseWARN() bool {
	if o != nil && !IsNil(o.CloseWARN) {
		return true
	}

	return false
}

// SetCloseWARN gets a reference to the given string and assigns it to the CloseWARN field.
func (o *UpdateShopStatusRequest) SetCloseWARN(v string) {
	o.CloseWARN = &v
}

// GetCloseNow returns the CloseNow field value if set, zero value otherwise.
func (o *UpdateShopStatusRequest) GetCloseNow() bool {
	if o == nil || IsNil(o.CloseNow) {
		var ret bool
		return ret
	}
	return *o.CloseNow
}

// GetCloseNowOk returns a tuple with the CloseNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateShopStatusRequest) GetCloseNowOk() (*bool, bool) {
	if o == nil || IsNil(o.CloseNow) {
		return nil, false
	}
	return o.CloseNow, true
}

// HasCloseNow returns a boolean if a field has been set.
func (o *UpdateShopStatusRequest) HasCloseNow() bool {
	if o != nil && !IsNil(o.CloseNow) {
		return true
	}

	return false
}

// SetCloseNow gets a reference to the given bool and assigns it to the CloseNow field.
func (o *UpdateShopStatusRequest) SetCloseNow(v bool) {
	o.CloseNow = &v
}

func (o UpdateShopStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateShopStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shop_id"] = o.ShopId
	toSerialize["action"] = o.Action
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.CloseWARN) {
		toSerialize["close_WARN"] = o.CloseWARN
	}
	if !IsNil(o.CloseNow) {
		toSerialize["close_now"] = o.CloseNow
	}
	return toSerialize, nil
}

type NullableUpdateShopStatusRequest struct {
	value *UpdateShopStatusRequest
	isSet bool
}

func (v NullableUpdateShopStatusRequest) Get() *UpdateShopStatusRequest {
	return v.value
}

func (v *NullableUpdateShopStatusRequest) Set(val *UpdateShopStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateShopStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateShopStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateShopStatusRequest(val *UpdateShopStatusRequest) *NullableUpdateShopStatusRequest {
	return &NullableUpdateShopStatusRequest{value: val, isSet: true}
}

func (v NullableUpdateShopStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateShopStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


