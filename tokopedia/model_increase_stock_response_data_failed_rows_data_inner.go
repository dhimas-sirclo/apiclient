/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the IncreaseStockResponseDataFailedRowsDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncreaseStockResponseDataFailedRowsDataInner{}

// IncreaseStockResponseDataFailedRowsDataInner struct for IncreaseStockResponseDataFailedRowsDataInner
type IncreaseStockResponseDataFailedRowsDataInner struct {
	ProductId *int64 `json:"product_id,omitempty"`
	NewStock *int64 `json:"new_stock,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewIncreaseStockResponseDataFailedRowsDataInner instantiates a new IncreaseStockResponseDataFailedRowsDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncreaseStockResponseDataFailedRowsDataInner() *IncreaseStockResponseDataFailedRowsDataInner {
	this := IncreaseStockResponseDataFailedRowsDataInner{}
	return &this
}

// NewIncreaseStockResponseDataFailedRowsDataInnerWithDefaults instantiates a new IncreaseStockResponseDataFailedRowsDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncreaseStockResponseDataFailedRowsDataInnerWithDefaults() *IncreaseStockResponseDataFailedRowsDataInner {
	this := IncreaseStockResponseDataFailedRowsDataInner{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *IncreaseStockResponseDataFailedRowsDataInner) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId) {
		var ret int64
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncreaseStockResponseDataFailedRowsDataInner) GetProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *IncreaseStockResponseDataFailedRowsDataInner) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int64 and assigns it to the ProductId field.
func (o *IncreaseStockResponseDataFailedRowsDataInner) SetProductId(v int64) {
	o.ProductId = &v
}

// GetNewStock returns the NewStock field value if set, zero value otherwise.
func (o *IncreaseStockResponseDataFailedRowsDataInner) GetNewStock() int64 {
	if o == nil || IsNil(o.NewStock) {
		var ret int64
		return ret
	}
	return *o.NewStock
}

// GetNewStockOk returns a tuple with the NewStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncreaseStockResponseDataFailedRowsDataInner) GetNewStockOk() (*int64, bool) {
	if o == nil || IsNil(o.NewStock) {
		return nil, false
	}
	return o.NewStock, true
}

// HasNewStock returns a boolean if a field has been set.
func (o *IncreaseStockResponseDataFailedRowsDataInner) HasNewStock() bool {
	if o != nil && !IsNil(o.NewStock) {
		return true
	}

	return false
}

// SetNewStock gets a reference to the given int64 and assigns it to the NewStock field.
func (o *IncreaseStockResponseDataFailedRowsDataInner) SetNewStock(v int64) {
	o.NewStock = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *IncreaseStockResponseDataFailedRowsDataInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncreaseStockResponseDataFailedRowsDataInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *IncreaseStockResponseDataFailedRowsDataInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *IncreaseStockResponseDataFailedRowsDataInner) SetMessage(v string) {
	o.Message = &v
}

func (o IncreaseStockResponseDataFailedRowsDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncreaseStockResponseDataFailedRowsDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.NewStock) {
		toSerialize["new_stock"] = o.NewStock
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableIncreaseStockResponseDataFailedRowsDataInner struct {
	value *IncreaseStockResponseDataFailedRowsDataInner
	isSet bool
}

func (v NullableIncreaseStockResponseDataFailedRowsDataInner) Get() *IncreaseStockResponseDataFailedRowsDataInner {
	return v.value
}

func (v *NullableIncreaseStockResponseDataFailedRowsDataInner) Set(val *IncreaseStockResponseDataFailedRowsDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIncreaseStockResponseDataFailedRowsDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIncreaseStockResponseDataFailedRowsDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncreaseStockResponseDataFailedRowsDataInner(val *IncreaseStockResponseDataFailedRowsDataInner) *NullableIncreaseStockResponseDataFailedRowsDataInner {
	return &NullableIncreaseStockResponseDataFailedRowsDataInner{value: val, isSet: true}
}

func (v NullableIncreaseStockResponseDataFailedRowsDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncreaseStockResponseDataFailedRowsDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


