/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the ViewSlashPrice200ResponseDataInnerWarehousesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewSlashPrice200ResponseDataInnerWarehousesInner{}

// ViewSlashPrice200ResponseDataInnerWarehousesInner struct for ViewSlashPrice200ResponseDataInnerWarehousesInner
type ViewSlashPrice200ResponseDataInnerWarehousesInner struct {
	// Warehouse Unique Identifier
	WarehouseId *int64 `json:"warehouse_id,omitempty"`
	// Warehouse Name
	WarehouseName *string `json:"warehouse_name,omitempty"`
	// Warehouse Location
	WarehouseLocation *string `json:"warehouse_location,omitempty"`
	// Warehouse Product Stock
	WarehouseStock *int64 `json:"warehouse_stock,omitempty"`
	InitialQuota *int64 `json:"initial_quota,omitempty"`
	// Warehouse Product Maximum Order
	MaxOrder *int64 `json:"max_order,omitempty"`
	EventId *int64 `json:"event_id,omitempty"`
}

// NewViewSlashPrice200ResponseDataInnerWarehousesInner instantiates a new ViewSlashPrice200ResponseDataInnerWarehousesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewSlashPrice200ResponseDataInnerWarehousesInner() *ViewSlashPrice200ResponseDataInnerWarehousesInner {
	this := ViewSlashPrice200ResponseDataInnerWarehousesInner{}
	return &this
}

// NewViewSlashPrice200ResponseDataInnerWarehousesInnerWithDefaults instantiates a new ViewSlashPrice200ResponseDataInnerWarehousesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewSlashPrice200ResponseDataInnerWarehousesInnerWithDefaults() *ViewSlashPrice200ResponseDataInnerWarehousesInner {
	this := ViewSlashPrice200ResponseDataInnerWarehousesInner{}
	return &this
}

// GetWarehouseId returns the WarehouseId field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseId() int64 {
	if o == nil || IsNil(o.WarehouseId) {
		var ret int64
		return ret
	}
	return *o.WarehouseId
}

// GetWarehouseIdOk returns a tuple with the WarehouseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.WarehouseId) {
		return nil, false
	}
	return o.WarehouseId, true
}

// HasWarehouseId returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) HasWarehouseId() bool {
	if o != nil && !IsNil(o.WarehouseId) {
		return true
	}

	return false
}

// SetWarehouseId gets a reference to the given int64 and assigns it to the WarehouseId field.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) SetWarehouseId(v int64) {
	o.WarehouseId = &v
}

// GetWarehouseName returns the WarehouseName field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseName() string {
	if o == nil || IsNil(o.WarehouseName) {
		var ret string
		return ret
	}
	return *o.WarehouseName
}

// GetWarehouseNameOk returns a tuple with the WarehouseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseNameOk() (*string, bool) {
	if o == nil || IsNil(o.WarehouseName) {
		return nil, false
	}
	return o.WarehouseName, true
}

// HasWarehouseName returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) HasWarehouseName() bool {
	if o != nil && !IsNil(o.WarehouseName) {
		return true
	}

	return false
}

// SetWarehouseName gets a reference to the given string and assigns it to the WarehouseName field.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) SetWarehouseName(v string) {
	o.WarehouseName = &v
}

// GetWarehouseLocation returns the WarehouseLocation field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseLocation() string {
	if o == nil || IsNil(o.WarehouseLocation) {
		var ret string
		return ret
	}
	return *o.WarehouseLocation
}

// GetWarehouseLocationOk returns a tuple with the WarehouseLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseLocationOk() (*string, bool) {
	if o == nil || IsNil(o.WarehouseLocation) {
		return nil, false
	}
	return o.WarehouseLocation, true
}

// HasWarehouseLocation returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) HasWarehouseLocation() bool {
	if o != nil && !IsNil(o.WarehouseLocation) {
		return true
	}

	return false
}

// SetWarehouseLocation gets a reference to the given string and assigns it to the WarehouseLocation field.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) SetWarehouseLocation(v string) {
	o.WarehouseLocation = &v
}

// GetWarehouseStock returns the WarehouseStock field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseStock() int64 {
	if o == nil || IsNil(o.WarehouseStock) {
		var ret int64
		return ret
	}
	return *o.WarehouseStock
}

// GetWarehouseStockOk returns a tuple with the WarehouseStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetWarehouseStockOk() (*int64, bool) {
	if o == nil || IsNil(o.WarehouseStock) {
		return nil, false
	}
	return o.WarehouseStock, true
}

// HasWarehouseStock returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) HasWarehouseStock() bool {
	if o != nil && !IsNil(o.WarehouseStock) {
		return true
	}

	return false
}

// SetWarehouseStock gets a reference to the given int64 and assigns it to the WarehouseStock field.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) SetWarehouseStock(v int64) {
	o.WarehouseStock = &v
}

// GetInitialQuota returns the InitialQuota field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetInitialQuota() int64 {
	if o == nil || IsNil(o.InitialQuota) {
		var ret int64
		return ret
	}
	return *o.InitialQuota
}

// GetInitialQuotaOk returns a tuple with the InitialQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetInitialQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.InitialQuota) {
		return nil, false
	}
	return o.InitialQuota, true
}

// HasInitialQuota returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) HasInitialQuota() bool {
	if o != nil && !IsNil(o.InitialQuota) {
		return true
	}

	return false
}

// SetInitialQuota gets a reference to the given int64 and assigns it to the InitialQuota field.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) SetInitialQuota(v int64) {
	o.InitialQuota = &v
}

// GetMaxOrder returns the MaxOrder field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetMaxOrder() int64 {
	if o == nil || IsNil(o.MaxOrder) {
		var ret int64
		return ret
	}
	return *o.MaxOrder
}

// GetMaxOrderOk returns a tuple with the MaxOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetMaxOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxOrder) {
		return nil, false
	}
	return o.MaxOrder, true
}

// HasMaxOrder returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) HasMaxOrder() bool {
	if o != nil && !IsNil(o.MaxOrder) {
		return true
	}

	return false
}

// SetMaxOrder gets a reference to the given int64 and assigns it to the MaxOrder field.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) SetMaxOrder(v int64) {
	o.MaxOrder = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetEventId() int64 {
	if o == nil || IsNil(o.EventId) {
		var ret int64
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) GetEventIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given int64 and assigns it to the EventId field.
func (o *ViewSlashPrice200ResponseDataInnerWarehousesInner) SetEventId(v int64) {
	o.EventId = &v
}

func (o ViewSlashPrice200ResponseDataInnerWarehousesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewSlashPrice200ResponseDataInnerWarehousesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WarehouseId) {
		toSerialize["warehouse_id"] = o.WarehouseId
	}
	if !IsNil(o.WarehouseName) {
		toSerialize["warehouse_name"] = o.WarehouseName
	}
	if !IsNil(o.WarehouseLocation) {
		toSerialize["warehouse_location"] = o.WarehouseLocation
	}
	if !IsNil(o.WarehouseStock) {
		toSerialize["warehouse_stock"] = o.WarehouseStock
	}
	if !IsNil(o.InitialQuota) {
		toSerialize["initial_quota"] = o.InitialQuota
	}
	if !IsNil(o.MaxOrder) {
		toSerialize["max_order"] = o.MaxOrder
	}
	if !IsNil(o.EventId) {
		toSerialize["event_id"] = o.EventId
	}
	return toSerialize, nil
}

type NullableViewSlashPrice200ResponseDataInnerWarehousesInner struct {
	value *ViewSlashPrice200ResponseDataInnerWarehousesInner
	isSet bool
}

func (v NullableViewSlashPrice200ResponseDataInnerWarehousesInner) Get() *ViewSlashPrice200ResponseDataInnerWarehousesInner {
	return v.value
}

func (v *NullableViewSlashPrice200ResponseDataInnerWarehousesInner) Set(val *ViewSlashPrice200ResponseDataInnerWarehousesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableViewSlashPrice200ResponseDataInnerWarehousesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableViewSlashPrice200ResponseDataInnerWarehousesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewSlashPrice200ResponseDataInnerWarehousesInner(val *ViewSlashPrice200ResponseDataInnerWarehousesInner) *NullableViewSlashPrice200ResponseDataInnerWarehousesInner {
	return &NullableViewSlashPrice200ResponseDataInnerWarehousesInner{value: val, isSet: true}
}

func (v NullableViewSlashPrice200ResponseDataInnerWarehousesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewSlashPrice200ResponseDataInnerWarehousesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


