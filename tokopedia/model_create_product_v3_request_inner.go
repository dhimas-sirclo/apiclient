/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the CreateProductV3RequestInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProductV3RequestInner{}

// CreateProductV3RequestInner struct for CreateProductV3RequestInner
type CreateProductV3RequestInner struct {
	// Name of the product with length less than or equals 70 characters
	Name *string `json:"Name,omitempty"`
	// The condition of the product with the following available values NEW and USED
	Condition *string `json:"condition,omitempty"`
	// Description of the product. Maximum characters allowed is 2000
	Description *string `json:"Description,omitempty"`
	// The stock keeping unit for the product. Maximum characters allowed is 50
	Sku *string `json:"sku,omitempty"`
	// The possible value between 100 to 100.000.000. If the product variant is added, the price parameter is automatically set to the lowest price among the variant products
	Price *float64 `json:"price,omitempty"`
	// Status for the product with the following available values UNLIMITED, LIMITED, and EMPTY
	Status *string `json:"status,omitempty"`
	// The stock of the product. 0 indicates always available. Other than that, the possible values are from 1 to 1000. Stock should be 1 if want to add variant product.
	Stock *int64 `json:"stock,omitempty"`
	// Minimum order required to purchase the product. Can only be a positive integ
	MinOrder *int64 `json:"min_order,omitempty"`
	// Unique identifier for the productâ€™s category. To get available categories, please check Get All Categories Please input the deepest category child ID
	CategoryId *int64 `json:"category_id,omitempty"`
	Dimension *CreateProductV3RequestInnerDimension `json:"dimension,omitempty"`
	// Custom product logistics of the product. To get the id, please check Get Active Courier. Required field to input just ShippingProductID value responses from Get Active Courier
	CustomProductLogistics []int64 `json:"custom_product_logistics,omitempty"`
	// Product Specification (anotations) By Category ID. The value is array of annotations id that can be retrieve by hit endpoint Get Product Annotation by Category ID. The location of id is at values.id
	Annotations []int64 `json:"annotations,omitempty"`
	// Currency code for stated price (IDR or USD)
	PriceCurrency *string `json:"price_currency,omitempty"`
	// Weight of the product
	Weight *float64 `json:"weight,omitempty"`
	// The unit of the weight with the following available value GR (gram)
	WeightUnit *string `json:"weight_unit,omitempty"`
	// Determine if the product can be returned (true) by buyers or not (false)
	IsFreeReturn *bool `json:"is_free_return,omitempty"`
	// Determine if the product must be insured (true) or not (false)
	IsMustInsurance *bool `json:"is_must_insurance,omitempty"`
	Etalase *EditProductV2RequestProductsInnerEtalase `json:"etalase,omitempty"`
	// Images information of the product. The object keys includes: file_path
	Pictures []EditProductV3RequestProductsInnerPicturesInner `json:"pictures,omitempty"`
	// Wholesale price and quantity of the product. The object keys includes: min_qty and price
	Wholesale []CreateProductV3RequestInnerWholesaleInner `json:"wholesale,omitempty"`
	Preorder *CreateProductV3RequestInnerPreorder `json:"preorder,omitempty"`
	// Video link of the product. The object keys includes: url and source. url should only contain the YouTube video id e.g. dQw4w9WgXcQ. Where the type type should be youtube
	Videos []CreateProductV3RequestInnerVideosInner `json:"videos,omitempty"`
	Variant *CreateProductV3RequestInnerVariant `json:"variant,omitempty"`
}

// NewCreateProductV3RequestInner instantiates a new CreateProductV3RequestInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProductV3RequestInner() *CreateProductV3RequestInner {
	this := CreateProductV3RequestInner{}
	var minOrder int64 = 1
	this.MinOrder = &minOrder
	var weightUnit string = "GR"
	this.WeightUnit = &weightUnit
	return &this
}

// NewCreateProductV3RequestInnerWithDefaults instantiates a new CreateProductV3RequestInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProductV3RequestInnerWithDefaults() *CreateProductV3RequestInner {
	this := CreateProductV3RequestInner{}
	var minOrder int64 = 1
	this.MinOrder = &minOrder
	var weightUnit string = "GR"
	this.WeightUnit = &weightUnit
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProductV3RequestInner) SetName(v string) {
	o.Name = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetCondition() string {
	if o == nil || IsNil(o.Condition) {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetConditionOk() (*string, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *CreateProductV3RequestInner) SetCondition(v string) {
	o.Condition = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateProductV3RequestInner) SetDescription(v string) {
	o.Description = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *CreateProductV3RequestInner) SetSku(v string) {
	o.Sku = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *CreateProductV3RequestInner) SetPrice(v float64) {
	o.Price = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateProductV3RequestInner) SetStatus(v string) {
	o.Status = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetStock() int64 {
	if o == nil || IsNil(o.Stock) {
		var ret int64
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetStockOk() (*int64, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int64 and assigns it to the Stock field.
func (o *CreateProductV3RequestInner) SetStock(v int64) {
	o.Stock = &v
}

// GetMinOrder returns the MinOrder field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetMinOrder() int64 {
	if o == nil || IsNil(o.MinOrder) {
		var ret int64
		return ret
	}
	return *o.MinOrder
}

// GetMinOrderOk returns a tuple with the MinOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetMinOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.MinOrder) {
		return nil, false
	}
	return o.MinOrder, true
}

// HasMinOrder returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasMinOrder() bool {
	if o != nil && !IsNil(o.MinOrder) {
		return true
	}

	return false
}

// SetMinOrder gets a reference to the given int64 and assigns it to the MinOrder field.
func (o *CreateProductV3RequestInner) SetMinOrder(v int64) {
	o.MinOrder = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetCategoryId() int64 {
	if o == nil || IsNil(o.CategoryId) {
		var ret int64
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetCategoryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int64 and assigns it to the CategoryId field.
func (o *CreateProductV3RequestInner) SetCategoryId(v int64) {
	o.CategoryId = &v
}

// GetDimension returns the Dimension field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetDimension() CreateProductV3RequestInnerDimension {
	if o == nil || IsNil(o.Dimension) {
		var ret CreateProductV3RequestInnerDimension
		return ret
	}
	return *o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetDimensionOk() (*CreateProductV3RequestInnerDimension, bool) {
	if o == nil || IsNil(o.Dimension) {
		return nil, false
	}
	return o.Dimension, true
}

// HasDimension returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasDimension() bool {
	if o != nil && !IsNil(o.Dimension) {
		return true
	}

	return false
}

// SetDimension gets a reference to the given CreateProductV3RequestInnerDimension and assigns it to the Dimension field.
func (o *CreateProductV3RequestInner) SetDimension(v CreateProductV3RequestInnerDimension) {
	o.Dimension = &v
}

// GetCustomProductLogistics returns the CustomProductLogistics field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetCustomProductLogistics() []int64 {
	if o == nil || IsNil(o.CustomProductLogistics) {
		var ret []int64
		return ret
	}
	return o.CustomProductLogistics
}

// GetCustomProductLogisticsOk returns a tuple with the CustomProductLogistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetCustomProductLogisticsOk() ([]int64, bool) {
	if o == nil || IsNil(o.CustomProductLogistics) {
		return nil, false
	}
	return o.CustomProductLogistics, true
}

// HasCustomProductLogistics returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasCustomProductLogistics() bool {
	if o != nil && !IsNil(o.CustomProductLogistics) {
		return true
	}

	return false
}

// SetCustomProductLogistics gets a reference to the given []int64 and assigns it to the CustomProductLogistics field.
func (o *CreateProductV3RequestInner) SetCustomProductLogistics(v []int64) {
	o.CustomProductLogistics = v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetAnnotations() []int64 {
	if o == nil || IsNil(o.Annotations) {
		var ret []int64
		return ret
	}
	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetAnnotationsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given []int64 and assigns it to the Annotations field.
func (o *CreateProductV3RequestInner) SetAnnotations(v []int64) {
	o.Annotations = v
}

// GetPriceCurrency returns the PriceCurrency field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetPriceCurrency() string {
	if o == nil || IsNil(o.PriceCurrency) {
		var ret string
		return ret
	}
	return *o.PriceCurrency
}

// GetPriceCurrencyOk returns a tuple with the PriceCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetPriceCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.PriceCurrency) {
		return nil, false
	}
	return o.PriceCurrency, true
}

// HasPriceCurrency returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasPriceCurrency() bool {
	if o != nil && !IsNil(o.PriceCurrency) {
		return true
	}

	return false
}

// SetPriceCurrency gets a reference to the given string and assigns it to the PriceCurrency field.
func (o *CreateProductV3RequestInner) SetPriceCurrency(v string) {
	o.PriceCurrency = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetWeight() float64 {
	if o == nil || IsNil(o.Weight) {
		var ret float64
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetWeightOk() (*float64, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float64 and assigns it to the Weight field.
func (o *CreateProductV3RequestInner) SetWeight(v float64) {
	o.Weight = &v
}

// GetWeightUnit returns the WeightUnit field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetWeightUnit() string {
	if o == nil || IsNil(o.WeightUnit) {
		var ret string
		return ret
	}
	return *o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetWeightUnitOk() (*string, bool) {
	if o == nil || IsNil(o.WeightUnit) {
		return nil, false
	}
	return o.WeightUnit, true
}

// HasWeightUnit returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasWeightUnit() bool {
	if o != nil && !IsNil(o.WeightUnit) {
		return true
	}

	return false
}

// SetWeightUnit gets a reference to the given string and assigns it to the WeightUnit field.
func (o *CreateProductV3RequestInner) SetWeightUnit(v string) {
	o.WeightUnit = &v
}

// GetIsFreeReturn returns the IsFreeReturn field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetIsFreeReturn() bool {
	if o == nil || IsNil(o.IsFreeReturn) {
		var ret bool
		return ret
	}
	return *o.IsFreeReturn
}

// GetIsFreeReturnOk returns a tuple with the IsFreeReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetIsFreeReturnOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFreeReturn) {
		return nil, false
	}
	return o.IsFreeReturn, true
}

// HasIsFreeReturn returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasIsFreeReturn() bool {
	if o != nil && !IsNil(o.IsFreeReturn) {
		return true
	}

	return false
}

// SetIsFreeReturn gets a reference to the given bool and assigns it to the IsFreeReturn field.
func (o *CreateProductV3RequestInner) SetIsFreeReturn(v bool) {
	o.IsFreeReturn = &v
}

// GetIsMustInsurance returns the IsMustInsurance field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetIsMustInsurance() bool {
	if o == nil || IsNil(o.IsMustInsurance) {
		var ret bool
		return ret
	}
	return *o.IsMustInsurance
}

// GetIsMustInsuranceOk returns a tuple with the IsMustInsurance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetIsMustInsuranceOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMustInsurance) {
		return nil, false
	}
	return o.IsMustInsurance, true
}

// HasIsMustInsurance returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasIsMustInsurance() bool {
	if o != nil && !IsNil(o.IsMustInsurance) {
		return true
	}

	return false
}

// SetIsMustInsurance gets a reference to the given bool and assigns it to the IsMustInsurance field.
func (o *CreateProductV3RequestInner) SetIsMustInsurance(v bool) {
	o.IsMustInsurance = &v
}

// GetEtalase returns the Etalase field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetEtalase() EditProductV2RequestProductsInnerEtalase {
	if o == nil || IsNil(o.Etalase) {
		var ret EditProductV2RequestProductsInnerEtalase
		return ret
	}
	return *o.Etalase
}

// GetEtalaseOk returns a tuple with the Etalase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetEtalaseOk() (*EditProductV2RequestProductsInnerEtalase, bool) {
	if o == nil || IsNil(o.Etalase) {
		return nil, false
	}
	return o.Etalase, true
}

// HasEtalase returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasEtalase() bool {
	if o != nil && !IsNil(o.Etalase) {
		return true
	}

	return false
}

// SetEtalase gets a reference to the given EditProductV2RequestProductsInnerEtalase and assigns it to the Etalase field.
func (o *CreateProductV3RequestInner) SetEtalase(v EditProductV2RequestProductsInnerEtalase) {
	o.Etalase = &v
}

// GetPictures returns the Pictures field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetPictures() []EditProductV3RequestProductsInnerPicturesInner {
	if o == nil || IsNil(o.Pictures) {
		var ret []EditProductV3RequestProductsInnerPicturesInner
		return ret
	}
	return o.Pictures
}

// GetPicturesOk returns a tuple with the Pictures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetPicturesOk() ([]EditProductV3RequestProductsInnerPicturesInner, bool) {
	if o == nil || IsNil(o.Pictures) {
		return nil, false
	}
	return o.Pictures, true
}

// HasPictures returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasPictures() bool {
	if o != nil && !IsNil(o.Pictures) {
		return true
	}

	return false
}

// SetPictures gets a reference to the given []EditProductV3RequestProductsInnerPicturesInner and assigns it to the Pictures field.
func (o *CreateProductV3RequestInner) SetPictures(v []EditProductV3RequestProductsInnerPicturesInner) {
	o.Pictures = v
}

// GetWholesale returns the Wholesale field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetWholesale() []CreateProductV3RequestInnerWholesaleInner {
	if o == nil || IsNil(o.Wholesale) {
		var ret []CreateProductV3RequestInnerWholesaleInner
		return ret
	}
	return o.Wholesale
}

// GetWholesaleOk returns a tuple with the Wholesale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetWholesaleOk() ([]CreateProductV3RequestInnerWholesaleInner, bool) {
	if o == nil || IsNil(o.Wholesale) {
		return nil, false
	}
	return o.Wholesale, true
}

// HasWholesale returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasWholesale() bool {
	if o != nil && !IsNil(o.Wholesale) {
		return true
	}

	return false
}

// SetWholesale gets a reference to the given []CreateProductV3RequestInnerWholesaleInner and assigns it to the Wholesale field.
func (o *CreateProductV3RequestInner) SetWholesale(v []CreateProductV3RequestInnerWholesaleInner) {
	o.Wholesale = v
}

// GetPreorder returns the Preorder field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetPreorder() CreateProductV3RequestInnerPreorder {
	if o == nil || IsNil(o.Preorder) {
		var ret CreateProductV3RequestInnerPreorder
		return ret
	}
	return *o.Preorder
}

// GetPreorderOk returns a tuple with the Preorder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetPreorderOk() (*CreateProductV3RequestInnerPreorder, bool) {
	if o == nil || IsNil(o.Preorder) {
		return nil, false
	}
	return o.Preorder, true
}

// HasPreorder returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasPreorder() bool {
	if o != nil && !IsNil(o.Preorder) {
		return true
	}

	return false
}

// SetPreorder gets a reference to the given CreateProductV3RequestInnerPreorder and assigns it to the Preorder field.
func (o *CreateProductV3RequestInner) SetPreorder(v CreateProductV3RequestInnerPreorder) {
	o.Preorder = &v
}

// GetVideos returns the Videos field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetVideos() []CreateProductV3RequestInnerVideosInner {
	if o == nil || IsNil(o.Videos) {
		var ret []CreateProductV3RequestInnerVideosInner
		return ret
	}
	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetVideosOk() ([]CreateProductV3RequestInnerVideosInner, bool) {
	if o == nil || IsNil(o.Videos) {
		return nil, false
	}
	return o.Videos, true
}

// HasVideos returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasVideos() bool {
	if o != nil && !IsNil(o.Videos) {
		return true
	}

	return false
}

// SetVideos gets a reference to the given []CreateProductV3RequestInnerVideosInner and assigns it to the Videos field.
func (o *CreateProductV3RequestInner) SetVideos(v []CreateProductV3RequestInnerVideosInner) {
	o.Videos = v
}

// GetVariant returns the Variant field value if set, zero value otherwise.
func (o *CreateProductV3RequestInner) GetVariant() CreateProductV3RequestInnerVariant {
	if o == nil || IsNil(o.Variant) {
		var ret CreateProductV3RequestInnerVariant
		return ret
	}
	return *o.Variant
}

// GetVariantOk returns a tuple with the Variant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductV3RequestInner) GetVariantOk() (*CreateProductV3RequestInnerVariant, bool) {
	if o == nil || IsNil(o.Variant) {
		return nil, false
	}
	return o.Variant, true
}

// HasVariant returns a boolean if a field has been set.
func (o *CreateProductV3RequestInner) HasVariant() bool {
	if o != nil && !IsNil(o.Variant) {
		return true
	}

	return false
}

// SetVariant gets a reference to the given CreateProductV3RequestInnerVariant and assigns it to the Variant field.
func (o *CreateProductV3RequestInner) SetVariant(v CreateProductV3RequestInnerVariant) {
	o.Variant = &v
}

func (o CreateProductV3RequestInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProductV3RequestInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.MinOrder) {
		toSerialize["min_order"] = o.MinOrder
	}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.Dimension) {
		toSerialize["dimension"] = o.Dimension
	}
	if !IsNil(o.CustomProductLogistics) {
		toSerialize["custom_product_logistics"] = o.CustomProductLogistics
	}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	if !IsNil(o.PriceCurrency) {
		toSerialize["price_currency"] = o.PriceCurrency
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.WeightUnit) {
		toSerialize["weight_unit"] = o.WeightUnit
	}
	if !IsNil(o.IsFreeReturn) {
		toSerialize["is_free_return"] = o.IsFreeReturn
	}
	if !IsNil(o.IsMustInsurance) {
		toSerialize["is_must_insurance"] = o.IsMustInsurance
	}
	if !IsNil(o.Etalase) {
		toSerialize["etalase"] = o.Etalase
	}
	if !IsNil(o.Pictures) {
		toSerialize["pictures"] = o.Pictures
	}
	if !IsNil(o.Wholesale) {
		toSerialize["wholesale"] = o.Wholesale
	}
	if !IsNil(o.Preorder) {
		toSerialize["preorder"] = o.Preorder
	}
	if !IsNil(o.Videos) {
		toSerialize["videos"] = o.Videos
	}
	if !IsNil(o.Variant) {
		toSerialize["variant"] = o.Variant
	}
	return toSerialize, nil
}

type NullableCreateProductV3RequestInner struct {
	value *CreateProductV3RequestInner
	isSet bool
}

func (v NullableCreateProductV3RequestInner) Get() *CreateProductV3RequestInner {
	return v.value
}

func (v *NullableCreateProductV3RequestInner) Set(val *CreateProductV3RequestInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProductV3RequestInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProductV3RequestInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProductV3RequestInner(val *CreateProductV3RequestInner) *NullableCreateProductV3RequestInner {
	return &NullableCreateProductV3RequestInner{value: val, isSet: true}
}

func (v NullableCreateProductV3RequestInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProductV3RequestInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


