/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the ViewSlashPrice200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViewSlashPrice200ResponseDataInner{}

// ViewSlashPrice200ResponseDataInner struct for ViewSlashPrice200ResponseDataInner
type ViewSlashPrice200ResponseDataInner struct {
	// Slash Price Product Unique Identifier
	SlashPriceProductId *int64 `json:"slash_price_product_id,omitempty"`
	// Product Unique Identifier
	ProductId *int64 `json:"product_id,omitempty"`
	// Product Name
	Name *string `json:"Name,omitempty"`
	Price *ViewSlashPrice200ResponseDataInnerPrice `json:"price,omitempty"`
	// Product Stock
	Stock *int64 `json:"stock,omitempty"`
	// Product URL
	Url *string `json:"url,omitempty"`
	// Product SKU
	Sku *string `json:"sku,omitempty"`
	// Product Discounted Price
	DiscountedPrice *int64 `json:"discounted_price,omitempty"`
	// Product Discounted Percentage
	DiscountedPercentage *int64 `json:"discounted_percentage,omitempty"`
	// Product Maximum Order
	MaxOrder *int64 `json:"max_order,omitempty"`
	// Slash Price Start Date Timestamp (format: 2021-09-27T13:25:00+07:00) 
	StartDate *string `json:"start_date,omitempty"`
	// Slash Price Start Date Timestamp (format: 2021-09-28T01:24:00+07:00) 
	EndDate *string `json:"end_date,omitempty"`
	Warehouses []ViewSlashPrice200ResponseDataInnerWarehousesInner `json:"warehouses,omitempty"`
	// Slash Price Status
	SlashPriceStatusId *int64 `json:"slash_price_status_id,omitempty"`
}

// NewViewSlashPrice200ResponseDataInner instantiates a new ViewSlashPrice200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewSlashPrice200ResponseDataInner() *ViewSlashPrice200ResponseDataInner {
	this := ViewSlashPrice200ResponseDataInner{}
	return &this
}

// NewViewSlashPrice200ResponseDataInnerWithDefaults instantiates a new ViewSlashPrice200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewSlashPrice200ResponseDataInnerWithDefaults() *ViewSlashPrice200ResponseDataInner {
	this := ViewSlashPrice200ResponseDataInner{}
	return &this
}

// GetSlashPriceProductId returns the SlashPriceProductId field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetSlashPriceProductId() int64 {
	if o == nil || IsNil(o.SlashPriceProductId) {
		var ret int64
		return ret
	}
	return *o.SlashPriceProductId
}

// GetSlashPriceProductIdOk returns a tuple with the SlashPriceProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetSlashPriceProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SlashPriceProductId) {
		return nil, false
	}
	return o.SlashPriceProductId, true
}

// HasSlashPriceProductId returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasSlashPriceProductId() bool {
	if o != nil && !IsNil(o.SlashPriceProductId) {
		return true
	}

	return false
}

// SetSlashPriceProductId gets a reference to the given int64 and assigns it to the SlashPriceProductId field.
func (o *ViewSlashPrice200ResponseDataInner) SetSlashPriceProductId(v int64) {
	o.SlashPriceProductId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId) {
		var ret int64
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int64 and assigns it to the ProductId field.
func (o *ViewSlashPrice200ResponseDataInner) SetProductId(v int64) {
	o.ProductId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ViewSlashPrice200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetPrice() ViewSlashPrice200ResponseDataInnerPrice {
	if o == nil || IsNil(o.Price) {
		var ret ViewSlashPrice200ResponseDataInnerPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetPriceOk() (*ViewSlashPrice200ResponseDataInnerPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given ViewSlashPrice200ResponseDataInnerPrice and assigns it to the Price field.
func (o *ViewSlashPrice200ResponseDataInner) SetPrice(v ViewSlashPrice200ResponseDataInnerPrice) {
	o.Price = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetStock() int64 {
	if o == nil || IsNil(o.Stock) {
		var ret int64
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetStockOk() (*int64, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int64 and assigns it to the Stock field.
func (o *ViewSlashPrice200ResponseDataInner) SetStock(v int64) {
	o.Stock = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ViewSlashPrice200ResponseDataInner) SetUrl(v string) {
	o.Url = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *ViewSlashPrice200ResponseDataInner) SetSku(v string) {
	o.Sku = &v
}

// GetDiscountedPrice returns the DiscountedPrice field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetDiscountedPrice() int64 {
	if o == nil || IsNil(o.DiscountedPrice) {
		var ret int64
		return ret
	}
	return *o.DiscountedPrice
}

// GetDiscountedPriceOk returns a tuple with the DiscountedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetDiscountedPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.DiscountedPrice) {
		return nil, false
	}
	return o.DiscountedPrice, true
}

// HasDiscountedPrice returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasDiscountedPrice() bool {
	if o != nil && !IsNil(o.DiscountedPrice) {
		return true
	}

	return false
}

// SetDiscountedPrice gets a reference to the given int64 and assigns it to the DiscountedPrice field.
func (o *ViewSlashPrice200ResponseDataInner) SetDiscountedPrice(v int64) {
	o.DiscountedPrice = &v
}

// GetDiscountedPercentage returns the DiscountedPercentage field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetDiscountedPercentage() int64 {
	if o == nil || IsNil(o.DiscountedPercentage) {
		var ret int64
		return ret
	}
	return *o.DiscountedPercentage
}

// GetDiscountedPercentageOk returns a tuple with the DiscountedPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetDiscountedPercentageOk() (*int64, bool) {
	if o == nil || IsNil(o.DiscountedPercentage) {
		return nil, false
	}
	return o.DiscountedPercentage, true
}

// HasDiscountedPercentage returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasDiscountedPercentage() bool {
	if o != nil && !IsNil(o.DiscountedPercentage) {
		return true
	}

	return false
}

// SetDiscountedPercentage gets a reference to the given int64 and assigns it to the DiscountedPercentage field.
func (o *ViewSlashPrice200ResponseDataInner) SetDiscountedPercentage(v int64) {
	o.DiscountedPercentage = &v
}

// GetMaxOrder returns the MaxOrder field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetMaxOrder() int64 {
	if o == nil || IsNil(o.MaxOrder) {
		var ret int64
		return ret
	}
	return *o.MaxOrder
}

// GetMaxOrderOk returns a tuple with the MaxOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetMaxOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxOrder) {
		return nil, false
	}
	return o.MaxOrder, true
}

// HasMaxOrder returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasMaxOrder() bool {
	if o != nil && !IsNil(o.MaxOrder) {
		return true
	}

	return false
}

// SetMaxOrder gets a reference to the given int64 and assigns it to the MaxOrder field.
func (o *ViewSlashPrice200ResponseDataInner) SetMaxOrder(v int64) {
	o.MaxOrder = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ViewSlashPrice200ResponseDataInner) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ViewSlashPrice200ResponseDataInner) SetEndDate(v string) {
	o.EndDate = &v
}

// GetWarehouses returns the Warehouses field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetWarehouses() []ViewSlashPrice200ResponseDataInnerWarehousesInner {
	if o == nil || IsNil(o.Warehouses) {
		var ret []ViewSlashPrice200ResponseDataInnerWarehousesInner
		return ret
	}
	return o.Warehouses
}

// GetWarehousesOk returns a tuple with the Warehouses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetWarehousesOk() ([]ViewSlashPrice200ResponseDataInnerWarehousesInner, bool) {
	if o == nil || IsNil(o.Warehouses) {
		return nil, false
	}
	return o.Warehouses, true
}

// HasWarehouses returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasWarehouses() bool {
	if o != nil && !IsNil(o.Warehouses) {
		return true
	}

	return false
}

// SetWarehouses gets a reference to the given []ViewSlashPrice200ResponseDataInnerWarehousesInner and assigns it to the Warehouses field.
func (o *ViewSlashPrice200ResponseDataInner) SetWarehouses(v []ViewSlashPrice200ResponseDataInnerWarehousesInner) {
	o.Warehouses = v
}

// GetSlashPriceStatusId returns the SlashPriceStatusId field value if set, zero value otherwise.
func (o *ViewSlashPrice200ResponseDataInner) GetSlashPriceStatusId() int64 {
	if o == nil || IsNil(o.SlashPriceStatusId) {
		var ret int64
		return ret
	}
	return *o.SlashPriceStatusId
}

// GetSlashPriceStatusIdOk returns a tuple with the SlashPriceStatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViewSlashPrice200ResponseDataInner) GetSlashPriceStatusIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SlashPriceStatusId) {
		return nil, false
	}
	return o.SlashPriceStatusId, true
}

// HasSlashPriceStatusId returns a boolean if a field has been set.
func (o *ViewSlashPrice200ResponseDataInner) HasSlashPriceStatusId() bool {
	if o != nil && !IsNil(o.SlashPriceStatusId) {
		return true
	}

	return false
}

// SetSlashPriceStatusId gets a reference to the given int64 and assigns it to the SlashPriceStatusId field.
func (o *ViewSlashPrice200ResponseDataInner) SetSlashPriceStatusId(v int64) {
	o.SlashPriceStatusId = &v
}

func (o ViewSlashPrice200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViewSlashPrice200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SlashPriceProductId) {
		toSerialize["slash_price_product_id"] = o.SlashPriceProductId
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.DiscountedPrice) {
		toSerialize["discounted_price"] = o.DiscountedPrice
	}
	if !IsNil(o.DiscountedPercentage) {
		toSerialize["discounted_percentage"] = o.DiscountedPercentage
	}
	if !IsNil(o.MaxOrder) {
		toSerialize["max_order"] = o.MaxOrder
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.Warehouses) {
		toSerialize["warehouses"] = o.Warehouses
	}
	if !IsNil(o.SlashPriceStatusId) {
		toSerialize["slash_price_status_id"] = o.SlashPriceStatusId
	}
	return toSerialize, nil
}

type NullableViewSlashPrice200ResponseDataInner struct {
	value *ViewSlashPrice200ResponseDataInner
	isSet bool
}

func (v NullableViewSlashPrice200ResponseDataInner) Get() *ViewSlashPrice200ResponseDataInner {
	return v.value
}

func (v *NullableViewSlashPrice200ResponseDataInner) Set(val *ViewSlashPrice200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableViewSlashPrice200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableViewSlashPrice200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewSlashPrice200ResponseDataInner(val *ViewSlashPrice200ResponseDataInner) *NullableViewSlashPrice200ResponseDataInner {
	return &NullableViewSlashPrice200ResponseDataInner{value: val, isSet: true}
}

func (v NullableViewSlashPrice200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewSlashPrice200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


