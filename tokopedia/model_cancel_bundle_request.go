/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the CancelBundleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelBundleRequest{}

// CancelBundleRequest Bundle object to create
type CancelBundleRequest struct {
	// Bundle unique identifier
	BundleId int64 `json:"bundle_id"`
}

// NewCancelBundleRequest instantiates a new CancelBundleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelBundleRequest(bundleId int64) *CancelBundleRequest {
	this := CancelBundleRequest{}
	this.BundleId = bundleId
	return &this
}

// NewCancelBundleRequestWithDefaults instantiates a new CancelBundleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelBundleRequestWithDefaults() *CancelBundleRequest {
	this := CancelBundleRequest{}
	return &this
}

// GetBundleId returns the BundleId field value
func (o *CancelBundleRequest) GetBundleId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value
// and a boolean to check if the value has been set.
func (o *CancelBundleRequest) GetBundleIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleId, true
}

// SetBundleId sets field value
func (o *CancelBundleRequest) SetBundleId(v int64) {
	o.BundleId = v
}

func (o CancelBundleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelBundleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bundle_id"] = o.BundleId
	return toSerialize, nil
}

type NullableCancelBundleRequest struct {
	value *CancelBundleRequest
	isSet bool
}

func (v NullableCancelBundleRequest) Get() *CancelBundleRequest {
	return v.value
}

func (v *NullableCancelBundleRequest) Set(val *CancelBundleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelBundleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelBundleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelBundleRequest(val *CancelBundleRequest) *NullableCancelBundleRequest {
	return &NullableCancelBundleRequest{value: val, isSet: true}
}

func (v NullableCancelBundleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelBundleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


