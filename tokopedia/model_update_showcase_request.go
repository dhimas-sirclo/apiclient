/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the UpdateShowcaseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateShowcaseRequest{}

// UpdateShowcaseRequest struct for UpdateShowcaseRequest
type UpdateShowcaseRequest struct {
	// Showcase id to be updated
	Id int64 `json:"id"`
	// Showcase name to be updated
	Name string `json:"Name"`
}

// NewUpdateShowcaseRequest instantiates a new UpdateShowcaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateShowcaseRequest(id int64, name string) *UpdateShowcaseRequest {
	this := UpdateShowcaseRequest{}
	this.Id = id
	this.Name = name
	return &this
}

// NewUpdateShowcaseRequestWithDefaults instantiates a new UpdateShowcaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateShowcaseRequestWithDefaults() *UpdateShowcaseRequest {
	this := UpdateShowcaseRequest{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateShowcaseRequest) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateShowcaseRequest) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateShowcaseRequest) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *UpdateShowcaseRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateShowcaseRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateShowcaseRequest) SetName(v string) {
	o.Name = v
}

func (o UpdateShowcaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateShowcaseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["Name"] = o.Name
	return toSerialize, nil
}

type NullableUpdateShowcaseRequest struct {
	value *UpdateShowcaseRequest
	isSet bool
}

func (v NullableUpdateShowcaseRequest) Get() *UpdateShowcaseRequest {
	return v.value
}

func (v *NullableUpdateShowcaseRequest) Set(val *UpdateShowcaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateShowcaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateShowcaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateShowcaseRequest(val *UpdateShowcaseRequest) *NullableUpdateShowcaseRequest {
	return &NullableUpdateShowcaseRequest{value: val, isSet: true}
}

func (v NullableUpdateShowcaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateShowcaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


