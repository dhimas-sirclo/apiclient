/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the InitiateChat200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitiateChat200ResponseData{}

// InitiateChat200ResponseData struct for InitiateChat200ResponseData
type InitiateChat200ResponseData struct {
	Contact *InitiateChat200ResponseDataContact `json:"contact,omitempty"`
	IsSuccess *bool `json:"is_success,omitempty"`
	MsgId *int64 `json:"msg_id,omitempty"`
}

// NewInitiateChat200ResponseData instantiates a new InitiateChat200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiateChat200ResponseData() *InitiateChat200ResponseData {
	this := InitiateChat200ResponseData{}
	return &this
}

// NewInitiateChat200ResponseDataWithDefaults instantiates a new InitiateChat200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiateChat200ResponseDataWithDefaults() *InitiateChat200ResponseData {
	this := InitiateChat200ResponseData{}
	return &this
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *InitiateChat200ResponseData) GetContact() InitiateChat200ResponseDataContact {
	if o == nil || IsNil(o.Contact) {
		var ret InitiateChat200ResponseDataContact
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateChat200ResponseData) GetContactOk() (*InitiateChat200ResponseDataContact, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *InitiateChat200ResponseData) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given InitiateChat200ResponseDataContact and assigns it to the Contact field.
func (o *InitiateChat200ResponseData) SetContact(v InitiateChat200ResponseDataContact) {
	o.Contact = &v
}

// GetIsSuccess returns the IsSuccess field value if set, zero value otherwise.
func (o *InitiateChat200ResponseData) GetIsSuccess() bool {
	if o == nil || IsNil(o.IsSuccess) {
		var ret bool
		return ret
	}
	return *o.IsSuccess
}

// GetIsSuccessOk returns a tuple with the IsSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateChat200ResponseData) GetIsSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuccess) {
		return nil, false
	}
	return o.IsSuccess, true
}

// HasIsSuccess returns a boolean if a field has been set.
func (o *InitiateChat200ResponseData) HasIsSuccess() bool {
	if o != nil && !IsNil(o.IsSuccess) {
		return true
	}

	return false
}

// SetIsSuccess gets a reference to the given bool and assigns it to the IsSuccess field.
func (o *InitiateChat200ResponseData) SetIsSuccess(v bool) {
	o.IsSuccess = &v
}

// GetMsgId returns the MsgId field value if set, zero value otherwise.
func (o *InitiateChat200ResponseData) GetMsgId() int64 {
	if o == nil || IsNil(o.MsgId) {
		var ret int64
		return ret
	}
	return *o.MsgId
}

// GetMsgIdOk returns a tuple with the MsgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateChat200ResponseData) GetMsgIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MsgId) {
		return nil, false
	}
	return o.MsgId, true
}

// HasMsgId returns a boolean if a field has been set.
func (o *InitiateChat200ResponseData) HasMsgId() bool {
	if o != nil && !IsNil(o.MsgId) {
		return true
	}

	return false
}

// SetMsgId gets a reference to the given int64 and assigns it to the MsgId field.
func (o *InitiateChat200ResponseData) SetMsgId(v int64) {
	o.MsgId = &v
}

func (o InitiateChat200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitiateChat200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.IsSuccess) {
		toSerialize["is_success"] = o.IsSuccess
	}
	if !IsNil(o.MsgId) {
		toSerialize["msg_id"] = o.MsgId
	}
	return toSerialize, nil
}

type NullableInitiateChat200ResponseData struct {
	value *InitiateChat200ResponseData
	isSet bool
}

func (v NullableInitiateChat200ResponseData) Get() *InitiateChat200ResponseData {
	return v.value
}

func (v *NullableInitiateChat200ResponseData) Set(val *InitiateChat200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiateChat200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiateChat200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiateChat200ResponseData(val *InitiateChat200ResponseData) *NullableInitiateChat200ResponseData {
	return &NullableInitiateChat200ResponseData{value: val, isSet: true}
}

func (v NullableInitiateChat200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiateChat200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


