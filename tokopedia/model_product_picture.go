/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the ProductPicture type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductPicture{}

// ProductPicture struct for ProductPicture
type ProductPicture struct {
	// Image Unique Identifier
	PicID *int64 `json:"picID,omitempty"`
	// Image File Name
	FileName *string `json:"fileName,omitempty"`
	// Image Path
	FilePath *string `json:"filePath,omitempty"`
	// Image Status
	Status *int64 `json:"status,omitempty"`
	// Original Image URL
	OriginalURL *string `json:"OriginalURL,omitempty"`
	// Thumbnail Image URL
	ThumbnailURL *string `json:"ThumbnailURL,omitempty"`
	// Image Width Size
	Width *int64 `json:"width,omitempty"`
	// Image Height
	Height *int64 `json:"height,omitempty"`
	// Image URL
	URL300 *string `json:"URL300,omitempty"`
}

// NewProductPicture instantiates a new ProductPicture object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductPicture() *ProductPicture {
	this := ProductPicture{}
	return &this
}

// NewProductPictureWithDefaults instantiates a new ProductPicture object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductPictureWithDefaults() *ProductPicture {
	this := ProductPicture{}
	return &this
}

// GetPicID returns the PicID field value if set, zero value otherwise.
func (o *ProductPicture) GetPicID() int64 {
	if o == nil || IsNil(o.PicID) {
		var ret int64
		return ret
	}
	return *o.PicID
}

// GetPicIDOk returns a tuple with the PicID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetPicIDOk() (*int64, bool) {
	if o == nil || IsNil(o.PicID) {
		return nil, false
	}
	return o.PicID, true
}

// HasPicID returns a boolean if a field has been set.
func (o *ProductPicture) HasPicID() bool {
	if o != nil && !IsNil(o.PicID) {
		return true
	}

	return false
}

// SetPicID gets a reference to the given int64 and assigns it to the PicID field.
func (o *ProductPicture) SetPicID(v int64) {
	o.PicID = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ProductPicture) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *ProductPicture) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ProductPicture) SetFileName(v string) {
	o.FileName = &v
}

// GetFilePath returns the FilePath field value if set, zero value otherwise.
func (o *ProductPicture) GetFilePath() string {
	if o == nil || IsNil(o.FilePath) {
		var ret string
		return ret
	}
	return *o.FilePath
}

// GetFilePathOk returns a tuple with the FilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetFilePathOk() (*string, bool) {
	if o == nil || IsNil(o.FilePath) {
		return nil, false
	}
	return o.FilePath, true
}

// HasFilePath returns a boolean if a field has been set.
func (o *ProductPicture) HasFilePath() bool {
	if o != nil && !IsNil(o.FilePath) {
		return true
	}

	return false
}

// SetFilePath gets a reference to the given string and assigns it to the FilePath field.
func (o *ProductPicture) SetFilePath(v string) {
	o.FilePath = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProductPicture) GetStatus() int64 {
	if o == nil || IsNil(o.Status) {
		var ret int64
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetStatusOk() (*int64, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductPicture) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int64 and assigns it to the Status field.
func (o *ProductPicture) SetStatus(v int64) {
	o.Status = &v
}

// GetOriginalURL returns the OriginalURL field value if set, zero value otherwise.
func (o *ProductPicture) GetOriginalURL() string {
	if o == nil || IsNil(o.OriginalURL) {
		var ret string
		return ret
	}
	return *o.OriginalURL
}

// GetOriginalURLOk returns a tuple with the OriginalURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetOriginalURLOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalURL) {
		return nil, false
	}
	return o.OriginalURL, true
}

// HasOriginalURL returns a boolean if a field has been set.
func (o *ProductPicture) HasOriginalURL() bool {
	if o != nil && !IsNil(o.OriginalURL) {
		return true
	}

	return false
}

// SetOriginalURL gets a reference to the given string and assigns it to the OriginalURL field.
func (o *ProductPicture) SetOriginalURL(v string) {
	o.OriginalURL = &v
}

// GetThumbnailURL returns the ThumbnailURL field value if set, zero value otherwise.
func (o *ProductPicture) GetThumbnailURL() string {
	if o == nil || IsNil(o.ThumbnailURL) {
		var ret string
		return ret
	}
	return *o.ThumbnailURL
}

// GetThumbnailURLOk returns a tuple with the ThumbnailURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetThumbnailURLOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailURL) {
		return nil, false
	}
	return o.ThumbnailURL, true
}

// HasThumbnailURL returns a boolean if a field has been set.
func (o *ProductPicture) HasThumbnailURL() bool {
	if o != nil && !IsNil(o.ThumbnailURL) {
		return true
	}

	return false
}

// SetThumbnailURL gets a reference to the given string and assigns it to the ThumbnailURL field.
func (o *ProductPicture) SetThumbnailURL(v string) {
	o.ThumbnailURL = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ProductPicture) GetWidth() int64 {
	if o == nil || IsNil(o.Width) {
		var ret int64
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetWidthOk() (*int64, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ProductPicture) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int64 and assigns it to the Width field.
func (o *ProductPicture) SetWidth(v int64) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ProductPicture) GetHeight() int64 {
	if o == nil || IsNil(o.Height) {
		var ret int64
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetHeightOk() (*int64, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ProductPicture) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int64 and assigns it to the Height field.
func (o *ProductPicture) SetHeight(v int64) {
	o.Height = &v
}

// GetURL300 returns the URL300 field value if set, zero value otherwise.
func (o *ProductPicture) GetURL300() string {
	if o == nil || IsNil(o.URL300) {
		var ret string
		return ret
	}
	return *o.URL300
}

// GetURL300Ok returns a tuple with the URL300 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductPicture) GetURL300Ok() (*string, bool) {
	if o == nil || IsNil(o.URL300) {
		return nil, false
	}
	return o.URL300, true
}

// HasURL300 returns a boolean if a field has been set.
func (o *ProductPicture) HasURL300() bool {
	if o != nil && !IsNil(o.URL300) {
		return true
	}

	return false
}

// SetURL300 gets a reference to the given string and assigns it to the URL300 field.
func (o *ProductPicture) SetURL300(v string) {
	o.URL300 = &v
}

func (o ProductPicture) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductPicture) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PicID) {
		toSerialize["picID"] = o.PicID
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.FilePath) {
		toSerialize["filePath"] = o.FilePath
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.OriginalURL) {
		toSerialize["OriginalURL"] = o.OriginalURL
	}
	if !IsNil(o.ThumbnailURL) {
		toSerialize["ThumbnailURL"] = o.ThumbnailURL
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.URL300) {
		toSerialize["URL300"] = o.URL300
	}
	return toSerialize, nil
}

type NullableProductPicture struct {
	value *ProductPicture
	isSet bool
}

func (v NullableProductPicture) Get() *ProductPicture {
	return v.value
}

func (v *NullableProductPicture) Set(val *ProductPicture) {
	v.value = val
	v.isSet = true
}

func (v NullableProductPicture) IsSet() bool {
	return v.isSet
}

func (v *NullableProductPicture) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductPicture(val *ProductPicture) *NullableProductPicture {
	return &NullableProductPicture{value: val, isSet: true}
}

func (v NullableProductPicture) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductPicture) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


