/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the SendReplyRequestOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendReplyRequestOneOf1{}

// SendReplyRequestOneOf1 struct for SendReplyRequestOneOf1
type SendReplyRequestOneOf1 struct {
	ShopId int64 `json:"shop_id"`
	AttachmentType int64 `json:"attachment_type"`
	Payload SendReplyRequestOneOf1Payload `json:"payload"`
}

// NewSendReplyRequestOneOf1 instantiates a new SendReplyRequestOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendReplyRequestOneOf1(shopId int64, attachmentType int64, payload SendReplyRequestOneOf1Payload) *SendReplyRequestOneOf1 {
	this := SendReplyRequestOneOf1{}
	this.ShopId = shopId
	this.AttachmentType = attachmentType
	this.Payload = payload
	return &this
}

// NewSendReplyRequestOneOf1WithDefaults instantiates a new SendReplyRequestOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendReplyRequestOneOf1WithDefaults() *SendReplyRequestOneOf1 {
	this := SendReplyRequestOneOf1{}
	return &this
}

// GetShopId returns the ShopId field value
func (o *SendReplyRequestOneOf1) GetShopId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value
// and a boolean to check if the value has been set.
func (o *SendReplyRequestOneOf1) GetShopIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShopId, true
}

// SetShopId sets field value
func (o *SendReplyRequestOneOf1) SetShopId(v int64) {
	o.ShopId = v
}

// GetAttachmentType returns the AttachmentType field value
func (o *SendReplyRequestOneOf1) GetAttachmentType() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AttachmentType
}

// GetAttachmentTypeOk returns a tuple with the AttachmentType field value
// and a boolean to check if the value has been set.
func (o *SendReplyRequestOneOf1) GetAttachmentTypeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttachmentType, true
}

// SetAttachmentType sets field value
func (o *SendReplyRequestOneOf1) SetAttachmentType(v int64) {
	o.AttachmentType = v
}

// GetPayload returns the Payload field value
func (o *SendReplyRequestOneOf1) GetPayload() SendReplyRequestOneOf1Payload {
	if o == nil {
		var ret SendReplyRequestOneOf1Payload
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *SendReplyRequestOneOf1) GetPayloadOk() (*SendReplyRequestOneOf1Payload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *SendReplyRequestOneOf1) SetPayload(v SendReplyRequestOneOf1Payload) {
	o.Payload = v
}

func (o SendReplyRequestOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendReplyRequestOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shop_id"] = o.ShopId
	toSerialize["attachment_type"] = o.AttachmentType
	toSerialize["payload"] = o.Payload
	return toSerialize, nil
}

type NullableSendReplyRequestOneOf1 struct {
	value *SendReplyRequestOneOf1
	isSet bool
}

func (v NullableSendReplyRequestOneOf1) Get() *SendReplyRequestOneOf1 {
	return v.value
}

func (v *NullableSendReplyRequestOneOf1) Set(val *SendReplyRequestOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableSendReplyRequestOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableSendReplyRequestOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendReplyRequestOneOf1(val *SendReplyRequestOneOf1) *NullableSendReplyRequestOneOf1 {
	return &NullableSendReplyRequestOneOf1{value: val, isSet: true}
}

func (v NullableSendReplyRequestOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendReplyRequestOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


