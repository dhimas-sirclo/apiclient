/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner{}

// GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner struct for GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner
type GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner struct {
	ProductId *int64 `json:"product_id,omitempty"`
	Name *string `json:"Name,omitempty"`
	PicUrl *string `json:"pic_url,omitempty"`
	Status *int64 `json:"status,omitempty"`
	Selection []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerSelectionInner `json:"selection,omitempty"`
	Child []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerChildInner `json:"child,omitempty"`
	BundlePrice *float64 `json:"bundle_price,omitempty"`
	OriginalPrice *float64 `json:"original_price,omitempty"`
	Stock *int64 `json:"stock,omitempty"`
	MinOrder *int64 `json:"min_order,omitempty"`
	ProductStatus *string `json:"product_status,omitempty"`
}

// NewGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner instantiates a new GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner() *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner {
	this := GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner{}
	return &this
}

// NewGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerWithDefaults instantiates a new GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerWithDefaults() *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner {
	this := GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetProductId() int64 {
	if o == nil || IsNil(o.ProductId) {
		var ret int64
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetProductIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int64 and assigns it to the ProductId field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetProductId(v int64) {
	o.ProductId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetName(v string) {
	o.Name = &v
}

// GetPicUrl returns the PicUrl field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetPicUrl() string {
	if o == nil || IsNil(o.PicUrl) {
		var ret string
		return ret
	}
	return *o.PicUrl
}

// GetPicUrlOk returns a tuple with the PicUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetPicUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PicUrl) {
		return nil, false
	}
	return o.PicUrl, true
}

// HasPicUrl returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasPicUrl() bool {
	if o != nil && !IsNil(o.PicUrl) {
		return true
	}

	return false
}

// SetPicUrl gets a reference to the given string and assigns it to the PicUrl field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetPicUrl(v string) {
	o.PicUrl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetStatus() int64 {
	if o == nil || IsNil(o.Status) {
		var ret int64
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetStatusOk() (*int64, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int64 and assigns it to the Status field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetStatus(v int64) {
	o.Status = &v
}

// GetSelection returns the Selection field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetSelection() []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerSelectionInner {
	if o == nil || IsNil(o.Selection) {
		var ret []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerSelectionInner
		return ret
	}
	return o.Selection
}

// GetSelectionOk returns a tuple with the Selection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetSelectionOk() ([]GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerSelectionInner, bool) {
	if o == nil || IsNil(o.Selection) {
		return nil, false
	}
	return o.Selection, true
}

// HasSelection returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasSelection() bool {
	if o != nil && !IsNil(o.Selection) {
		return true
	}

	return false
}

// SetSelection gets a reference to the given []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerSelectionInner and assigns it to the Selection field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetSelection(v []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerSelectionInner) {
	o.Selection = v
}

// GetChild returns the Child field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetChild() []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerChildInner {
	if o == nil || IsNil(o.Child) {
		var ret []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerChildInner
		return ret
	}
	return o.Child
}

// GetChildOk returns a tuple with the Child field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetChildOk() ([]GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerChildInner, bool) {
	if o == nil || IsNil(o.Child) {
		return nil, false
	}
	return o.Child, true
}

// HasChild returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasChild() bool {
	if o != nil && !IsNil(o.Child) {
		return true
	}

	return false
}

// SetChild gets a reference to the given []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerChildInner and assigns it to the Child field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetChild(v []GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInnerChildInner) {
	o.Child = v
}

// GetBundlePrice returns the BundlePrice field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetBundlePrice() float64 {
	if o == nil || IsNil(o.BundlePrice) {
		var ret float64
		return ret
	}
	return *o.BundlePrice
}

// GetBundlePriceOk returns a tuple with the BundlePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetBundlePriceOk() (*float64, bool) {
	if o == nil || IsNil(o.BundlePrice) {
		return nil, false
	}
	return o.BundlePrice, true
}

// HasBundlePrice returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasBundlePrice() bool {
	if o != nil && !IsNil(o.BundlePrice) {
		return true
	}

	return false
}

// SetBundlePrice gets a reference to the given float64 and assigns it to the BundlePrice field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetBundlePrice(v float64) {
	o.BundlePrice = &v
}

// GetOriginalPrice returns the OriginalPrice field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetOriginalPrice() float64 {
	if o == nil || IsNil(o.OriginalPrice) {
		var ret float64
		return ret
	}
	return *o.OriginalPrice
}

// GetOriginalPriceOk returns a tuple with the OriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetOriginalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.OriginalPrice) {
		return nil, false
	}
	return o.OriginalPrice, true
}

// HasOriginalPrice returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasOriginalPrice() bool {
	if o != nil && !IsNil(o.OriginalPrice) {
		return true
	}

	return false
}

// SetOriginalPrice gets a reference to the given float64 and assigns it to the OriginalPrice field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetOriginalPrice(v float64) {
	o.OriginalPrice = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetStock() int64 {
	if o == nil || IsNil(o.Stock) {
		var ret int64
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetStockOk() (*int64, bool) {
	if o == nil || IsNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasStock() bool {
	if o != nil && !IsNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given int64 and assigns it to the Stock field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetStock(v int64) {
	o.Stock = &v
}

// GetMinOrder returns the MinOrder field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetMinOrder() int64 {
	if o == nil || IsNil(o.MinOrder) {
		var ret int64
		return ret
	}
	return *o.MinOrder
}

// GetMinOrderOk returns a tuple with the MinOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetMinOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.MinOrder) {
		return nil, false
	}
	return o.MinOrder, true
}

// HasMinOrder returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasMinOrder() bool {
	if o != nil && !IsNil(o.MinOrder) {
		return true
	}

	return false
}

// SetMinOrder gets a reference to the given int64 and assigns it to the MinOrder field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetMinOrder(v int64) {
	o.MinOrder = &v
}

// GetProductStatus returns the ProductStatus field value if set, zero value otherwise.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetProductStatus() string {
	if o == nil || IsNil(o.ProductStatus) {
		var ret string
		return ret
	}
	return *o.ProductStatus
}

// GetProductStatusOk returns a tuple with the ProductStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) GetProductStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ProductStatus) {
		return nil, false
	}
	return o.ProductStatus, true
}

// HasProductStatus returns a boolean if a field has been set.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) HasProductStatus() bool {
	if o != nil && !IsNil(o.ProductStatus) {
		return true
	}

	return false
}

// SetProductStatus gets a reference to the given string and assigns it to the ProductStatus field.
func (o *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) SetProductStatus(v string) {
	o.ProductStatus = &v
}

func (o GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.PicUrl) {
		toSerialize["pic_url"] = o.PicUrl
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Selection) {
		toSerialize["selection"] = o.Selection
	}
	if !IsNil(o.Child) {
		toSerialize["child"] = o.Child
	}
	if !IsNil(o.BundlePrice) {
		toSerialize["bundle_price"] = o.BundlePrice
	}
	if !IsNil(o.OriginalPrice) {
		toSerialize["original_price"] = o.OriginalPrice
	}
	if !IsNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !IsNil(o.MinOrder) {
		toSerialize["min_order"] = o.MinOrder
	}
	if !IsNil(o.ProductStatus) {
		toSerialize["product_status"] = o.ProductStatus
	}
	return toSerialize, nil
}

type NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner struct {
	value *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner
	isSet bool
}

func (v NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) Get() *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner {
	return v.value
}

func (v *NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) Set(val *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner(val *GetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) *NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner {
	return &NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner{value: val, isSet: true}
}

func (v NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBundleInfo200ResponseDataBundleInfoInnerBundleItemInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


