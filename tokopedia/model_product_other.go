/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the ProductOther type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductOther{}

// ProductOther struct for ProductOther
type ProductOther struct {
	// Product SKU Name
	Sku *string `json:"sku,omitempty"`
	// Product URL (website)
	Url *string `json:"url,omitempty"`
	// Product URL (mobile phone)
	MobileURL *string `json:"mobileURL,omitempty"`
}

// NewProductOther instantiates a new ProductOther object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductOther() *ProductOther {
	this := ProductOther{}
	return &this
}

// NewProductOtherWithDefaults instantiates a new ProductOther object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductOtherWithDefaults() *ProductOther {
	this := ProductOther{}
	return &this
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *ProductOther) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOther) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *ProductOther) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *ProductOther) SetSku(v string) {
	o.Sku = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ProductOther) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOther) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ProductOther) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ProductOther) SetUrl(v string) {
	o.Url = &v
}

// GetMobileURL returns the MobileURL field value if set, zero value otherwise.
func (o *ProductOther) GetMobileURL() string {
	if o == nil || IsNil(o.MobileURL) {
		var ret string
		return ret
	}
	return *o.MobileURL
}

// GetMobileURLOk returns a tuple with the MobileURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductOther) GetMobileURLOk() (*string, bool) {
	if o == nil || IsNil(o.MobileURL) {
		return nil, false
	}
	return o.MobileURL, true
}

// HasMobileURL returns a boolean if a field has been set.
func (o *ProductOther) HasMobileURL() bool {
	if o != nil && !IsNil(o.MobileURL) {
		return true
	}

	return false
}

// SetMobileURL gets a reference to the given string and assigns it to the MobileURL field.
func (o *ProductOther) SetMobileURL(v string) {
	o.MobileURL = &v
}

func (o ProductOther) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductOther) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.MobileURL) {
		toSerialize["mobileURL"] = o.MobileURL
	}
	return toSerialize, nil
}

type NullableProductOther struct {
	value *ProductOther
	isSet bool
}

func (v NullableProductOther) Get() *ProductOther {
	return v.value
}

func (v *NullableProductOther) Set(val *ProductOther) {
	v.value = val
	v.isSet = true
}

func (v NullableProductOther) IsSet() bool {
	return v.isSet
}

func (v *NullableProductOther) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductOther(val *ProductOther) *NullableProductOther {
	return &NullableProductOther{value: val, isSet: true}
}

func (v NullableProductOther) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductOther) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


