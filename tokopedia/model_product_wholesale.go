/*
Tokopedia

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the ProductWholesale type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductWholesale{}

// ProductWholesale struct for ProductWholesale
type ProductWholesale struct {
	Price *ProductWholesalePrice `json:"price,omitempty"`
	MinQuantity *int64 `json:"minQuantity,omitempty"`
	MaxQuantity *int64 `json:"maxQuantity,omitempty"`
}

// NewProductWholesale instantiates a new ProductWholesale object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductWholesale() *ProductWholesale {
	this := ProductWholesale{}
	return &this
}

// NewProductWholesaleWithDefaults instantiates a new ProductWholesale object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWholesaleWithDefaults() *ProductWholesale {
	this := ProductWholesale{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ProductWholesale) GetPrice() ProductWholesalePrice {
	if o == nil || IsNil(o.Price) {
		var ret ProductWholesalePrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWholesale) GetPriceOk() (*ProductWholesalePrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ProductWholesale) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given ProductWholesalePrice and assigns it to the Price field.
func (o *ProductWholesale) SetPrice(v ProductWholesalePrice) {
	o.Price = &v
}

// GetMinQuantity returns the MinQuantity field value if set, zero value otherwise.
func (o *ProductWholesale) GetMinQuantity() int64 {
	if o == nil || IsNil(o.MinQuantity) {
		var ret int64
		return ret
	}
	return *o.MinQuantity
}

// GetMinQuantityOk returns a tuple with the MinQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWholesale) GetMinQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.MinQuantity) {
		return nil, false
	}
	return o.MinQuantity, true
}

// HasMinQuantity returns a boolean if a field has been set.
func (o *ProductWholesale) HasMinQuantity() bool {
	if o != nil && !IsNil(o.MinQuantity) {
		return true
	}

	return false
}

// SetMinQuantity gets a reference to the given int64 and assigns it to the MinQuantity field.
func (o *ProductWholesale) SetMinQuantity(v int64) {
	o.MinQuantity = &v
}

// GetMaxQuantity returns the MaxQuantity field value if set, zero value otherwise.
func (o *ProductWholesale) GetMaxQuantity() int64 {
	if o == nil || IsNil(o.MaxQuantity) {
		var ret int64
		return ret
	}
	return *o.MaxQuantity
}

// GetMaxQuantityOk returns a tuple with the MaxQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWholesale) GetMaxQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxQuantity) {
		return nil, false
	}
	return o.MaxQuantity, true
}

// HasMaxQuantity returns a boolean if a field has been set.
func (o *ProductWholesale) HasMaxQuantity() bool {
	if o != nil && !IsNil(o.MaxQuantity) {
		return true
	}

	return false
}

// SetMaxQuantity gets a reference to the given int64 and assigns it to the MaxQuantity field.
func (o *ProductWholesale) SetMaxQuantity(v int64) {
	o.MaxQuantity = &v
}

func (o ProductWholesale) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductWholesale) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.MinQuantity) {
		toSerialize["minQuantity"] = o.MinQuantity
	}
	if !IsNil(o.MaxQuantity) {
		toSerialize["maxQuantity"] = o.MaxQuantity
	}
	return toSerialize, nil
}

type NullableProductWholesale struct {
	value *ProductWholesale
	isSet bool
}

func (v NullableProductWholesale) Get() *ProductWholesale {
	return v.value
}

func (v *NullableProductWholesale) Set(val *ProductWholesale) {
	v.value = val
	v.isSet = true
}

func (v NullableProductWholesale) IsSet() bool {
	return v.isSet
}

func (v *NullableProductWholesale) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductWholesale(val *ProductWholesale) *NullableProductWholesale {
	return &NullableProductWholesale{value: val, isSet: true}
}

func (v NullableProductWholesale) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductWholesale) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


