/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
	"fmt"
)

// GetOrderWebhook200ResponseData - struct for GetOrderWebhook200ResponseData
type GetOrderWebhook200ResponseData struct {
	GetOrderWebhook200ResponseDataOneOf *GetOrderWebhook200ResponseDataOneOf
	GetOrderWebhook200ResponseDataOneOf1 *GetOrderWebhook200ResponseDataOneOf1
}

// GetOrderWebhook200ResponseDataOneOfAsGetOrderWebhook200ResponseData is a convenience function that returns GetOrderWebhook200ResponseDataOneOf wrapped in GetOrderWebhook200ResponseData
func GetOrderWebhook200ResponseDataOneOfAsGetOrderWebhook200ResponseData(v *GetOrderWebhook200ResponseDataOneOf) GetOrderWebhook200ResponseData {
	return GetOrderWebhook200ResponseData{
		GetOrderWebhook200ResponseDataOneOf: v,
	}
}

// GetOrderWebhook200ResponseDataOneOf1AsGetOrderWebhook200ResponseData is a convenience function that returns GetOrderWebhook200ResponseDataOneOf1 wrapped in GetOrderWebhook200ResponseData
func GetOrderWebhook200ResponseDataOneOf1AsGetOrderWebhook200ResponseData(v *GetOrderWebhook200ResponseDataOneOf1) GetOrderWebhook200ResponseData {
	return GetOrderWebhook200ResponseData{
		GetOrderWebhook200ResponseDataOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetOrderWebhook200ResponseData) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetOrderWebhook200ResponseDataOneOf
	err = newStrictDecoder(data).Decode(&dst.GetOrderWebhook200ResponseDataOneOf)
	if err == nil {
		jsonGetOrderWebhook200ResponseDataOneOf, _ := json.Marshal(dst.GetOrderWebhook200ResponseDataOneOf)
		if string(jsonGetOrderWebhook200ResponseDataOneOf) == "{}" { // empty struct
			dst.GetOrderWebhook200ResponseDataOneOf = nil
		} else {
			match++
		}
	} else {
		dst.GetOrderWebhook200ResponseDataOneOf = nil
	}

	// try to unmarshal data into GetOrderWebhook200ResponseDataOneOf1
	err = newStrictDecoder(data).Decode(&dst.GetOrderWebhook200ResponseDataOneOf1)
	if err == nil {
		jsonGetOrderWebhook200ResponseDataOneOf1, _ := json.Marshal(dst.GetOrderWebhook200ResponseDataOneOf1)
		if string(jsonGetOrderWebhook200ResponseDataOneOf1) == "{}" { // empty struct
			dst.GetOrderWebhook200ResponseDataOneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.GetOrderWebhook200ResponseDataOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetOrderWebhook200ResponseDataOneOf = nil
		dst.GetOrderWebhook200ResponseDataOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetOrderWebhook200ResponseData)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetOrderWebhook200ResponseData)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetOrderWebhook200ResponseData) MarshalJSON() ([]byte, error) {
	if src.GetOrderWebhook200ResponseDataOneOf != nil {
		return json.Marshal(&src.GetOrderWebhook200ResponseDataOneOf)
	}

	if src.GetOrderWebhook200ResponseDataOneOf1 != nil {
		return json.Marshal(&src.GetOrderWebhook200ResponseDataOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetOrderWebhook200ResponseData) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.GetOrderWebhook200ResponseDataOneOf != nil {
		return obj.GetOrderWebhook200ResponseDataOneOf
	}

	if obj.GetOrderWebhook200ResponseDataOneOf1 != nil {
		return obj.GetOrderWebhook200ResponseDataOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableGetOrderWebhook200ResponseData struct {
	value *GetOrderWebhook200ResponseData
	isSet bool
}

func (v NullableGetOrderWebhook200ResponseData) Get() *GetOrderWebhook200ResponseData {
	return v.value
}

func (v *NullableGetOrderWebhook200ResponseData) Set(val *GetOrderWebhook200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrderWebhook200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrderWebhook200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrderWebhook200ResponseData(val *GetOrderWebhook200ResponseData) *NullableGetOrderWebhook200ResponseData {
	return &NullableGetOrderWebhook200ResponseData{value: val, isSet: true}
}

func (v NullableGetOrderWebhook200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrderWebhook200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


