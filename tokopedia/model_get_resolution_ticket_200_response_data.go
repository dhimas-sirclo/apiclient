/*
Tokopedia API

Tokopedia API

API version: 1.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokopedia

import (
	"encoding/json"
)

// checks if the GetResolutionTicket200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetResolutionTicket200ResponseData{}

// GetResolutionTicket200ResponseData struct for GetResolutionTicket200ResponseData
type GetResolutionTicket200ResponseData struct {
	IsSuccess *bool `json:"is_success,omitempty"`
	// format: YYYY-MM-DD 
	Startdate *string `json:"startdate,omitempty"`
	// format: YYYY-MM-DD 
	Enddate *string `json:"enddate,omitempty"`
	Shops []GetResolutionTicket200ResponseDataShopsInner `json:"shops,omitempty"`
}

// NewGetResolutionTicket200ResponseData instantiates a new GetResolutionTicket200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResolutionTicket200ResponseData() *GetResolutionTicket200ResponseData {
	this := GetResolutionTicket200ResponseData{}
	return &this
}

// NewGetResolutionTicket200ResponseDataWithDefaults instantiates a new GetResolutionTicket200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResolutionTicket200ResponseDataWithDefaults() *GetResolutionTicket200ResponseData {
	this := GetResolutionTicket200ResponseData{}
	return &this
}

// GetIsSuccess returns the IsSuccess field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseData) GetIsSuccess() bool {
	if o == nil || IsNil(o.IsSuccess) {
		var ret bool
		return ret
	}
	return *o.IsSuccess
}

// GetIsSuccessOk returns a tuple with the IsSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseData) GetIsSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSuccess) {
		return nil, false
	}
	return o.IsSuccess, true
}

// HasIsSuccess returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseData) HasIsSuccess() bool {
	if o != nil && !IsNil(o.IsSuccess) {
		return true
	}

	return false
}

// SetIsSuccess gets a reference to the given bool and assigns it to the IsSuccess field.
func (o *GetResolutionTicket200ResponseData) SetIsSuccess(v bool) {
	o.IsSuccess = &v
}

// GetStartdate returns the Startdate field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseData) GetStartdate() string {
	if o == nil || IsNil(o.Startdate) {
		var ret string
		return ret
	}
	return *o.Startdate
}

// GetStartdateOk returns a tuple with the Startdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseData) GetStartdateOk() (*string, bool) {
	if o == nil || IsNil(o.Startdate) {
		return nil, false
	}
	return o.Startdate, true
}

// HasStartdate returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseData) HasStartdate() bool {
	if o != nil && !IsNil(o.Startdate) {
		return true
	}

	return false
}

// SetStartdate gets a reference to the given string and assigns it to the Startdate field.
func (o *GetResolutionTicket200ResponseData) SetStartdate(v string) {
	o.Startdate = &v
}

// GetEnddate returns the Enddate field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseData) GetEnddate() string {
	if o == nil || IsNil(o.Enddate) {
		var ret string
		return ret
	}
	return *o.Enddate
}

// GetEnddateOk returns a tuple with the Enddate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseData) GetEnddateOk() (*string, bool) {
	if o == nil || IsNil(o.Enddate) {
		return nil, false
	}
	return o.Enddate, true
}

// HasEnddate returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseData) HasEnddate() bool {
	if o != nil && !IsNil(o.Enddate) {
		return true
	}

	return false
}

// SetEnddate gets a reference to the given string and assigns it to the Enddate field.
func (o *GetResolutionTicket200ResponseData) SetEnddate(v string) {
	o.Enddate = &v
}

// GetShops returns the Shops field value if set, zero value otherwise.
func (o *GetResolutionTicket200ResponseData) GetShops() []GetResolutionTicket200ResponseDataShopsInner {
	if o == nil || IsNil(o.Shops) {
		var ret []GetResolutionTicket200ResponseDataShopsInner
		return ret
	}
	return o.Shops
}

// GetShopsOk returns a tuple with the Shops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResolutionTicket200ResponseData) GetShopsOk() ([]GetResolutionTicket200ResponseDataShopsInner, bool) {
	if o == nil || IsNil(o.Shops) {
		return nil, false
	}
	return o.Shops, true
}

// HasShops returns a boolean if a field has been set.
func (o *GetResolutionTicket200ResponseData) HasShops() bool {
	if o != nil && !IsNil(o.Shops) {
		return true
	}

	return false
}

// SetShops gets a reference to the given []GetResolutionTicket200ResponseDataShopsInner and assigns it to the Shops field.
func (o *GetResolutionTicket200ResponseData) SetShops(v []GetResolutionTicket200ResponseDataShopsInner) {
	o.Shops = v
}

func (o GetResolutionTicket200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetResolutionTicket200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsSuccess) {
		toSerialize["is_success"] = o.IsSuccess
	}
	if !IsNil(o.Startdate) {
		toSerialize["startdate"] = o.Startdate
	}
	if !IsNil(o.Enddate) {
		toSerialize["enddate"] = o.Enddate
	}
	if !IsNil(o.Shops) {
		toSerialize["shops"] = o.Shops
	}
	return toSerialize, nil
}

type NullableGetResolutionTicket200ResponseData struct {
	value *GetResolutionTicket200ResponseData
	isSet bool
}

func (v NullableGetResolutionTicket200ResponseData) Get() *GetResolutionTicket200ResponseData {
	return v.value
}

func (v *NullableGetResolutionTicket200ResponseData) Set(val *GetResolutionTicket200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResolutionTicket200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResolutionTicket200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResolutionTicket200ResponseData(val *GetResolutionTicket200ResponseData) *NullableGetResolutionTicket200ResponseData {
	return &NullableGetResolutionTicket200ResponseData{value: val, isSet: true}
}

func (v NullableGetResolutionTicket200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResolutionTicket200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


