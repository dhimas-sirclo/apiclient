/*
SIRCLO Open API

SIRCLO Open API

API version: 1.0.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sirclo

import (
	"encoding/json"
)

// checks if the UpdateSalesChannelInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSalesChannelInput{}

// UpdateSalesChannelInput struct for UpdateSalesChannelInput
type UpdateSalesChannelInput struct {
	Type string `json:"type"`
	UrlInfo UrlInfoUpdateInput `json:"url_info"`
	UrlWebhook UrlWebhookUpdateInput `json:"url_webhook"`
}

// NewUpdateSalesChannelInput instantiates a new UpdateSalesChannelInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSalesChannelInput(type_ string, urlInfo UrlInfoUpdateInput, urlWebhook UrlWebhookUpdateInput) *UpdateSalesChannelInput {
	this := UpdateSalesChannelInput{}
	this.Type = type_
	this.UrlInfo = urlInfo
	this.UrlWebhook = urlWebhook
	return &this
}

// NewUpdateSalesChannelInputWithDefaults instantiates a new UpdateSalesChannelInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSalesChannelInputWithDefaults() *UpdateSalesChannelInput {
	this := UpdateSalesChannelInput{}
	return &this
}

// GetType returns the Type field value
func (o *UpdateSalesChannelInput) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UpdateSalesChannelInput) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UpdateSalesChannelInput) SetType(v string) {
	o.Type = v
}

// GetUrlInfo returns the UrlInfo field value
func (o *UpdateSalesChannelInput) GetUrlInfo() UrlInfoUpdateInput {
	if o == nil {
		var ret UrlInfoUpdateInput
		return ret
	}

	return o.UrlInfo
}

// GetUrlInfoOk returns a tuple with the UrlInfo field value
// and a boolean to check if the value has been set.
func (o *UpdateSalesChannelInput) GetUrlInfoOk() (*UrlInfoUpdateInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlInfo, true
}

// SetUrlInfo sets field value
func (o *UpdateSalesChannelInput) SetUrlInfo(v UrlInfoUpdateInput) {
	o.UrlInfo = v
}

// GetUrlWebhook returns the UrlWebhook field value
func (o *UpdateSalesChannelInput) GetUrlWebhook() UrlWebhookUpdateInput {
	if o == nil {
		var ret UrlWebhookUpdateInput
		return ret
	}

	return o.UrlWebhook
}

// GetUrlWebhookOk returns a tuple with the UrlWebhook field value
// and a boolean to check if the value has been set.
func (o *UpdateSalesChannelInput) GetUrlWebhookOk() (*UrlWebhookUpdateInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlWebhook, true
}

// SetUrlWebhook sets field value
func (o *UpdateSalesChannelInput) SetUrlWebhook(v UrlWebhookUpdateInput) {
	o.UrlWebhook = v
}

func (o UpdateSalesChannelInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSalesChannelInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["url_info"] = o.UrlInfo
	toSerialize["url_webhook"] = o.UrlWebhook
	return toSerialize, nil
}

type NullableUpdateSalesChannelInput struct {
	value *UpdateSalesChannelInput
	isSet bool
}

func (v NullableUpdateSalesChannelInput) Get() *UpdateSalesChannelInput {
	return v.value
}

func (v *NullableUpdateSalesChannelInput) Set(val *UpdateSalesChannelInput) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSalesChannelInput) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSalesChannelInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSalesChannelInput(val *UpdateSalesChannelInput) *NullableUpdateSalesChannelInput {
	return &NullableUpdateSalesChannelInput{value: val, isSet: true}
}

func (v NullableUpdateSalesChannelInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSalesChannelInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


