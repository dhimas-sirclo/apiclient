/*
SIRCLO Open API

SIRCLO Open API

API version: 1.0.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sirclo

import (
	"encoding/json"
)

// checks if the UrlWebhookInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UrlWebhookInput{}

// UrlWebhookInput struct for UrlWebhookInput
type UrlWebhookInput struct {
	UrlConnect string `json:"url_connect"`
	UrlAcceptedOrder string `json:"url_accepted_order"`
	UrlPackedOrder string `json:"url_packed_order"`
	UrlShippedOrder string `json:"url_shipped_order"`
	UrlCompletedOrder string `json:"url_completed_order"`
	UrlCancelledOrder string `json:"url_cancelled_order"`
	UrlUpdateStock string `json:"url_update_stock"`
	UrlUpsertProduct string `json:"url_upsert_product"`
}

// NewUrlWebhookInput instantiates a new UrlWebhookInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlWebhookInput(urlConnect string, urlAcceptedOrder string, urlPackedOrder string, urlShippedOrder string, urlCompletedOrder string, urlCancelledOrder string, urlUpdateStock string, urlUpsertProduct string) *UrlWebhookInput {
	this := UrlWebhookInput{}
	this.UrlConnect = urlConnect
	this.UrlAcceptedOrder = urlAcceptedOrder
	this.UrlPackedOrder = urlPackedOrder
	this.UrlShippedOrder = urlShippedOrder
	this.UrlCompletedOrder = urlCompletedOrder
	this.UrlCancelledOrder = urlCancelledOrder
	this.UrlUpdateStock = urlUpdateStock
	this.UrlUpsertProduct = urlUpsertProduct
	return &this
}

// NewUrlWebhookInputWithDefaults instantiates a new UrlWebhookInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlWebhookInputWithDefaults() *UrlWebhookInput {
	this := UrlWebhookInput{}
	return &this
}

// GetUrlConnect returns the UrlConnect field value
func (o *UrlWebhookInput) GetUrlConnect() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlConnect
}

// GetUrlConnectOk returns a tuple with the UrlConnect field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlConnectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlConnect, true
}

// SetUrlConnect sets field value
func (o *UrlWebhookInput) SetUrlConnect(v string) {
	o.UrlConnect = v
}

// GetUrlAcceptedOrder returns the UrlAcceptedOrder field value
func (o *UrlWebhookInput) GetUrlAcceptedOrder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlAcceptedOrder
}

// GetUrlAcceptedOrderOk returns a tuple with the UrlAcceptedOrder field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlAcceptedOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlAcceptedOrder, true
}

// SetUrlAcceptedOrder sets field value
func (o *UrlWebhookInput) SetUrlAcceptedOrder(v string) {
	o.UrlAcceptedOrder = v
}

// GetUrlPackedOrder returns the UrlPackedOrder field value
func (o *UrlWebhookInput) GetUrlPackedOrder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlPackedOrder
}

// GetUrlPackedOrderOk returns a tuple with the UrlPackedOrder field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlPackedOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlPackedOrder, true
}

// SetUrlPackedOrder sets field value
func (o *UrlWebhookInput) SetUrlPackedOrder(v string) {
	o.UrlPackedOrder = v
}

// GetUrlShippedOrder returns the UrlShippedOrder field value
func (o *UrlWebhookInput) GetUrlShippedOrder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlShippedOrder
}

// GetUrlShippedOrderOk returns a tuple with the UrlShippedOrder field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlShippedOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlShippedOrder, true
}

// SetUrlShippedOrder sets field value
func (o *UrlWebhookInput) SetUrlShippedOrder(v string) {
	o.UrlShippedOrder = v
}

// GetUrlCompletedOrder returns the UrlCompletedOrder field value
func (o *UrlWebhookInput) GetUrlCompletedOrder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlCompletedOrder
}

// GetUrlCompletedOrderOk returns a tuple with the UrlCompletedOrder field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlCompletedOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlCompletedOrder, true
}

// SetUrlCompletedOrder sets field value
func (o *UrlWebhookInput) SetUrlCompletedOrder(v string) {
	o.UrlCompletedOrder = v
}

// GetUrlCancelledOrder returns the UrlCancelledOrder field value
func (o *UrlWebhookInput) GetUrlCancelledOrder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlCancelledOrder
}

// GetUrlCancelledOrderOk returns a tuple with the UrlCancelledOrder field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlCancelledOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlCancelledOrder, true
}

// SetUrlCancelledOrder sets field value
func (o *UrlWebhookInput) SetUrlCancelledOrder(v string) {
	o.UrlCancelledOrder = v
}

// GetUrlUpdateStock returns the UrlUpdateStock field value
func (o *UrlWebhookInput) GetUrlUpdateStock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlUpdateStock
}

// GetUrlUpdateStockOk returns a tuple with the UrlUpdateStock field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlUpdateStockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlUpdateStock, true
}

// SetUrlUpdateStock sets field value
func (o *UrlWebhookInput) SetUrlUpdateStock(v string) {
	o.UrlUpdateStock = v
}

// GetUrlUpsertProduct returns the UrlUpsertProduct field value
func (o *UrlWebhookInput) GetUrlUpsertProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlUpsertProduct
}

// GetUrlUpsertProductOk returns a tuple with the UrlUpsertProduct field value
// and a boolean to check if the value has been set.
func (o *UrlWebhookInput) GetUrlUpsertProductOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlUpsertProduct, true
}

// SetUrlUpsertProduct sets field value
func (o *UrlWebhookInput) SetUrlUpsertProduct(v string) {
	o.UrlUpsertProduct = v
}

func (o UrlWebhookInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UrlWebhookInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url_connect"] = o.UrlConnect
	toSerialize["url_accepted_order"] = o.UrlAcceptedOrder
	toSerialize["url_packed_order"] = o.UrlPackedOrder
	toSerialize["url_shipped_order"] = o.UrlShippedOrder
	toSerialize["url_completed_order"] = o.UrlCompletedOrder
	toSerialize["url_cancelled_order"] = o.UrlCancelledOrder
	toSerialize["url_update_stock"] = o.UrlUpdateStock
	toSerialize["url_upsert_product"] = o.UrlUpsertProduct
	return toSerialize, nil
}

type NullableUrlWebhookInput struct {
	value *UrlWebhookInput
	isSet bool
}

func (v NullableUrlWebhookInput) Get() *UrlWebhookInput {
	return v.value
}

func (v *NullableUrlWebhookInput) Set(val *UrlWebhookInput) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlWebhookInput) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlWebhookInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlWebhookInput(val *UrlWebhookInput) *NullableUrlWebhookInput {
	return &NullableUrlWebhookInput{value: val, isSet: true}
}

func (v NullableUrlWebhookInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlWebhookInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


