/*
SIRCLO Open API

SIRCLO Open API

API version: 1.0.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sirclo

import (
	"encoding/json"
)

// checks if the ProductCategoryAttributeInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductCategoryAttributeInput{}

// ProductCategoryAttributeInput struct for ProductCategoryAttributeInput
type ProductCategoryAttributeInput struct {
	AttributeId string `json:"attribute_id"`
	FieldName string `json:"field_name"`
	InputType string `json:"input_type"`
	Options []string `json:"options,omitempty"`
	IsMandatory bool `json:"is_mandatory"`
	IsVariantAttribute bool `json:"is_variant_attribute"`
}

// NewProductCategoryAttributeInput instantiates a new ProductCategoryAttributeInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCategoryAttributeInput(attributeId string, fieldName string, inputType string, isMandatory bool, isVariantAttribute bool) *ProductCategoryAttributeInput {
	this := ProductCategoryAttributeInput{}
	this.AttributeId = attributeId
	this.FieldName = fieldName
	this.InputType = inputType
	this.IsMandatory = isMandatory
	this.IsVariantAttribute = isVariantAttribute
	return &this
}

// NewProductCategoryAttributeInputWithDefaults instantiates a new ProductCategoryAttributeInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCategoryAttributeInputWithDefaults() *ProductCategoryAttributeInput {
	this := ProductCategoryAttributeInput{}
	return &this
}

// GetAttributeId returns the AttributeId field value
func (o *ProductCategoryAttributeInput) GetAttributeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeId
}

// GetAttributeIdOk returns a tuple with the AttributeId field value
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttributeInput) GetAttributeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeId, true
}

// SetAttributeId sets field value
func (o *ProductCategoryAttributeInput) SetAttributeId(v string) {
	o.AttributeId = v
}

// GetFieldName returns the FieldName field value
func (o *ProductCategoryAttributeInput) GetFieldName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttributeInput) GetFieldNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FieldName, true
}

// SetFieldName sets field value
func (o *ProductCategoryAttributeInput) SetFieldName(v string) {
	o.FieldName = v
}

// GetInputType returns the InputType field value
func (o *ProductCategoryAttributeInput) GetInputType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputType
}

// GetInputTypeOk returns a tuple with the InputType field value
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttributeInput) GetInputTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputType, true
}

// SetInputType sets field value
func (o *ProductCategoryAttributeInput) SetInputType(v string) {
	o.InputType = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ProductCategoryAttributeInput) GetOptions() []string {
	if o == nil || IsNil(o.Options) {
		var ret []string
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttributeInput) GetOptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ProductCategoryAttributeInput) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []string and assigns it to the Options field.
func (o *ProductCategoryAttributeInput) SetOptions(v []string) {
	o.Options = v
}

// GetIsMandatory returns the IsMandatory field value
func (o *ProductCategoryAttributeInput) GetIsMandatory() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMandatory
}

// GetIsMandatoryOk returns a tuple with the IsMandatory field value
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttributeInput) GetIsMandatoryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMandatory, true
}

// SetIsMandatory sets field value
func (o *ProductCategoryAttributeInput) SetIsMandatory(v bool) {
	o.IsMandatory = v
}

// GetIsVariantAttribute returns the IsVariantAttribute field value
func (o *ProductCategoryAttributeInput) GetIsVariantAttribute() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsVariantAttribute
}

// GetIsVariantAttributeOk returns a tuple with the IsVariantAttribute field value
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttributeInput) GetIsVariantAttributeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsVariantAttribute, true
}

// SetIsVariantAttribute sets field value
func (o *ProductCategoryAttributeInput) SetIsVariantAttribute(v bool) {
	o.IsVariantAttribute = v
}

func (o ProductCategoryAttributeInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductCategoryAttributeInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attribute_id"] = o.AttributeId
	toSerialize["field_name"] = o.FieldName
	toSerialize["input_type"] = o.InputType
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	toSerialize["is_mandatory"] = o.IsMandatory
	toSerialize["is_variant_attribute"] = o.IsVariantAttribute
	return toSerialize, nil
}

type NullableProductCategoryAttributeInput struct {
	value *ProductCategoryAttributeInput
	isSet bool
}

func (v NullableProductCategoryAttributeInput) Get() *ProductCategoryAttributeInput {
	return v.value
}

func (v *NullableProductCategoryAttributeInput) Set(val *ProductCategoryAttributeInput) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCategoryAttributeInput) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCategoryAttributeInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCategoryAttributeInput(val *ProductCategoryAttributeInput) *NullableProductCategoryAttributeInput {
	return &NullableProductCategoryAttributeInput{value: val, isSet: true}
}

func (v NullableProductCategoryAttributeInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCategoryAttributeInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


