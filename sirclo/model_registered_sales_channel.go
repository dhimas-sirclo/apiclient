/*
SIRCLO Open API

SIRCLO Open API

API version: 1.0.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sirclo

import (
	"encoding/json"
)

// checks if the RegisteredSalesChannel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisteredSalesChannel{}

// RegisteredSalesChannel struct for RegisteredSalesChannel
type RegisteredSalesChannel struct {
	AppName *string `json:"app_name,omitempty"`
	AppChannelCode *string `json:"app_channel_code,omitempty"`
	UrlInfo *UrlInfo `json:"url_info,omitempty"`
	UrlWebhook *UrlWebhook `json:"url_webhook,omitempty"`
	Type *string `json:"type,omitempty"`
	AppKey *string `json:"app_key,omitempty"`
}

// NewRegisteredSalesChannel instantiates a new RegisteredSalesChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisteredSalesChannel() *RegisteredSalesChannel {
	this := RegisteredSalesChannel{}
	return &this
}

// NewRegisteredSalesChannelWithDefaults instantiates a new RegisteredSalesChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisteredSalesChannelWithDefaults() *RegisteredSalesChannel {
	this := RegisteredSalesChannel{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *RegisteredSalesChannel) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSalesChannel) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *RegisteredSalesChannel) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *RegisteredSalesChannel) SetAppName(v string) {
	o.AppName = &v
}

// GetAppChannelCode returns the AppChannelCode field value if set, zero value otherwise.
func (o *RegisteredSalesChannel) GetAppChannelCode() string {
	if o == nil || IsNil(o.AppChannelCode) {
		var ret string
		return ret
	}
	return *o.AppChannelCode
}

// GetAppChannelCodeOk returns a tuple with the AppChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSalesChannel) GetAppChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AppChannelCode) {
		return nil, false
	}
	return o.AppChannelCode, true
}

// HasAppChannelCode returns a boolean if a field has been set.
func (o *RegisteredSalesChannel) HasAppChannelCode() bool {
	if o != nil && !IsNil(o.AppChannelCode) {
		return true
	}

	return false
}

// SetAppChannelCode gets a reference to the given string and assigns it to the AppChannelCode field.
func (o *RegisteredSalesChannel) SetAppChannelCode(v string) {
	o.AppChannelCode = &v
}

// GetUrlInfo returns the UrlInfo field value if set, zero value otherwise.
func (o *RegisteredSalesChannel) GetUrlInfo() UrlInfo {
	if o == nil || IsNil(o.UrlInfo) {
		var ret UrlInfo
		return ret
	}
	return *o.UrlInfo
}

// GetUrlInfoOk returns a tuple with the UrlInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSalesChannel) GetUrlInfoOk() (*UrlInfo, bool) {
	if o == nil || IsNil(o.UrlInfo) {
		return nil, false
	}
	return o.UrlInfo, true
}

// HasUrlInfo returns a boolean if a field has been set.
func (o *RegisteredSalesChannel) HasUrlInfo() bool {
	if o != nil && !IsNil(o.UrlInfo) {
		return true
	}

	return false
}

// SetUrlInfo gets a reference to the given UrlInfo and assigns it to the UrlInfo field.
func (o *RegisteredSalesChannel) SetUrlInfo(v UrlInfo) {
	o.UrlInfo = &v
}

// GetUrlWebhook returns the UrlWebhook field value if set, zero value otherwise.
func (o *RegisteredSalesChannel) GetUrlWebhook() UrlWebhook {
	if o == nil || IsNil(o.UrlWebhook) {
		var ret UrlWebhook
		return ret
	}
	return *o.UrlWebhook
}

// GetUrlWebhookOk returns a tuple with the UrlWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSalesChannel) GetUrlWebhookOk() (*UrlWebhook, bool) {
	if o == nil || IsNil(o.UrlWebhook) {
		return nil, false
	}
	return o.UrlWebhook, true
}

// HasUrlWebhook returns a boolean if a field has been set.
func (o *RegisteredSalesChannel) HasUrlWebhook() bool {
	if o != nil && !IsNil(o.UrlWebhook) {
		return true
	}

	return false
}

// SetUrlWebhook gets a reference to the given UrlWebhook and assigns it to the UrlWebhook field.
func (o *RegisteredSalesChannel) SetUrlWebhook(v UrlWebhook) {
	o.UrlWebhook = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RegisteredSalesChannel) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSalesChannel) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RegisteredSalesChannel) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RegisteredSalesChannel) SetType(v string) {
	o.Type = &v
}

// GetAppKey returns the AppKey field value if set, zero value otherwise.
func (o *RegisteredSalesChannel) GetAppKey() string {
	if o == nil || IsNil(o.AppKey) {
		var ret string
		return ret
	}
	return *o.AppKey
}

// GetAppKeyOk returns a tuple with the AppKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSalesChannel) GetAppKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AppKey) {
		return nil, false
	}
	return o.AppKey, true
}

// HasAppKey returns a boolean if a field has been set.
func (o *RegisteredSalesChannel) HasAppKey() bool {
	if o != nil && !IsNil(o.AppKey) {
		return true
	}

	return false
}

// SetAppKey gets a reference to the given string and assigns it to the AppKey field.
func (o *RegisteredSalesChannel) SetAppKey(v string) {
	o.AppKey = &v
}

func (o RegisteredSalesChannel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisteredSalesChannel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppName) {
		toSerialize["app_name"] = o.AppName
	}
	if !IsNil(o.AppChannelCode) {
		toSerialize["app_channel_code"] = o.AppChannelCode
	}
	if !IsNil(o.UrlInfo) {
		toSerialize["url_info"] = o.UrlInfo
	}
	if !IsNil(o.UrlWebhook) {
		toSerialize["url_webhook"] = o.UrlWebhook
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AppKey) {
		toSerialize["app_key"] = o.AppKey
	}
	return toSerialize, nil
}

type NullableRegisteredSalesChannel struct {
	value *RegisteredSalesChannel
	isSet bool
}

func (v NullableRegisteredSalesChannel) Get() *RegisteredSalesChannel {
	return v.value
}

func (v *NullableRegisteredSalesChannel) Set(val *RegisteredSalesChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisteredSalesChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisteredSalesChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisteredSalesChannel(val *RegisteredSalesChannel) *NullableRegisteredSalesChannel {
	return &NullableRegisteredSalesChannel{value: val, isSet: true}
}

func (v NullableRegisteredSalesChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisteredSalesChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


