/*
SIRCLO Open API

SIRCLO Open API

API version: 1.0.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sirclo

import (
	"encoding/json"
)

// checks if the VariantAttributeInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariantAttributeInput{}

// VariantAttributeInput struct for VariantAttributeInput
type VariantAttributeInput struct {
	Name string `json:"name"`
	Value string `json:"value"`
}

// NewVariantAttributeInput instantiates a new VariantAttributeInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariantAttributeInput(name string, value string) *VariantAttributeInput {
	this := VariantAttributeInput{}
	this.Name = name
	this.Value = value
	return &this
}

// NewVariantAttributeInputWithDefaults instantiates a new VariantAttributeInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariantAttributeInputWithDefaults() *VariantAttributeInput {
	this := VariantAttributeInput{}
	return &this
}

// GetName returns the Name field value
func (o *VariantAttributeInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VariantAttributeInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VariantAttributeInput) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *VariantAttributeInput) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VariantAttributeInput) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VariantAttributeInput) SetValue(v string) {
	o.Value = v
}

func (o VariantAttributeInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariantAttributeInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableVariantAttributeInput struct {
	value *VariantAttributeInput
	isSet bool
}

func (v NullableVariantAttributeInput) Get() *VariantAttributeInput {
	return v.value
}

func (v *NullableVariantAttributeInput) Set(val *VariantAttributeInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVariantAttributeInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVariantAttributeInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariantAttributeInput(val *VariantAttributeInput) *NullableVariantAttributeInput {
	return &NullableVariantAttributeInput{value: val, isSet: true}
}

func (v NullableVariantAttributeInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariantAttributeInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


