/*
SIRCLO Open API

SIRCLO Open API

API version: 1.0.0
Contact: dev@sirclo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sirclo

import (
	"encoding/json"
)

// checks if the ProductCategoryAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductCategoryAttribute{}

// ProductCategoryAttribute struct for ProductCategoryAttribute
type ProductCategoryAttribute struct {
	AttributeId *string `json:"attribute_id,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewProductCategoryAttribute instantiates a new ProductCategoryAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCategoryAttribute() *ProductCategoryAttribute {
	this := ProductCategoryAttribute{}
	return &this
}

// NewProductCategoryAttributeWithDefaults instantiates a new ProductCategoryAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCategoryAttributeWithDefaults() *ProductCategoryAttribute {
	this := ProductCategoryAttribute{}
	return &this
}

// GetAttributeId returns the AttributeId field value if set, zero value otherwise.
func (o *ProductCategoryAttribute) GetAttributeId() string {
	if o == nil || IsNil(o.AttributeId) {
		var ret string
		return ret
	}
	return *o.AttributeId
}

// GetAttributeIdOk returns a tuple with the AttributeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttribute) GetAttributeIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeId) {
		return nil, false
	}
	return o.AttributeId, true
}

// HasAttributeId returns a boolean if a field has been set.
func (o *ProductCategoryAttribute) HasAttributeId() bool {
	if o != nil && !IsNil(o.AttributeId) {
		return true
	}

	return false
}

// SetAttributeId gets a reference to the given string and assigns it to the AttributeId field.
func (o *ProductCategoryAttribute) SetAttributeId(v string) {
	o.AttributeId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ProductCategoryAttribute) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategoryAttribute) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ProductCategoryAttribute) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ProductCategoryAttribute) SetMessage(v string) {
	o.Message = &v
}

func (o ProductCategoryAttribute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductCategoryAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeId) {
		toSerialize["attribute_id"] = o.AttributeId
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableProductCategoryAttribute struct {
	value *ProductCategoryAttribute
	isSet bool
}

func (v NullableProductCategoryAttribute) Get() *ProductCategoryAttribute {
	return v.value
}

func (v *NullableProductCategoryAttribute) Set(val *ProductCategoryAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCategoryAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCategoryAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCategoryAttribute(val *ProductCategoryAttribute) *NullableProductCategoryAttribute {
	return &NullableProductCategoryAttribute{value: val, isSet: true}
}

func (v NullableProductCategoryAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCategoryAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


