/*
 * Tokopedia API
 * Tokopedia API
 *
 * OpenAPI spec version: 1.0
 * Contact: dev@sirclo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 7.0.0
 */

import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://fs.tokopedia.net";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function () {
  group("/v1/fs/{fs_id}/shop/{shop_id}/saldo-history", () => {
    let fromDate = "TODO_EDIT_THE_FROM_DATE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let toDate = "TODO_EDIT_THE_TO_DATE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let exportType = "TODO_EDIT_THE_EXPORT"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getSaldoHistory
    {
      let url =
        BASE_URL +
        `/v1/fs/${fs_id}/shop/${shop_id}/saldo-history?from_date=${from_date}&to_date=${to_date}&page=${page}&per_page=${per_page}&export=${exportType}`;
      let request = http.get(url);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/product/info", () => {
    let product = "TODO_EDIT_THE_PRODUCT"; // specify value as there is no example value for this parameter in OpenAPI spec
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let lastSort = "TODO_EDIT_THE_LAST_SORT"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let productUrl = "TODO_EDIT_THE_PRODUCT_URL"; // specify value as there is no example value for this parameter in OpenAPI spec
    let sku = "TODO_EDIT_THE_SKU"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getProductInfo
    {
      let url =
        BASE_URL +
        `/inventory/v1/fs/${fs_id}/product/info?product=${product}&product_url=${product_url}&sku=${sku}&shop_id=${shop_id}&page=${page}&per_page=${per_page}&last_sort=${last_sort}`;
      let request = http.get(url);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/order/{order_id}/fs/{fs_id}/status", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: confirmShipping
    {
      let url = BASE_URL + `/v1/order/${order_id}/fs/${fs_id}/status`;
      // TODO: edit the parameters of the request body.
      let body = { orderStatus: "long", shippingRefNum: "string" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v2/products/fs/{fs_id}/create", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: createProductV2
    {
      let url = BASE_URL + `/v2/products/fs/${fs_id}/create?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { products: "list" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/pick-up", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: requestPickup
    {
      let url = BASE_URL + `/inventory/v1/fs/${fs_id}/pick-up`;
      // TODO: edit the parameters of the request body.
      let body = { orderId: "long", shopId: "long" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/stock/increment", () => {
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let requestId = "TODO_EDIT_THE_REQUEST_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updateStockIncrement
    {
      let url =
        BASE_URL +
        `/inventory/v1/fs/${fs_id}/stock/increment?shop_id=${shop_id}&request_id=${request_id}&warehouse_id=${warehouse_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/product/etalase", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getShowcaseAllEtalase
    {
      let url =
        BASE_URL +
        `/inventory/v1/fs/${fs_id}/product/etalase?shop_id=${shop_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/shop/fs/{fs_id}/shop-info", () => {
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getShopInfo
    {
      let url =
        BASE_URL +
        `/v1/shop/fs/${fs_id}/shop-info?shop_id=${shop_id}&page=${page}&per_page=${per_page}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v1/fs/{fs_id}/register", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: registerWebhook
    {
      let url = BASE_URL + `/v1/fs/${fs_id}/register`;
      // TODO: edit the parameters of the request body.
      let body = {
        fsId: "long",
        orderNotificationUrl: "string",
        orderCancellationUrl: "string",
        orderStatusUrl: "string",
        orderRequestCancellationUrl: "string",
        chatNotificationUrl: "string",
        productCreationUrl: "string",
        productChangesUrl: "string",
        campaignNotificationUrl: "string",
        webhookSecret: "string",
      };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/slash-price/fs/{fs_id}/add", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: addSlashPrice
    {
      let url = BASE_URL + `/v1/slash-price/fs/${fs_id}/add?shop_id=${shop_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/product/category", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let keyword = "TODO_EDIT_THE_KEYWORD"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getAllCategories
    {
      let url =
        BASE_URL +
        `/inventory/v1/fs/${fs_id}/product/category?keyword=${keyword}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v2/fs/{fs_id}/category/get_variant", () => {
    let catId = "TODO_EDIT_THE_CAT_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getVariantsByCategoryId
    {
      let url =
        BASE_URL +
        `/inventory/v2/fs/${fs_id}/category/get_variant?cat_id=${cat_id}`;
      let request = http.get(url);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v3/products/fs/{fs_id}/create", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: createProductV3
    {
      let url = BASE_URL + `/v3/products/fs/${fs_id}/create?shop_id=${shop_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/fs/{fs_id}/trigger", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: triggerWebhook
    {
      let url = BASE_URL + `/v1/fs/${fs_id}/trigger`;
      // TODO: edit the parameters of the request body.
      let body = {
        orderId: "long",
        type: "string",
        url: "string",
        isEncrypted: "boolean",
      };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        OK: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/order/{order_id}/fs/{fs_id}/pof/request", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: requestPartialOrderFulfillment
    {
      let url = BASE_URL + `/v1/order/${order_id}/fs/${fs_id}/pof/request`;
      // TODO: edit the parameters of the request body.
      let body = { pofDetail: "list" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v1/order/{order_id}/fs/{fs_id}/shipping-label", () => {
    let printed = "TODO_EDIT_THE_PRINTED"; // specify value as there is no example value for this parameter in OpenAPI spec
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getShippingLabel
    {
      let url =
        BASE_URL +
        `/v1/order/${order_id}/fs/${fs_id}/shipping-label?printed=${printed}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v2/fs/{fs_id}/order", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let invoiceNum = "TODO_EDIT_THE_INVOICE_NUM"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getSingleOrder
    {
      let url =
        BASE_URL +
        `/v2/fs/${fs_id}/order?order_id=${order_id}&invoice_num=${invoice_num}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v1/slash-price/fs/{fs_id}/update", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updateSlashPrice
    {
      let url =
        BASE_URL + `/v1/slash-price/fs/${fs_id}/update?shop_id=${shop_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/fs/{fs_id}", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getRegisteredWebhooks
    {
      let url = BASE_URL + `/v1/fs/${fs_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/products/fs/{fs_id}/inactive", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: setInactiveProduct
    {
      let url =
        BASE_URL + `/v1/products/fs/${fs_id}/inactive?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { productId: "list" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/products/bundle/fs/{fs_id}/edit", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: cancelBundle
    {
      let url =
        BASE_URL + `/v1/products/bundle/fs/${fs_id}/edit?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { bundleId: "long" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.patch(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/campaign/fs/{fs_id}/view", () => {
    let productId = "TODO_EDIT_THE_PRODUCT_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: viewCampaignProducts
    {
      let url =
        BASE_URL +
        `/v1/campaign/fs/${fs_id}/view?shop_id=${shop_id}&product_id=${product_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/fs/{fs_id}/fulfillment_order", () => {
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let nextOrderId = "TODO_EDIT_THE_NEXT_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let firstOrderId = "TODO_EDIT_THE_FIRST_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getOrderCobCod
    {
      let url =
        BASE_URL +
        `/v1/fs/${fs_id}/fulfillment_order?order_id=${order_id}&shop_id=${shop_id}&warehouse_id=${warehouse_id}&per_page=${per_page}&first_order_id=${first_order_id}&next_order_id=${next_order_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v1/products/bundle/fs/{fs_id}/list", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let type = "TODO_EDIT_THE_TYPE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let status = "TODO_EDIT_THE_STATUS"; // specify value as there is no example value for this parameter in OpenAPI spec
    let lastGroupId = "TODO_EDIT_THE_LAST_GROUP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getBundleList
    {
      let url =
        BASE_URL +
        `/v1/products/bundle/fs/${fs_id}/list?shop_id=${shop_id}&type=${type}&status=${status}&last_group_id=${last_group_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/chat/fs/{fs_id}/messages", () => {
    let filter = "TODO_EDIT_THE_FILTER"; // specify value as there is no example value for this parameter in OpenAPI spec
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getListMessage
    {
      let url =
        BASE_URL +
        `/v1/chat/fs/${fs_id}/messages?shop_id=${shop_id}&page=${page}&per_page=${per_page}&filter=${filter}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/showcase/fs/{fs_id}/delete", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: deleteShowcase
    {
      let url = BASE_URL + `/v1/showcase/fs/${fs_id}/delete?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { id: "long" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/chat/fs/{fs_id}/initiate", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: initiateChat
    {
      let url = BASE_URL + `/v1/chat/fs/${fs_id}/initiate?order_id=${order_id}`;
      let request = http.get(url);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v2/logistic/fs/{fs_id}/update", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updateShipmentInfo
    {
      let url = BASE_URL + `/v2/logistic/fs/${fs_id}/update?shop_id=${shop_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/stock/update", () => {
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let bypassUpdateProductStatus =
      "TODO_EDIT_THE_BYPASS_UPDATE_PRODUCT_STATUS"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updateStockOverwrite
    {
      let url =
        BASE_URL +
        `/inventory/v1/fs/${fs_id}/stock/update?shop_id=${shop_id}&bypass_update_product_status=${bypass_update_product_status}&warehouse_id=${warehouse_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/products/bundle/fs/{fs_id}/info", () => {
    let productId = "TODO_EDIT_THE_PRODUCT_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let bundleId = "TODO_EDIT_THE_BUNDLE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getBundleInfo
    {
      let url =
        BASE_URL +
        `/v1/products/bundle/fs/${fs_id}/info?shop_id=${shop_id}&bundle_id=${bundle_id}&product_id=${product_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/showcase/fs/{fs_id}/create", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: createShowcase
    {
      let url = BASE_URL + `/v1/showcase/fs/${fs_id}/create?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { name: "string" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/discussion/fs/{fs_id}/list", () => {
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let productId = "TODO_EDIT_THE_PRODUCT_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getProductDiscussion
    {
      let url =
        BASE_URL +
        `/v1/discussion/fs/${fs_id}/list?shop_id=${shop_id}&product_id=${product_id}&page=${page}&per_page=${per_page}`;
      let request = http.get(url);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v3/products/fs/{fs_id}/delete", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: deleteProduct
    {
      let url = BASE_URL + `/v3/products/fs/${fs_id}/delete?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { productId: "list" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      // this is a DELETE method request - if params are also set, empty body must be passed
      let request = http.del(url, {}, params);

      check(request, {
        OK: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/products/fs/{fs_id}/active", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: setActiveProduct
    {
      let url = BASE_URL + `/v1/products/fs/${fs_id}/active?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { productId: "list" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/order/{order_id}/fs/{fs_id}/webhook", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let type = "TODO_EDIT_THE_TYPE"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getOrderWebhook
    {
      let url =
        BASE_URL + `/v1/order/${order_id}/fs/${fs_id}/webhook?type=${type}`;
      let request = http.get(url);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/fs/{fs_id}/product/annotation", () => {
    let catId = "TODO_EDIT_THE_CAT_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getProductAnnotationByCategoryId
    {
      let url =
        BASE_URL + `/v1/fs/${fs_id}/product/annotation?cat_id=${cat_id}`;
      let request = http.get(url);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v2/products/fs/{fs_id}/status/{upload_id}", () => {
    let uploadId = "TODO_EDIT_THE_UPLOAD_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: checkUploadStatus
    {
      let url =
        BASE_URL +
        `/v2/products/fs/${fs_id}/status/${upload_id}?shop_id=${shop_id}`;
      let request = http.get(url);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/resolution/v1/fs/{fs_id}/ticket", () => {
    let fromDate = "TODO_EDIT_THE_FROM_DATE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let toDate = "TODO_EDIT_THE_TO_DATE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getResolutionTicket
    {
      let url =
        BASE_URL +
        `/resolution/v1/fs/${fs_id}/ticket?shop_id=${shop_id}&from_date=${from_date}&to_date=${to_date}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v2/shop/fs/{fs_id}/shop-status", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updateShopStatus
    {
      let url = BASE_URL + `/v2/shop/fs/${fs_id}/shop-status`;
      // TODO: edit the parameters of the request body.
      let body = {
        shopId: "long",
        action: "string",
        startDate: "string",
        endDate: "string",
        closeWARN: "string",
        closeNow: "boolean",
      };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/order/{order_id}/fs/{fs_id}/reject-cancel", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: rejectRequestCancel
    {
      let url =
        BASE_URL +
        `/v1/order/${order_id}/fs/${fs_id}/reject-cancel?shop_id=${shop_id}`;
      let request = http.post(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v2/order/list", () => {
    let fromDate = "TODO_EDIT_THE_FROM_DATE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let toDate = "TODO_EDIT_THE_TO_DATE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let status = "TODO_EDIT_THE_STATUS"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getAllOrders
    {
      let url =
        BASE_URL +
        `/v2/order/list?fs_id=${fs_id}&from_date=${from_date}&to_date=${to_date}&page=${page}&per_page=${per_page}&shop_id=${shop_id}&warehouse_id=${warehouse_id}&status=${status}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/product/variant/{product_id}", () => {
    let productId = "TODO_EDIT_THE_PRODUCT_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getVariantsByProductId
    {
      let url =
        BASE_URL + `/inventory/v1/fs/${fs_id}/product/variant/${product_id}`;
      let request = http.get(url);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/products/bundle/fs/{fs_id}/create", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: createBundle
    {
      let url =
        BASE_URL + `/v1/products/bundle/fs/${fs_id}/create?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = {
        bundle: {
          bundleName: "string",
          bundleType: "long",
          bundleStatus: "long",
          startTimeUnix: "long",
          warehouseId: "list",
          maxOrder: "long",
          stopTimeUnix: "long",
          originalQuota: "long",
          bundleItems: "list",
        },
      };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/chat/fs/{fs_id}/messages/{msg_id}/replies", () => {
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let msgId = "TODO_EDIT_THE_MSG_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getListReply
    {
      let url =
        BASE_URL +
        `/v1/chat/fs/${fs_id}/messages/${msg_id}/replies?shop_id=${shop_id}&page=${page}&per_page=${per_page}`;
      let request = http.get(url);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/token", () => {
    let grantType = "TODO_EDIT_THE_GRANT_TYPE"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: authentication
    {
      let url = BASE_URL + `/token?grant_type=${grant_type}`;
      let request = http.post(url);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/order/{order_id}/fs/{fs_id}/ack", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: acceptOrder
    {
      let url =
        BASE_URL +
        `/v1/order/${order_id}/fs/${fs_id}/ack?warehouse_id=${warehouse_id}`;
      let request = http.post(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v3/products/fs/{fs_id}/edit", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: editProductV3
    {
      let url = BASE_URL + `/v3/products/fs/${fs_id}/edit?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { products: "list" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.patch(url, JSON.stringify(body), params);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/logistic/fs/{fs_id}/active-info", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getActiveCourier
    {
      let url =
        BASE_URL + `/v1/logistic/fs/${fs_id}/active-info?shop_id=${shop_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/order/{order_id}/fs/{fs_id}/nack", () => {
    let orderId = "TODO_EDIT_THE_ORDER_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: rejectOrder
    {
      let url = BASE_URL + `/v1/order/${order_id}/fs/${fs_id}/nack`;
      // TODO: edit the parameters of the request body.
      let body = {
        reasonCode: "long",
        reason: "string",
        shopCloseEndDate: "string",
        shopCloseNote: "string",
        emptyProducts: "list",
      };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        Error: (r) => r.status === 200,
      });
    }
  });

  group("/v1/chat/fs/{fs_id}/messages/{msg_id}/reply", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let msgId = "TODO_EDIT_THE_MSG_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: sendReply
    {
      let url = BASE_URL + `/v1/chat/fs/${fs_id}/messages/${msg_id}/reply`;
      // TODO: edit the parameters of the request body.
      let body = {
        shopId: "long",
        message: "string",
        attachmentType: "long",
        payload: {
          thumbnail: "string",
          identifier: "string",
          title: "string",
          price: "string",
          url: "string",
        },
      };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/stock/decrement", () => {
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let requestId = "TODO_EDIT_THE_REQUEST_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updateStockDecrement
    {
      let url =
        BASE_URL +
        `/inventory/v1/fs/${fs_id}/stock/decrement?shop_id=${shop_id}&request_id=${request_id}&warehouse_id=${warehouse_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/showcase/fs/{fs_id}/get", () => {
    let pageCount = "TODO_EDIT_THE_PAGE_COUNT"; // specify value as there is no example value for this parameter in OpenAPI spec
    let display = "TODO_EDIT_THE_DISPLAY"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let hideZero = "TODO_EDIT_THE_HIDE_ZERO"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getShowcase
    {
      let url =
        BASE_URL +
        `/v1/showcase/fs/${fs_id}/get?shop_id=${shop_id}&page=${page}&page_count=${page_count}&hide_zero=${hide_zero}&display=${display}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v2/slash-price/fs/{fs_id}/view", () => {
    let perPage = "TODO_EDIT_THE_PER_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let productId = "TODO_EDIT_THE_PRODUCT_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let page = "TODO_EDIT_THE_PAGE"; // specify value as there is no example value for this parameter in OpenAPI spec
    let status = "TODO_EDIT_THE_STATUS"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: viewSlashPrice
    {
      let url =
        BASE_URL +
        `/v2/slash-price/fs/${fs_id}/view?shop_id=${shop_id}&warehouse_id=${warehouse_id}&product_id=${product_id}&page=${page}&per_page=${per_page}&status=${status}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/showcase/fs/{fs_id}/update", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updateShowcase
    {
      let url = BASE_URL + `/v1/showcase/fs/${fs_id}/update?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { id: "long", name: "string" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, JSON.stringify(body), params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/inventory/v1/fs/{fs_id}/price/update", () => {
    let warehouseId = "TODO_EDIT_THE_WAREHOUSE_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: updatePrice
    {
      let url =
        BASE_URL +
        `/inventory/v1/fs/${fs_id}/price/update?shop_id=${shop_id}&warehouse_id=${warehouse_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        OK: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v2/logistic/fs/{fs_id}/info", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: getShipmentInfo
    {
      let url = BASE_URL + `/v2/logistic/fs/${fs_id}/info?shop_id=${shop_id}`;
      let request = http.get(url);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v2/products/fs/{fs_id}/edit", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: editProductV2
    {
      let url = BASE_URL + `/v2/products/fs/${fs_id}/edit?shop_id=${shop_id}`;
      // TODO: edit the parameters of the request body.
      let body = { products: "list" };
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.patch(url, JSON.stringify(body), params);

      check(request, {
        "Default error": (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });

  group("/v1/slash-price/fs/{fs_id}/cancel", () => {
    let fsId = "TODO_EDIT_THE_FS_ID"; // specify value as there is no example value for this parameter in OpenAPI spec
    let shopId = "TODO_EDIT_THE_SHOP_ID"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: cancelSlashPrice
    {
      let url =
        BASE_URL + `/v1/slash-price/fs/${fs_id}/cancel?shop_id=${shop_id}`;
      let params = {
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
      };
      let request = http.post(url, params);

      check(request, {
        Error: (r) => r.status === 200,
      });
      check(request, {
        OK: (r) => r.status === 200,
      });
    }
  });
}
